{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./resources/js/utilities/file.utilities.js","webpack:///external \"angular\"","webpack:///./node_modules/ng-file-upload/index.js","webpack:///./node_modules/ng-file-upload/dist/ng-file-upload-all.js","webpack:///./resources/js/pages/samples/sample-files.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","download","url","iframe","document","createElement","src","style","display","body","appendChild","convertFileSize","bytes","isNaN","parseFloat","isFinite","Math","abs","units","u","length","toFixed","__webpack_exports__","angular","orig","patchXHR","fnName","newFn","window","XMLHttpRequest","redefineProp","xhr","prop","fn","e","FileAPI","shouldLoad","FormData","forceLoad","initializeUploadListener","__listeners","upload","origAddEventListener","addEventListener","apply","this","arguments","b","__url","message","indexOf","__origError","h","__fileApiXHR","getResponseHeader","getAllResponseHeaders","abort","header","val","Function","__requestHeaders","__isFileAPIShim","formData","config","jsonp","cache","complete","err","fileApiXHR","isString","__completed","load","type","loaded","__loaded","total","__total","target","lengthComputable","loadend","undefined","status","statusText","response","resp","responseText","onreadystatechange","onload","progress","_this","setTimeout","noContentTimeout","headers","data","files","item","size","hasFlash","append","__isFileAPIBlobShim","push","Blob","ActiveXObject","navigator","mimeTypes","getOffset","obj","left","top","jQuery","offset","offsetParent","offsetLeft","scrollLeft","offsetTop","scrollTop","html5","jsUrl","basePath","index","script","allScripts","getElementsByTagName","jsPath","search","substring","staticPath","setAttribute","ngfFixIE","elem","fileElem","changeFn","label","parent","attr","removeClass","unbind","evt","fileApiChangeFn","addClass","tagName","toLowerCase","isInputTypeFile","css","offsetWidth","offsetHeight","getFiles","__files_","disableFileInput","disable","FileReader","loadStarted","listeners","removeEventListener","splice","dispatchEvent","list","onabort","onerror","onloadstart","onloadend","onprogress","constructEvent","error","result","listener","readAsDataURL","file","readAsText","setRequestHeader","ngFileUpload","version","service","$http","$q","$timeout","promisesCount","isResumeSupported","slice","resumeSupported","sendHttp","method","deferred","_deferred","defer","promise","notifyProgress","notify","progressFunc","getNotifyEvent","_start","_file","uploadWithAngular","then","_chunkSize","_finished","fileSize","min","_end","resolve","reject","disableProgress","__setXHR_","__XHR","xhrFn","resumeSizeUrl","resumeSizeResponseReader","parseInt","toString","resumeSize","success","pause","origXhrFn","copy","clone","isUploadInProgress","rename","ngfName","jsonBlob","JSON","stringify","blob","_ngfBlob","json","toJson","isFile","flashId","internal","addFieldToFormData","isDate","toISOString","floor","toResumeFile","split","replace","_fileKey","isObject","$$ngfCircularDetection","k","objectKey","arrayKey","_isDigested","translateScalars","resumeChunkSize","transformRequest","isArray","fields","formDataAppender","http","ArrayBuffer","defaults","str","urlToBlob","responseType","arrayBufferView","Uint8Array","matches","match","setDefaults","$parse","$compile","UploadExif","resizeWithParams","params","scope","ngModel","promises","emptyPromise","handleFile","f","pattern","validatePattern","resizeIf","width","height","attrGetter","$width","$height","$file","resize","resizedFile","$error","$errorMessages","$errorParam","$ngfValidations","valid","applyModelValidation","all","getAttrWithDefaults","def","attrVal","shouldUpdateOn","modelOptions","updateOn","args","rejectPromise","happyPromise","updateModel","fileChange","noDelay","update","invalidFiles","newFiles","dupFiles","isSingleModel","$$ngfPrevValidFiles","$$ngfPrevInvalidFiles","invalidFile","$setViewValue","$files","$newFiles","$duplicateFiles","$invalidFiles","$invalidFile","$event","invalidModel","assign","allNewFiles","prevValidFiles","prevInvalidFiles","v","invalids","valids","resizeAndUpdate","keep","concat","options","debounce","change","resizingFiles","validateAfterResize","resizeVal","isResizeSupported","resizeFile","validate","validationResult","validsFiles","invalidsFiles","$modelValue","equals","f1","f2","$ngfOrigSize","isInPrevFiles","j","removeDuplicates","allowInvalid","validFiles","isExifSupported","forEach","applyExifRotation","fixedFile","applyExifRotations","directive","Upload","generatedElems","linkFileSelect","fileChangeAttr","fileList","registerModelChangeValidator","unwatches","$watch","$observe","initialTouchStartY","initialTouchStartX","resetModel","element","updateId","attributes","attribute","bindAttrToFileInput","el","ref","createFileInput","touches","changedTouches","originalEvent","clientX","clientY","currentX","currentY","stopPropagation","preventDefault","detectSwipe","contains","ua","androidFixMinorVersion","test","isDelayedClickSupported","userAgent","click","appVersion","ie10SameFileSelectFix","parentNode","replaceWith","removeAttr","$formatters","$on","remove","unwatch","g","restrict","require","link","linkFileDirective","directiveName","resizeParams","isBackground","constructDataUrl","disallowObjectUrl","dataUrl","$ngfDataUrl","$ngfBlobUrl","naturalWidth","clientWidth","naturalHeight","clientHeight","getComputedStyle","UploadBase","base64DataUrl","count","urls","ff","$$ngfDataUrlPromise","$$ngfBlobUrlPromise","URL","webkitURL","createObjectURL","blobUrls","blobUrlsTotalSize","maxMemory","blobUrlsMaxMemory","maxLength","blobUrlsMaxQueueSize","revokeObjectURL","fileReader","$compileProvider","imgSrcSanitizationWhitelist","aHrefSanitizationWhitelist","filter","UploadDataUrl","$sce","trustedUrl","trustAsResourceUrl","$ngfDataUrlFilterInProgress","globStringToRegex","regexp","excludes","RegExp","len","exclude","ratioToFloat","xIndex","$dirty","filesArray","$setDirty","markModelAsDirty","validation","$setValidity","getValidationAttr","validationName","dName","toUpperCase","substr","prevLength","ignoredErrors","runAllValidation","validateSync","totalSize","validateAsync","asyncFn","resolveResult","resolveInternal","imageDimensions","mediaDuration","$duration","deffer","values","isValid","$ngfWidth","$ngfHeight","$ngfDimensionPromise","img","on","secondsCounter","checkLoadErrorInCaseOfNoCallback","$ngfDuration","$ngfDurationPromise","duration","checkLoadError","UploadValidate","imagen","quality","ratio","centerCrop","canvasElement","imageElement","imgWidth","imgHeight","removeChild","ratioFloat","dimensions","srcWidth","srcHeight","maxWidth","maxHeight","max","marginX","marginY","calculateAspectRatioFit","getContext","drawImage","toDataURL","dataUrltoBlob","dataurl","origSize","arr","mime","bstr","atob","u8arr","charCodeAt","$ngfName","set","configurable","restoreExif","dropAvailable","div","$window","available","isDisabled","actualDragOverClass","leaveTimeout","dragOverDelay","dataTransfer","effectAllowed","dropEffect","cancel","callback","dClass","delay","accept","items","calculateDragOverClass","clazz","$isDragging","$class","extractFilesAndUpdateModel","clipboardData","metaKey","ctrlKey","source","updateOnType","html","getData","allowDir","multiple","maxFiles","Number","MAX_VALUE","maxTotalSize","includeDir","traverseFileTree","entry","path","isDirectory","dirReader","createReader","entries","readEntries","results","Array","location","protocol","webkitGetAsEntry","getAsFile","extractFiles","extractFilesFromHtml","linkDrop","model","UploadResize","readAsArrayBuffer","readOrientation","reader","slicedFile","orientation","view","DataView","getUint16","byteLength","marker","getUint32","little","tags","setUint16","fixedArrayBuffer","canvas","ctx","transform","applyTransform","buffer","binary","String","fromCharCode","btoa","arrayBufferToBase64","resized","ExifRestorer","KEY_STR","encode64","input","chr1","chr2","enc1","enc2","enc3","output","chr3","enc4","charAt","restore","origFileBase64","resizedFileBase64","rawImage","decode64","segments","slice2Segments","image","exifManipulation","exifArray","getExifArray","newImageArray","insertExif","seg","x","imageData","buf","separatePoint","mae","ato","array","rawImageArray","head","endPoint","exec","console","log","_utilities_file_utilities__WEBPACK_IMPORTED_MODULE_0__","filesModule","controller","$uibModal","fileUpload","vm","uploadGoodFiles","uploading","onbeforeunload","PAGE","i18n","leaving","URLS","reload","processing","errorMessage","error_message","uploadFiles","fastqregex","goodFiles","badFiles","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","iterator","next","done","return","open","animation","templateUrl","controllerAs","$uibModalInstance","rejects","good","dismiss","finish","close","selected","deleteFile","id","fileId","requires"],"mappings":"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","file":"js/sample-files.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/resources/dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 919);\n","/**\n * DEPRECATED - this can be replaced by using the download attribute on an anchor element.\n *\n * Creates a new iFrame to download a file into.\n * @param {string} url to download file from.\n */\nexport function download(url) {\n  const iframe = document.createElement(\"iframe\");\n  iframe.src = url;\n  iframe.style.display = \"none\";\n  document.body.appendChild(iframe);\n}\n\n/**\n * Convert file size from bytes to larger unit.\n * @param {number} bytes size of file.\n * @return {string} converted file size;\n */\nexport function convertFileSize(bytes) {\n  if (isNaN(parseFloat(bytes)) || !isFinite(bytes)) {\n    return bytes;\n  }\n  const thresh = 1024;\n  if (Math.abs(bytes) < thresh) {\n    return bytes + \" B\";\n  }\n  const units = [\"kB\", \"MB\", \"GB\"];\n  let u = -1;\n  do {\n    bytes /= thresh;\n    ++u;\n  } while (Math.abs(bytes) >= thresh && u < units.length - 1);\n  return bytes.toFixed(1) + \" \" + units[u];\n}\n","module.exports = angular;","require('./dist/ng-file-upload-all');\nmodule.exports = 'ngFileUpload';","/**!\n * AngularJS file upload directives and services. Supports: file upload/drop/paste, resume, cancel/abort,\n * progress, resize, thumbnail, preview, validation and CORS\n * FileAPI Flash shim for old browsers not supporting FormData\n * @author  Danial  <danial.farid@gmail.com>\n * @version 12.2.13\n */\n\n(function () {\n  /** @namespace FileAPI.noContentTimeout */\n\n  function patchXHR(fnName, newFn) {\n    window.XMLHttpRequest.prototype[fnName] = newFn(window.XMLHttpRequest.prototype[fnName]);\n  }\n\n  function redefineProp(xhr, prop, fn) {\n    try {\n      Object.defineProperty(xhr, prop, {get: fn});\n    } catch (e) {/*ignore*/\n    }\n  }\n\n  if (!window.FileAPI) {\n    window.FileAPI = {};\n  }\n\n  if (!window.XMLHttpRequest) {\n    throw 'AJAX is not supported. XMLHttpRequest is not defined.';\n  }\n\n  FileAPI.shouldLoad = !window.FormData || FileAPI.forceLoad;\n  if (FileAPI.shouldLoad) {\n    var initializeUploadListener = function (xhr) {\n      if (!xhr.__listeners) {\n        if (!xhr.upload) xhr.upload = {};\n        xhr.__listeners = [];\n        var origAddEventListener = xhr.upload.addEventListener;\n        xhr.upload.addEventListener = function (t, fn) {\n          xhr.__listeners[t] = fn;\n          if (origAddEventListener) origAddEventListener.apply(this, arguments);\n        };\n      }\n    };\n\n    patchXHR('open', function (orig) {\n      return function (m, url, b) {\n        initializeUploadListener(this);\n        this.__url = url;\n        try {\n          orig.apply(this, [m, url, b]);\n        } catch (e) {\n          if (e.message.indexOf('Access is denied') > -1) {\n            this.__origError = e;\n            orig.apply(this, [m, '_fix_for_ie_crossdomain__', b]);\n          }\n        }\n      };\n    });\n\n    patchXHR('getResponseHeader', function (orig) {\n      return function (h) {\n        return this.__fileApiXHR && this.__fileApiXHR.getResponseHeader ? this.__fileApiXHR.getResponseHeader(h) : (orig == null ? null : orig.apply(this, [h]));\n      };\n    });\n\n    patchXHR('getAllResponseHeaders', function (orig) {\n      return function () {\n        return this.__fileApiXHR && this.__fileApiXHR.getAllResponseHeaders ? this.__fileApiXHR.getAllResponseHeaders() : (orig == null ? null : orig.apply(this));\n      };\n    });\n\n    patchXHR('abort', function (orig) {\n      return function () {\n        return this.__fileApiXHR && this.__fileApiXHR.abort ? this.__fileApiXHR.abort() : (orig == null ? null : orig.apply(this));\n      };\n    });\n\n    patchXHR('setRequestHeader', function (orig) {\n      return function (header, value) {\n        if (header === '__setXHR_') {\n          initializeUploadListener(this);\n          var val = value(this);\n          // fix for angular < 1.2.0\n          if (val instanceof Function) {\n            val(this);\n          }\n        } else {\n          this.__requestHeaders = this.__requestHeaders || {};\n          this.__requestHeaders[header] = value;\n          orig.apply(this, arguments);\n        }\n      };\n    });\n\n    patchXHR('send', function (orig) {\n      return function () {\n        var xhr = this;\n        if (arguments[0] && arguments[0].__isFileAPIShim) {\n          var formData = arguments[0];\n          var config = {\n            url: xhr.__url,\n            jsonp: false, //removes the callback form param\n            cache: true, //removes the ?fileapiXXX in the url\n            complete: function (err, fileApiXHR) {\n              if (err && angular.isString(err) && err.indexOf('#2174') !== -1) {\n                // this error seems to be fine the file is being uploaded properly.\n                err = null;\n              }\n              xhr.__completed = true;\n              if (!err && xhr.__listeners.load)\n                xhr.__listeners.load({\n                  type: 'load',\n                  loaded: xhr.__loaded,\n                  total: xhr.__total,\n                  target: xhr,\n                  lengthComputable: true\n                });\n              if (!err && xhr.__listeners.loadend)\n                xhr.__listeners.loadend({\n                  type: 'loadend',\n                  loaded: xhr.__loaded,\n                  total: xhr.__total,\n                  target: xhr,\n                  lengthComputable: true\n                });\n              if (err === 'abort' && xhr.__listeners.abort)\n                xhr.__listeners.abort({\n                  type: 'abort',\n                  loaded: xhr.__loaded,\n                  total: xhr.__total,\n                  target: xhr,\n                  lengthComputable: true\n                });\n              if (fileApiXHR.status !== undefined) redefineProp(xhr, 'status', function () {\n                return (fileApiXHR.status === 0 && err && err !== 'abort') ? 500 : fileApiXHR.status;\n              });\n              if (fileApiXHR.statusText !== undefined) redefineProp(xhr, 'statusText', function () {\n                return fileApiXHR.statusText;\n              });\n              redefineProp(xhr, 'readyState', function () {\n                return 4;\n              });\n              if (fileApiXHR.response !== undefined) redefineProp(xhr, 'response', function () {\n                return fileApiXHR.response;\n              });\n              var resp = fileApiXHR.responseText || (err && fileApiXHR.status === 0 && err !== 'abort' ? err : undefined);\n              redefineProp(xhr, 'responseText', function () {\n                return resp;\n              });\n              redefineProp(xhr, 'response', function () {\n                return resp;\n              });\n              if (err) redefineProp(xhr, 'err', function () {\n                return err;\n              });\n              xhr.__fileApiXHR = fileApiXHR;\n              if (xhr.onreadystatechange) xhr.onreadystatechange();\n              if (xhr.onload) xhr.onload();\n            },\n            progress: function (e) {\n              e.target = xhr;\n              if (xhr.__listeners.progress) xhr.__listeners.progress(e);\n              xhr.__total = e.total;\n              xhr.__loaded = e.loaded;\n              if (e.total === e.loaded) {\n                // fix flash issue that doesn't call complete if there is no response text from the server\n                var _this = this;\n                setTimeout(function () {\n                  if (!xhr.__completed) {\n                    xhr.getAllResponseHeaders = function () {\n                    };\n                    _this.complete(null, {status: 204, statusText: 'No Content'});\n                  }\n                }, FileAPI.noContentTimeout || 10000);\n              }\n            },\n            headers: xhr.__requestHeaders\n          };\n          config.data = {};\n          config.files = {};\n          for (var i = 0; i < formData.data.length; i++) {\n            var item = formData.data[i];\n            if (item.val != null && item.val.name != null && item.val.size != null && item.val.type != null) {\n              config.files[item.key] = item.val;\n            } else {\n              config.data[item.key] = item.val;\n            }\n          }\n\n          setTimeout(function () {\n            if (!FileAPI.hasFlash) {\n              throw 'Adode Flash Player need to be installed. To check ahead use \"FileAPI.hasFlash\"';\n            }\n            xhr.__fileApiXHR = FileAPI.upload(config);\n          }, 1);\n        } else {\n          if (this.__origError) {\n            throw this.__origError;\n          }\n          orig.apply(xhr, arguments);\n        }\n      };\n    });\n    window.XMLHttpRequest.__isFileAPIShim = true;\n    window.FormData = FormData = function () {\n      return {\n        append: function (key, val, name) {\n          if (val.__isFileAPIBlobShim) {\n            val = val.data[0];\n          }\n          this.data.push({\n            key: key,\n            val: val,\n            name: name\n          });\n        },\n        data: [],\n        __isFileAPIShim: true\n      };\n    };\n\n    window.Blob = Blob = function (b) {\n      return {\n        data: b,\n        __isFileAPIBlobShim: true\n      };\n    };\n  }\n\n})();\n\n(function () {\n  /** @namespace FileAPI.forceLoad */\n  /** @namespace window.FileAPI.jsUrl */\n  /** @namespace window.FileAPI.jsPath */\n\n  function isInputTypeFile(elem) {\n    return elem[0].tagName.toLowerCase() === 'input' && elem.attr('type') && elem.attr('type').toLowerCase() === 'file';\n  }\n\n  function hasFlash() {\n    try {\n      var fo = new ActiveXObject('ShockwaveFlash.ShockwaveFlash');\n      if (fo) return true;\n    } catch (e) {\n      if (navigator.mimeTypes['application/x-shockwave-flash'] !== undefined) return true;\n    }\n    return false;\n  }\n\n  function getOffset(obj) {\n    var left = 0, top = 0;\n\n    if (window.jQuery) {\n      return jQuery(obj).offset();\n    }\n\n    if (obj.offsetParent) {\n      do {\n        left += (obj.offsetLeft - obj.scrollLeft);\n        top += (obj.offsetTop - obj.scrollTop);\n        obj = obj.offsetParent;\n      } while (obj);\n    }\n    return {\n      left: left,\n      top: top\n    };\n  }\n\n  if (FileAPI.shouldLoad) {\n    FileAPI.hasFlash = hasFlash();\n\n    //load FileAPI\n    if (FileAPI.forceLoad) {\n      FileAPI.html5 = false;\n    }\n\n    if (!FileAPI.upload) {\n      var jsUrl, basePath, script = document.createElement('script'), allScripts = document.getElementsByTagName('script'), i, index, src;\n      if (window.FileAPI.jsUrl) {\n        jsUrl = window.FileAPI.jsUrl;\n      } else if (window.FileAPI.jsPath) {\n        basePath = window.FileAPI.jsPath;\n      } else {\n        for (i = 0; i < allScripts.length; i++) {\n          src = allScripts[i].src;\n          index = src.search(/\\/ng\\-file\\-upload[\\-a-zA-z0-9\\.]*\\.js/);\n          if (index > -1) {\n            basePath = src.substring(0, index + 1);\n            break;\n          }\n        }\n      }\n\n      if (FileAPI.staticPath == null) FileAPI.staticPath = basePath;\n      script.setAttribute('src', jsUrl || basePath + 'FileAPI.min.js');\n      document.getElementsByTagName('head')[0].appendChild(script);\n    }\n\n    FileAPI.ngfFixIE = function (elem, fileElem, changeFn) {\n      if (!hasFlash()) {\n        throw 'Adode Flash Player need to be installed. To check ahead use \"FileAPI.hasFlash\"';\n      }\n      var fixInputStyle = function () {\n        var label = fileElem.parent();\n        if (elem.attr('disabled')) {\n          if (label) label.removeClass('js-fileapi-wrapper');\n        } else {\n          if (!fileElem.attr('__ngf_flash_')) {\n            fileElem.unbind('change');\n            fileElem.unbind('click');\n            fileElem.bind('change', function (evt) {\n              fileApiChangeFn.apply(this, [evt]);\n              changeFn.apply(this, [evt]);\n            });\n            fileElem.attr('__ngf_flash_', 'true');\n          }\n          label.addClass('js-fileapi-wrapper');\n          if (!isInputTypeFile(elem)) {\n            label.css('position', 'absolute')\n              .css('top', getOffset(elem[0]).top + 'px').css('left', getOffset(elem[0]).left + 'px')\n              .css('width', elem[0].offsetWidth + 'px').css('height', elem[0].offsetHeight + 'px')\n              .css('filter', 'alpha(opacity=0)').css('display', elem.css('display'))\n              .css('overflow', 'hidden').css('z-index', '900000')\n              .css('visibility', 'visible');\n            fileElem.css('width', elem[0].offsetWidth + 'px').css('height', elem[0].offsetHeight + 'px')\n              .css('position', 'absolute').css('top', '0px').css('left', '0px');\n          }\n        }\n      };\n\n      elem.bind('mouseenter', fixInputStyle);\n\n      var fileApiChangeFn = function (evt) {\n        var files = FileAPI.getFiles(evt);\n        //just a double check for #233\n        for (var i = 0; i < files.length; i++) {\n          if (files[i].size === undefined) files[i].size = 0;\n          if (files[i].name === undefined) files[i].name = 'file';\n          if (files[i].type === undefined) files[i].type = 'undefined';\n        }\n        if (!evt.target) {\n          evt.target = {};\n        }\n        evt.target.files = files;\n        // if evt.target.files is not writable use helper field\n        if (evt.target.files !== files) {\n          evt.__files_ = files;\n        }\n        (evt.__files_ || evt.target.files).item = function (i) {\n          return (evt.__files_ || evt.target.files)[i] || null;\n        };\n      };\n    };\n\n    FileAPI.disableFileInput = function (elem, disable) {\n      if (disable) {\n        elem.removeClass('js-fileapi-wrapper');\n      } else {\n        elem.addClass('js-fileapi-wrapper');\n      }\n    };\n  }\n})();\n\nif (!window.FileReader) {\n  window.FileReader = function () {\n    var _this = this, loadStarted = false;\n    this.listeners = {};\n    this.addEventListener = function (type, fn) {\n      _this.listeners[type] = _this.listeners[type] || [];\n      _this.listeners[type].push(fn);\n    };\n    this.removeEventListener = function (type, fn) {\n      if (_this.listeners[type]) _this.listeners[type].splice(_this.listeners[type].indexOf(fn), 1);\n    };\n    this.dispatchEvent = function (evt) {\n      var list = _this.listeners[evt.type];\n      if (list) {\n        for (var i = 0; i < list.length; i++) {\n          list[i].call(_this, evt);\n        }\n      }\n    };\n    this.onabort = this.onerror = this.onload = this.onloadstart = this.onloadend = this.onprogress = null;\n\n    var constructEvent = function (type, evt) {\n      var e = {type: type, target: _this, loaded: evt.loaded, total: evt.total, error: evt.error};\n      if (evt.result != null) e.target.result = evt.result;\n      return e;\n    };\n    var listener = function (evt) {\n      if (!loadStarted) {\n        loadStarted = true;\n        if (_this.onloadstart) _this.onloadstart(constructEvent('loadstart', evt));\n      }\n      var e;\n      if (evt.type === 'load') {\n        if (_this.onloadend) _this.onloadend(constructEvent('loadend', evt));\n        e = constructEvent('load', evt);\n        if (_this.onload) _this.onload(e);\n        _this.dispatchEvent(e);\n      } else if (evt.type === 'progress') {\n        e = constructEvent('progress', evt);\n        if (_this.onprogress) _this.onprogress(e);\n        _this.dispatchEvent(e);\n      } else {\n        e = constructEvent('error', evt);\n        if (_this.onerror) _this.onerror(e);\n        _this.dispatchEvent(e);\n      }\n    };\n    this.readAsDataURL = function (file) {\n      FileAPI.readAsDataURL(file, listener);\n    };\n    this.readAsText = function (file) {\n      FileAPI.readAsText(file, listener);\n    };\n  };\n}\n\n/**!\n * AngularJS file upload directives and services. Supoorts: file upload/drop/paste, resume, cancel/abort,\n * progress, resize, thumbnail, preview, validation and CORS\n * @author  Danial  <danial.farid@gmail.com>\n * @version 12.2.13\n */\n\nif (window.XMLHttpRequest && !(window.FileAPI && FileAPI.shouldLoad)) {\n  window.XMLHttpRequest.prototype.setRequestHeader = (function (orig) {\n    return function (header, value) {\n      if (header === '__setXHR_') {\n        var val = value(this);\n        // fix for angular < 1.2.0\n        if (val instanceof Function) {\n          val(this);\n        }\n      } else {\n        orig.apply(this, arguments);\n      }\n    };\n  })(window.XMLHttpRequest.prototype.setRequestHeader);\n}\n\nvar ngFileUpload = angular.module('ngFileUpload', []);\n\nngFileUpload.version = '12.2.13';\n\nngFileUpload.service('UploadBase', ['$http', '$q', '$timeout', function ($http, $q, $timeout) {\n  var upload = this;\n  upload.promisesCount = 0;\n\n  this.isResumeSupported = function () {\n    return window.Blob && window.Blob.prototype.slice;\n  };\n\n  var resumeSupported = this.isResumeSupported();\n\n  function sendHttp(config) {\n    config.method = config.method || 'POST';\n    config.headers = config.headers || {};\n\n    var deferred = config._deferred = config._deferred || $q.defer();\n    var promise = deferred.promise;\n\n    function notifyProgress(e) {\n      if (deferred.notify) {\n        deferred.notify(e);\n      }\n      if (promise.progressFunc) {\n        $timeout(function () {\n          promise.progressFunc(e);\n        });\n      }\n    }\n\n    function getNotifyEvent(n) {\n      if (config._start != null && resumeSupported) {\n        return {\n          loaded: n.loaded + config._start,\n          total: (config._file && config._file.size) || n.total,\n          type: n.type, config: config,\n          lengthComputable: true, target: n.target\n        };\n      } else {\n        return n;\n      }\n    }\n\n    if (!config.disableProgress) {\n      config.headers.__setXHR_ = function () {\n        return function (xhr) {\n          if (!xhr || !xhr.upload || !xhr.upload.addEventListener) return;\n          config.__XHR = xhr;\n          if (config.xhrFn) config.xhrFn(xhr);\n          xhr.upload.addEventListener('progress', function (e) {\n            e.config = config;\n            notifyProgress(getNotifyEvent(e));\n          }, false);\n          //fix for firefox not firing upload progress end, also IE8-9\n          xhr.upload.addEventListener('load', function (e) {\n            if (e.lengthComputable) {\n              e.config = config;\n              notifyProgress(getNotifyEvent(e));\n            }\n          }, false);\n        };\n      };\n    }\n\n    function uploadWithAngular() {\n      $http(config).then(function (r) {\n          if (resumeSupported && config._chunkSize && !config._finished && config._file) {\n            var fileSize = config._file && config._file.size || 0;\n            notifyProgress({\n                loaded: Math.min(config._end, fileSize),\n                total: fileSize,\n                config: config,\n                type: 'progress'\n              }\n            );\n            upload.upload(config, true);\n          } else {\n            if (config._finished) delete config._finished;\n            deferred.resolve(r);\n          }\n        }, function (e) {\n          deferred.reject(e);\n        }, function (n) {\n          deferred.notify(n);\n        }\n      );\n    }\n\n    if (!resumeSupported) {\n      uploadWithAngular();\n    } else if (config._chunkSize && config._end && !config._finished) {\n      config._start = config._end;\n      config._end += config._chunkSize;\n      uploadWithAngular();\n    } else if (config.resumeSizeUrl) {\n      $http.get(config.resumeSizeUrl).then(function (resp) {\n        if (config.resumeSizeResponseReader) {\n          config._start = config.resumeSizeResponseReader(resp.data);\n        } else {\n          config._start = parseInt((resp.data.size == null ? resp.data : resp.data.size).toString());\n        }\n        if (config._chunkSize) {\n          config._end = config._start + config._chunkSize;\n        }\n        uploadWithAngular();\n      }, function (e) {\n        throw e;\n      });\n    } else if (config.resumeSize) {\n      config.resumeSize().then(function (size) {\n        config._start = size;\n        if (config._chunkSize) {\n          config._end = config._start + config._chunkSize;\n        }\n        uploadWithAngular();\n      }, function (e) {\n        throw e;\n      });\n    } else {\n      if (config._chunkSize) {\n        config._start = 0;\n        config._end = config._start + config._chunkSize;\n      }\n      uploadWithAngular();\n    }\n\n\n    promise.success = function (fn) {\n      promise.then(function (response) {\n        fn(response.data, response.status, response.headers, config);\n      });\n      return promise;\n    };\n\n    promise.error = function (fn) {\n      promise.then(null, function (response) {\n        fn(response.data, response.status, response.headers, config);\n      });\n      return promise;\n    };\n\n    promise.progress = function (fn) {\n      promise.progressFunc = fn;\n      promise.then(null, null, function (n) {\n        fn(n);\n      });\n      return promise;\n    };\n    promise.abort = promise.pause = function () {\n      if (config.__XHR) {\n        $timeout(function () {\n          config.__XHR.abort();\n        });\n      }\n      return promise;\n    };\n    promise.xhr = function (fn) {\n      config.xhrFn = (function (origXhrFn) {\n        return function () {\n          if (origXhrFn) origXhrFn.apply(promise, arguments);\n          fn.apply(promise, arguments);\n        };\n      })(config.xhrFn);\n      return promise;\n    };\n\n    upload.promisesCount++;\n    if (promise['finally'] && promise['finally'] instanceof Function) {\n      promise['finally'](function () {\n        upload.promisesCount--;\n      });\n    }\n    return promise;\n  }\n\n  this.isUploadInProgress = function () {\n    return upload.promisesCount > 0;\n  };\n\n  this.rename = function (file, name) {\n    file.ngfName = name;\n    return file;\n  };\n\n  this.jsonBlob = function (val) {\n    if (val != null && !angular.isString(val)) {\n      val = JSON.stringify(val);\n    }\n    var blob = new window.Blob([val], {type: 'application/json'});\n    blob._ngfBlob = true;\n    return blob;\n  };\n\n  this.json = function (val) {\n    return angular.toJson(val);\n  };\n\n  function copy(obj) {\n    var clone = {};\n    for (var key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        clone[key] = obj[key];\n      }\n    }\n    return clone;\n  }\n\n  this.isFile = function (file) {\n    return file != null && (file instanceof window.Blob || (file.flashId && file.name && file.size));\n  };\n\n  this.upload = function (config, internal) {\n    function toResumeFile(file, formData) {\n      if (file._ngfBlob) return file;\n      config._file = config._file || file;\n      if (config._start != null && resumeSupported) {\n        if (config._end && config._end >= file.size) {\n          config._finished = true;\n          config._end = file.size;\n        }\n        var slice = file.slice(config._start, config._end || file.size);\n        slice.name = file.name;\n        slice.ngfName = file.ngfName;\n        if (config._chunkSize) {\n          formData.append('_chunkSize', config._chunkSize);\n          formData.append('_currentChunkSize', config._end - config._start);\n          formData.append('_chunkNumber', Math.floor(config._start / config._chunkSize));\n          formData.append('_totalSize', config._file.size);\n        }\n        return slice;\n      }\n      return file;\n    }\n\n    function addFieldToFormData(formData, val, key) {\n      if (val !== undefined) {\n        if (angular.isDate(val)) {\n          val = val.toISOString();\n        }\n        if (angular.isString(val)) {\n          formData.append(key, val);\n        } else if (upload.isFile(val)) {\n          var file = toResumeFile(val, formData);\n          var split = key.split(',');\n          if (split[1]) {\n            file.ngfName = split[1].replace(/^\\s+|\\s+$/g, '');\n            key = split[0];\n          }\n          config._fileKey = config._fileKey || key;\n          formData.append(key, file, file.ngfName || file.name);\n        } else {\n          if (angular.isObject(val)) {\n            if (val.$$ngfCircularDetection) throw 'ngFileUpload: Circular reference in config.data. Make sure specified data for Upload.upload() has no circular reference: ' + key;\n\n            val.$$ngfCircularDetection = true;\n            try {\n              for (var k in val) {\n                if (val.hasOwnProperty(k) && k !== '$$ngfCircularDetection') {\n                  var objectKey = config.objectKey == null ? '[i]' : config.objectKey;\n                  if (val.length && parseInt(k) > -1) {\n                    objectKey = config.arrayKey == null ? objectKey : config.arrayKey;\n                  }\n                  addFieldToFormData(formData, val[k], key + objectKey.replace(/[ik]/g, k));\n                }\n              }\n            } finally {\n              delete val.$$ngfCircularDetection;\n            }\n          } else {\n            formData.append(key, val);\n          }\n        }\n      }\n    }\n\n    function digestConfig() {\n      config._chunkSize = upload.translateScalars(config.resumeChunkSize);\n      config._chunkSize = config._chunkSize ? parseInt(config._chunkSize.toString()) : null;\n\n      config.headers = config.headers || {};\n      config.headers['Content-Type'] = undefined;\n      config.transformRequest = config.transformRequest ?\n        (angular.isArray(config.transformRequest) ?\n          config.transformRequest : [config.transformRequest]) : [];\n      config.transformRequest.push(function (data) {\n        var formData = new window.FormData(), key;\n        data = data || config.fields || {};\n        if (config.file) {\n          data.file = config.file;\n        }\n        for (key in data) {\n          if (data.hasOwnProperty(key)) {\n            var val = data[key];\n            if (config.formDataAppender) {\n              config.formDataAppender(formData, key, val);\n            } else {\n              addFieldToFormData(formData, val, key);\n            }\n          }\n        }\n\n        return formData;\n      });\n    }\n\n    if (!internal) config = copy(config);\n    if (!config._isDigested) {\n      config._isDigested = true;\n      digestConfig();\n    }\n\n    return sendHttp(config);\n  };\n\n  this.http = function (config) {\n    config = copy(config);\n    config.transformRequest = config.transformRequest || function (data) {\n        if ((window.ArrayBuffer && data instanceof window.ArrayBuffer) || data instanceof window.Blob) {\n          return data;\n        }\n        return $http.defaults.transformRequest[0].apply(this, arguments);\n      };\n    config._chunkSize = upload.translateScalars(config.resumeChunkSize);\n    config._chunkSize = config._chunkSize ? parseInt(config._chunkSize.toString()) : null;\n\n    return sendHttp(config);\n  };\n\n  this.translateScalars = function (str) {\n    if (angular.isString(str)) {\n      if (str.search(/kb/i) === str.length - 2) {\n        return parseFloat(str.substring(0, str.length - 2) * 1024);\n      } else if (str.search(/mb/i) === str.length - 2) {\n        return parseFloat(str.substring(0, str.length - 2) * 1048576);\n      } else if (str.search(/gb/i) === str.length - 2) {\n        return parseFloat(str.substring(0, str.length - 2) * 1073741824);\n      } else if (str.search(/b/i) === str.length - 1) {\n        return parseFloat(str.substring(0, str.length - 1));\n      } else if (str.search(/s/i) === str.length - 1) {\n        return parseFloat(str.substring(0, str.length - 1));\n      } else if (str.search(/m/i) === str.length - 1) {\n        return parseFloat(str.substring(0, str.length - 1) * 60);\n      } else if (str.search(/h/i) === str.length - 1) {\n        return parseFloat(str.substring(0, str.length - 1) * 3600);\n      }\n    }\n    return str;\n  };\n\n  this.urlToBlob = function(url) {\n    var defer = $q.defer();\n    $http({url: url, method: 'get', responseType: 'arraybuffer'}).then(function (resp) {\n      var arrayBufferView = new Uint8Array(resp.data);\n      var type = resp.headers('content-type') || 'image/WebP';\n      var blob = new window.Blob([arrayBufferView], {type: type});\n      var matches = url.match(/.*\\/(.+?)(\\?.*)?$/);\n      if (matches.length > 1) {\n        blob.name = matches[1];\n      }\n      defer.resolve(blob);\n    }, function (e) {\n      defer.reject(e);\n    });\n    return defer.promise;\n  };\n\n  this.setDefaults = function (defaults) {\n    this.defaults = defaults || {};\n  };\n\n  this.defaults = {};\n  this.version = ngFileUpload.version;\n}\n\n]);\n\nngFileUpload.service('Upload', ['$parse', '$timeout', '$compile', '$q', 'UploadExif', function ($parse, $timeout, $compile, $q, UploadExif) {\n  var upload = UploadExif;\n  upload.getAttrWithDefaults = function (attr, name) {\n    if (attr[name] != null) return attr[name];\n    var def = upload.defaults[name];\n    return (def == null ? def : (angular.isString(def) ? def : JSON.stringify(def)));\n  };\n\n  upload.attrGetter = function (name, attr, scope, params) {\n    var attrVal = this.getAttrWithDefaults(attr, name);\n    if (scope) {\n      try {\n        if (params) {\n          return $parse(attrVal)(scope, params);\n        } else {\n          return $parse(attrVal)(scope);\n        }\n      } catch (e) {\n        // hangle string value without single qoute\n        if (name.search(/min|max|pattern/i)) {\n          return attrVal;\n        } else {\n          throw e;\n        }\n      }\n    } else {\n      return attrVal;\n    }\n  };\n\n  upload.shouldUpdateOn = function (type, attr, scope) {\n    var modelOptions = upload.attrGetter('ngfModelOptions', attr, scope);\n    if (modelOptions && modelOptions.updateOn) {\n      return modelOptions.updateOn.split(' ').indexOf(type) > -1;\n    }\n    return true;\n  };\n\n  upload.emptyPromise = function () {\n    var d = $q.defer();\n    var args = arguments;\n    $timeout(function () {\n      d.resolve.apply(d, args);\n    });\n    return d.promise;\n  };\n\n  upload.rejectPromise = function () {\n    var d = $q.defer();\n    var args = arguments;\n    $timeout(function () {\n      d.reject.apply(d, args);\n    });\n    return d.promise;\n  };\n\n  upload.happyPromise = function (promise, data) {\n    var d = $q.defer();\n    promise.then(function (result) {\n      d.resolve(result);\n    }, function (error) {\n      $timeout(function () {\n        throw error;\n      });\n      d.resolve(data);\n    });\n    return d.promise;\n  };\n\n  function applyExifRotations(files, attr, scope) {\n    var promises = [upload.emptyPromise()];\n    angular.forEach(files, function (f, i) {\n      if (f.type.indexOf('image/jpeg') === 0 && upload.attrGetter('ngfFixOrientation', attr, scope, {$file: f})) {\n        promises.push(upload.happyPromise(upload.applyExifRotation(f), f).then(function (fixedFile) {\n          files.splice(i, 1, fixedFile);\n        }));\n      }\n    });\n    return $q.all(promises);\n  }\n\n  function resizeFile(files, attr, scope, ngModel) {\n    var resizeVal = upload.attrGetter('ngfResize', attr, scope);\n    if (!resizeVal || !upload.isResizeSupported() || !files.length) return upload.emptyPromise();\n    if (resizeVal instanceof Function) {\n      var defer = $q.defer();\n      return resizeVal(files).then(function (p) {\n        resizeWithParams(p, files, attr, scope, ngModel).then(function (r) {\n          defer.resolve(r);\n        }, function (e) {\n          defer.reject(e);\n        });\n      }, function (e) {\n        defer.reject(e);\n      });\n    } else {\n      return resizeWithParams(resizeVal, files, attr, scope, ngModel);\n    }\n  }\n\n  function resizeWithParams(params, files, attr, scope, ngModel) {\n    var promises = [upload.emptyPromise()];\n\n    function handleFile(f, i) {\n      if (f.type.indexOf('image') === 0) {\n        if (params.pattern && !upload.validatePattern(f, params.pattern)) return;\n        params.resizeIf = function (width, height) {\n          return upload.attrGetter('ngfResizeIf', attr, scope,\n            {$width: width, $height: height, $file: f});\n        };\n        var promise = upload.resize(f, params);\n        promises.push(promise);\n        promise.then(function (resizedFile) {\n          files.splice(i, 1, resizedFile);\n        }, function (e) {\n          f.$error = 'resize';\n          (f.$errorMessages = (f.$errorMessages || {})).resize = true;\n          f.$errorParam = (e ? (e.message ? e.message : e) + ': ' : '') + (f && f.name);\n          ngModel.$ngfValidations.push({name: 'resize', valid: false});\n          upload.applyModelValidation(ngModel, files);\n        });\n      }\n    }\n\n    for (var i = 0; i < files.length; i++) {\n      handleFile(files[i], i);\n    }\n    return $q.all(promises);\n  }\n\n  upload.updateModel = function (ngModel, attr, scope, fileChange, files, evt, noDelay) {\n    function update(files, invalidFiles, newFiles, dupFiles, isSingleModel) {\n      attr.$$ngfPrevValidFiles = files;\n      attr.$$ngfPrevInvalidFiles = invalidFiles;\n      var file = files && files.length ? files[0] : null;\n      var invalidFile = invalidFiles && invalidFiles.length ? invalidFiles[0] : null;\n\n      if (ngModel) {\n        upload.applyModelValidation(ngModel, files);\n        ngModel.$setViewValue(isSingleModel ? file : files);\n      }\n\n      if (fileChange) {\n        $parse(fileChange)(scope, {\n          $files: files,\n          $file: file,\n          $newFiles: newFiles,\n          $duplicateFiles: dupFiles,\n          $invalidFiles: invalidFiles,\n          $invalidFile: invalidFile,\n          $event: evt\n        });\n      }\n\n      var invalidModel = upload.attrGetter('ngfModelInvalid', attr);\n      if (invalidModel) {\n        $timeout(function () {\n          $parse(invalidModel).assign(scope, isSingleModel ? invalidFile : invalidFiles);\n        });\n      }\n      $timeout(function () {\n        // scope apply changes\n      });\n    }\n\n    var allNewFiles, dupFiles = [], prevValidFiles, prevInvalidFiles,\n      invalids = [], valids = [];\n\n    function removeDuplicates() {\n      function equals(f1, f2) {\n        return f1.name === f2.name && (f1.$ngfOrigSize || f1.size) === (f2.$ngfOrigSize || f2.size) &&\n          f1.type === f2.type;\n      }\n\n      function isInPrevFiles(f) {\n        var j;\n        for (j = 0; j < prevValidFiles.length; j++) {\n          if (equals(f, prevValidFiles[j])) {\n            return true;\n          }\n        }\n        for (j = 0; j < prevInvalidFiles.length; j++) {\n          if (equals(f, prevInvalidFiles[j])) {\n            return true;\n          }\n        }\n        return false;\n      }\n\n      if (files) {\n        allNewFiles = [];\n        dupFiles = [];\n        for (var i = 0; i < files.length; i++) {\n          if (isInPrevFiles(files[i])) {\n            dupFiles.push(files[i]);\n          } else {\n            allNewFiles.push(files[i]);\n          }\n        }\n      }\n    }\n\n    function toArray(v) {\n      return angular.isArray(v) ? v : [v];\n    }\n\n    function resizeAndUpdate() {\n      function updateModel() {\n        $timeout(function () {\n          update(keep ? prevValidFiles.concat(valids) : valids,\n            keep ? prevInvalidFiles.concat(invalids) : invalids,\n            files, dupFiles, isSingleModel);\n        }, options && options.debounce ? options.debounce.change || options.debounce : 0);\n      }\n\n      var resizingFiles = validateAfterResize ? allNewFiles : valids;\n      resizeFile(resizingFiles, attr, scope, ngModel).then(function () {\n        if (validateAfterResize) {\n          upload.validate(allNewFiles, keep ? prevValidFiles.length : 0, ngModel, attr, scope)\n            .then(function (validationResult) {\n              valids = validationResult.validsFiles;\n              invalids = validationResult.invalidsFiles;\n              updateModel();\n            });\n        } else {\n          updateModel();\n        }\n      }, function () {\n        for (var i = 0; i < resizingFiles.length; i++) {\n          var f = resizingFiles[i];\n          if (f.$error === 'resize') {\n            var index = valids.indexOf(f);\n            if (index > -1) {\n              valids.splice(index, 1);\n              invalids.push(f);\n            }\n            updateModel();\n          }\n        }\n      });\n    }\n\n    prevValidFiles = attr.$$ngfPrevValidFiles || [];\n    prevInvalidFiles = attr.$$ngfPrevInvalidFiles || [];\n    if (ngModel && ngModel.$modelValue) {\n      prevValidFiles = toArray(ngModel.$modelValue);\n    }\n\n    var keep = upload.attrGetter('ngfKeep', attr, scope);\n    allNewFiles = (files || []).slice(0);\n    if (keep === 'distinct' || upload.attrGetter('ngfKeepDistinct', attr, scope) === true) {\n      removeDuplicates(attr, scope);\n    }\n\n    var isSingleModel = !keep && !upload.attrGetter('ngfMultiple', attr, scope) && !upload.attrGetter('multiple', attr);\n\n    if (keep && !allNewFiles.length) return;\n\n    upload.attrGetter('ngfBeforeModelChange', attr, scope, {\n      $files: files,\n      $file: files && files.length ? files[0] : null,\n      $newFiles: allNewFiles,\n      $duplicateFiles: dupFiles,\n      $event: evt\n    });\n\n    var validateAfterResize = upload.attrGetter('ngfValidateAfterResize', attr, scope);\n\n    var options = upload.attrGetter('ngfModelOptions', attr, scope);\n    upload.validate(allNewFiles, keep ? prevValidFiles.length : 0, ngModel, attr, scope)\n      .then(function (validationResult) {\n      if (noDelay) {\n        update(allNewFiles, [], files, dupFiles, isSingleModel);\n      } else {\n        if ((!options || !options.allowInvalid) && !validateAfterResize) {\n          valids = validationResult.validFiles;\n          invalids = validationResult.invalidFiles;\n        } else {\n          valids = allNewFiles;\n        }\n        if (upload.attrGetter('ngfFixOrientation', attr, scope) && upload.isExifSupported()) {\n          applyExifRotations(valids, attr, scope).then(function () {\n            resizeAndUpdate();\n          });\n        } else {\n          resizeAndUpdate();\n        }\n      }\n    });\n  };\n\n  return upload;\n}]);\n\nngFileUpload.directive('ngfSelect', ['$parse', '$timeout', '$compile', 'Upload', function ($parse, $timeout, $compile, Upload) {\n  var generatedElems = [];\n\n  function isDelayedClickSupported(ua) {\n    // fix for android native browser < 4.4 and safari windows\n    var m = ua.match(/Android[^\\d]*(\\d+)\\.(\\d+)/);\n    if (m && m.length > 2) {\n      var v = Upload.defaults.androidFixMinorVersion || 4;\n      return parseInt(m[1]) < 4 || (parseInt(m[1]) === v && parseInt(m[2]) < v);\n    }\n\n    // safari on windows\n    return ua.indexOf('Chrome') === -1 && /.*Windows.*Safari.*/.test(ua);\n  }\n\n  function linkFileSelect(scope, elem, attr, ngModel, $parse, $timeout, $compile, upload) {\n    /** @namespace attr.ngfSelect */\n    /** @namespace attr.ngfChange */\n    /** @namespace attr.ngModel */\n    /** @namespace attr.ngfModelOptions */\n    /** @namespace attr.ngfMultiple */\n    /** @namespace attr.ngfCapture */\n    /** @namespace attr.ngfValidate */\n    /** @namespace attr.ngfKeep */\n    var attrGetter = function (name, scope) {\n      return upload.attrGetter(name, attr, scope);\n    };\n\n    function isInputTypeFile() {\n      return elem[0].tagName.toLowerCase() === 'input' && attr.type && attr.type.toLowerCase() === 'file';\n    }\n\n    function fileChangeAttr() {\n      return attrGetter('ngfChange') || attrGetter('ngfSelect');\n    }\n\n    function changeFn(evt) {\n      if (upload.shouldUpdateOn('change', attr, scope)) {\n        var fileList = evt.__files_ || (evt.target && evt.target.files), files = [];\n        /* Handle duplicate call in  IE11 */\n        if (!fileList) return;\n        for (var i = 0; i < fileList.length; i++) {\n          files.push(fileList[i]);\n        }\n        upload.updateModel(ngModel, attr, scope, fileChangeAttr(),\n          files.length ? files : null, evt);\n      }\n    }\n\n    upload.registerModelChangeValidator(ngModel, attr, scope);\n\n    var unwatches = [];\n    if (attrGetter('ngfMultiple')) {\n      unwatches.push(scope.$watch(attrGetter('ngfMultiple'), function () {\n        fileElem.attr('multiple', attrGetter('ngfMultiple', scope));\n      }));\n    }\n    if (attrGetter('ngfCapture')) {\n      unwatches.push(scope.$watch(attrGetter('ngfCapture'), function () {\n        fileElem.attr('capture', attrGetter('ngfCapture', scope));\n      }));\n    }\n    if (attrGetter('ngfAccept')) {\n      unwatches.push(scope.$watch(attrGetter('ngfAccept'), function () {\n        fileElem.attr('accept', attrGetter('ngfAccept', scope));\n      }));\n    }\n    unwatches.push(attr.$observe('accept', function () {\n      fileElem.attr('accept', attrGetter('accept'));\n    }));\n    function bindAttrToFileInput(fileElem, label) {\n      function updateId(val) {\n        fileElem.attr('id', 'ngf-' + val);\n        label.attr('id', 'ngf-label-' + val);\n      }\n\n      for (var i = 0; i < elem[0].attributes.length; i++) {\n        var attribute = elem[0].attributes[i];\n        if (attribute.name !== 'type' && attribute.name !== 'class' && attribute.name !== 'style') {\n          if (attribute.name === 'id') {\n            updateId(attribute.value);\n            unwatches.push(attr.$observe('id', updateId));\n          } else {\n            fileElem.attr(attribute.name, (!attribute.value && (attribute.name === 'required' ||\n            attribute.name === 'multiple')) ? attribute.name : attribute.value);\n          }\n        }\n      }\n    }\n\n    function createFileInput() {\n      if (isInputTypeFile()) {\n        return elem;\n      }\n\n      var fileElem = angular.element('<input type=\"file\">');\n\n      var label = angular.element('<label>upload</label>');\n      label.css('visibility', 'hidden').css('position', 'absolute').css('overflow', 'hidden')\n        .css('width', '0px').css('height', '0px').css('border', 'none')\n        .css('margin', '0px').css('padding', '0px').attr('tabindex', '-1');\n      bindAttrToFileInput(fileElem, label);\n\n      generatedElems.push({el: elem, ref: label});\n\n      document.body.appendChild(label.append(fileElem)[0]);\n\n      return fileElem;\n    }\n\n    function clickHandler(evt) {\n      if (elem.attr('disabled')) return false;\n      if (attrGetter('ngfSelectDisabled', scope)) return;\n\n      var r = detectSwipe(evt);\n      // prevent the click if it is a swipe\n      if (r != null) return r;\n\n      resetModel(evt);\n\n      // fix for md when the element is removed from the DOM and added back #460\n      try {\n        if (!isInputTypeFile() && !document.body.contains(fileElem[0])) {\n          generatedElems.push({el: elem, ref: fileElem.parent()});\n          document.body.appendChild(fileElem.parent()[0]);\n          fileElem.bind('change', changeFn);\n        }\n      } catch (e) {/*ignore*/\n      }\n\n      if (isDelayedClickSupported(navigator.userAgent)) {\n        setTimeout(function () {\n          fileElem[0].click();\n        }, 0);\n      } else {\n        fileElem[0].click();\n      }\n\n      return false;\n    }\n\n\n    var initialTouchStartY = 0;\n    var initialTouchStartX = 0;\n\n    function detectSwipe(evt) {\n      var touches = evt.changedTouches || (evt.originalEvent && evt.originalEvent.changedTouches);\n      if (touches) {\n        if (evt.type === 'touchstart') {\n          initialTouchStartX = touches[0].clientX;\n          initialTouchStartY = touches[0].clientY;\n          return true; // don't block event default\n        } else {\n          // prevent scroll from triggering event\n          if (evt.type === 'touchend') {\n            var currentX = touches[0].clientX;\n            var currentY = touches[0].clientY;\n            if ((Math.abs(currentX - initialTouchStartX) > 20) ||\n              (Math.abs(currentY - initialTouchStartY) > 20)) {\n              evt.stopPropagation();\n              evt.preventDefault();\n              return false;\n            }\n          }\n          return true;\n        }\n      }\n    }\n\n    var fileElem = elem;\n\n    function resetModel(evt) {\n      if (upload.shouldUpdateOn('click', attr, scope) && fileElem.val()) {\n        fileElem.val(null);\n        upload.updateModel(ngModel, attr, scope, fileChangeAttr(), null, evt, true);\n      }\n    }\n\n    if (!isInputTypeFile()) {\n      fileElem = createFileInput();\n    }\n    fileElem.bind('change', changeFn);\n\n    if (!isInputTypeFile()) {\n      elem.bind('click touchstart touchend', clickHandler);\n    } else {\n      elem.bind('click', resetModel);\n    }\n\n    function ie10SameFileSelectFix(evt) {\n      if (fileElem && !fileElem.attr('__ngf_ie10_Fix_')) {\n        if (!fileElem[0].parentNode) {\n          fileElem = null;\n          return;\n        }\n        evt.preventDefault();\n        evt.stopPropagation();\n        fileElem.unbind('click');\n        var clone = fileElem.clone();\n        fileElem.replaceWith(clone);\n        fileElem = clone;\n        fileElem.attr('__ngf_ie10_Fix_', 'true');\n        fileElem.bind('change', changeFn);\n        fileElem.bind('click', ie10SameFileSelectFix);\n        fileElem[0].click();\n        return false;\n      } else {\n        fileElem.removeAttr('__ngf_ie10_Fix_');\n      }\n    }\n\n    if (navigator.appVersion.indexOf('MSIE 10') !== -1) {\n      fileElem.bind('click', ie10SameFileSelectFix);\n    }\n\n    if (ngModel) ngModel.$formatters.push(function (val) {\n      if (val == null || val.length === 0) {\n        if (fileElem.val()) {\n          fileElem.val(null);\n        }\n      }\n      return val;\n    });\n\n    scope.$on('$destroy', function () {\n      if (!isInputTypeFile()) fileElem.parent().remove();\n      angular.forEach(unwatches, function (unwatch) {\n        unwatch();\n      });\n    });\n\n    $timeout(function () {\n      for (var i = 0; i < generatedElems.length; i++) {\n        var g = generatedElems[i];\n        if (!document.body.contains(g.el[0])) {\n          generatedElems.splice(i, 1);\n          g.ref.remove();\n        }\n      }\n    });\n\n    if (window.FileAPI && window.FileAPI.ngfFixIE) {\n      window.FileAPI.ngfFixIE(elem, fileElem, changeFn);\n    }\n  }\n\n  return {\n    restrict: 'AEC',\n    require: '?ngModel',\n    link: function (scope, elem, attr, ngModel) {\n      linkFileSelect(scope, elem, attr, ngModel, $parse, $timeout, $compile, Upload);\n    }\n  };\n}]);\n\n(function () {\n\n  ngFileUpload.service('UploadDataUrl', ['UploadBase', '$timeout', '$q', function (UploadBase, $timeout, $q) {\n    var upload = UploadBase;\n    upload.base64DataUrl = function (file) {\n      if (angular.isArray(file)) {\n        var d = $q.defer(), count = 0;\n        angular.forEach(file, function (f) {\n          upload.dataUrl(f, true)['finally'](function () {\n            count++;\n            if (count === file.length) {\n              var urls = [];\n              angular.forEach(file, function (ff) {\n                urls.push(ff.$ngfDataUrl);\n              });\n              d.resolve(urls, file);\n            }\n          });\n        });\n        return d.promise;\n      } else {\n        return upload.dataUrl(file, true);\n      }\n    };\n    upload.dataUrl = function (file, disallowObjectUrl) {\n      if (!file) return upload.emptyPromise(file, file);\n      if ((disallowObjectUrl && file.$ngfDataUrl != null) || (!disallowObjectUrl && file.$ngfBlobUrl != null)) {\n        return upload.emptyPromise(disallowObjectUrl ? file.$ngfDataUrl : file.$ngfBlobUrl, file);\n      }\n      var p = disallowObjectUrl ? file.$$ngfDataUrlPromise : file.$$ngfBlobUrlPromise;\n      if (p) return p;\n\n      var deferred = $q.defer();\n      $timeout(function () {\n        if (window.FileReader && file &&\n          (!window.FileAPI || navigator.userAgent.indexOf('MSIE 8') === -1 || file.size < 20000) &&\n          (!window.FileAPI || navigator.userAgent.indexOf('MSIE 9') === -1 || file.size < 4000000)) {\n          //prefer URL.createObjectURL for handling refrences to files of all sizes\n          //since it doesn´t build a large string in memory\n          var URL = window.URL || window.webkitURL;\n          if (URL && URL.createObjectURL && !disallowObjectUrl) {\n            var url;\n            try {\n              url = URL.createObjectURL(file);\n            } catch (e) {\n              $timeout(function () {\n                file.$ngfBlobUrl = '';\n                deferred.reject();\n              });\n              return;\n            }\n            $timeout(function () {\n              file.$ngfBlobUrl = url;\n              if (url) {\n                deferred.resolve(url, file);\n                upload.blobUrls = upload.blobUrls || [];\n                upload.blobUrlsTotalSize = upload.blobUrlsTotalSize || 0;\n                upload.blobUrls.push({url: url, size: file.size});\n                upload.blobUrlsTotalSize += file.size || 0;\n                var maxMemory = upload.defaults.blobUrlsMaxMemory || 268435456;\n                var maxLength = upload.defaults.blobUrlsMaxQueueSize || 200;\n                while ((upload.blobUrlsTotalSize > maxMemory || upload.blobUrls.length > maxLength) && upload.blobUrls.length > 1) {\n                  var obj = upload.blobUrls.splice(0, 1)[0];\n                  URL.revokeObjectURL(obj.url);\n                  upload.blobUrlsTotalSize -= obj.size;\n                }\n              }\n            });\n          } else {\n            var fileReader = new FileReader();\n            fileReader.onload = function (e) {\n              $timeout(function () {\n                file.$ngfDataUrl = e.target.result;\n                deferred.resolve(e.target.result, file);\n                $timeout(function () {\n                  delete file.$ngfDataUrl;\n                }, 1000);\n              });\n            };\n            fileReader.onerror = function () {\n              $timeout(function () {\n                file.$ngfDataUrl = '';\n                deferred.reject();\n              });\n            };\n            fileReader.readAsDataURL(file);\n          }\n        } else {\n          $timeout(function () {\n            file[disallowObjectUrl ? '$ngfDataUrl' : '$ngfBlobUrl'] = '';\n            deferred.reject();\n          });\n        }\n      });\n\n      if (disallowObjectUrl) {\n        p = file.$$ngfDataUrlPromise = deferred.promise;\n      } else {\n        p = file.$$ngfBlobUrlPromise = deferred.promise;\n      }\n      p['finally'](function () {\n        delete file[disallowObjectUrl ? '$$ngfDataUrlPromise' : '$$ngfBlobUrlPromise'];\n      });\n      return p;\n    };\n    return upload;\n  }]);\n\n  function getTagType(el) {\n    if (el.tagName.toLowerCase() === 'img') return 'image';\n    if (el.tagName.toLowerCase() === 'audio') return 'audio';\n    if (el.tagName.toLowerCase() === 'video') return 'video';\n    return /./;\n  }\n\n  function linkFileDirective(Upload, $timeout, scope, elem, attr, directiveName, resizeParams, isBackground) {\n    function constructDataUrl(file) {\n      var disallowObjectUrl = Upload.attrGetter('ngfNoObjectUrl', attr, scope);\n      Upload.dataUrl(file, disallowObjectUrl)['finally'](function () {\n        $timeout(function () {\n          var src = (disallowObjectUrl ? file.$ngfDataUrl : file.$ngfBlobUrl) || file.$ngfDataUrl;\n          if (isBackground) {\n            elem.css('background-image', 'url(\\'' + (src || '') + '\\')');\n          } else {\n            elem.attr('src', src);\n          }\n          if (src) {\n            elem.removeClass('ng-hide');\n          } else {\n            elem.addClass('ng-hide');\n          }\n        });\n      });\n    }\n\n    $timeout(function () {\n      var unwatch = scope.$watch(attr[directiveName], function (file) {\n        var size = resizeParams;\n        if (directiveName === 'ngfThumbnail') {\n          if (!size) {\n            size = {\n              width: elem[0].naturalWidth || elem[0].clientWidth,\n              height: elem[0].naturalHeight || elem[0].clientHeight\n            };\n          }\n          if (size.width === 0 && window.getComputedStyle) {\n            var style = getComputedStyle(elem[0]);\n            if (style.width && style.width.indexOf('px') > -1 && style.height && style.height.indexOf('px') > -1) {\n              size = {\n                width: parseInt(style.width.slice(0, -2)),\n                height: parseInt(style.height.slice(0, -2))\n              };\n            }\n          }\n        }\n\n        if (angular.isString(file)) {\n          elem.removeClass('ng-hide');\n          if (isBackground) {\n            return elem.css('background-image', 'url(\\'' + file + '\\')');\n          } else {\n            return elem.attr('src', file);\n          }\n        }\n        if (file && file.type && file.type.search(getTagType(elem[0])) === 0 &&\n          (!isBackground || file.type.indexOf('image') === 0)) {\n          if (size && Upload.isResizeSupported()) {\n            size.resizeIf = function (width, height) {\n              return Upload.attrGetter('ngfResizeIf', attr, scope,\n                {$width: width, $height: height, $file: file});\n            };\n            Upload.resize(file, size).then(\n              function (f) {\n                constructDataUrl(f);\n              }, function (e) {\n                throw e;\n              }\n            );\n          } else {\n            constructDataUrl(file);\n          }\n        } else {\n          elem.addClass('ng-hide');\n        }\n      });\n\n      scope.$on('$destroy', function () {\n        unwatch();\n      });\n    });\n  }\n\n\n  /** @namespace attr.ngfSrc */\n  /** @namespace attr.ngfNoObjectUrl */\n  ngFileUpload.directive('ngfSrc', ['Upload', '$timeout', function (Upload, $timeout) {\n    return {\n      restrict: 'AE',\n      link: function (scope, elem, attr) {\n        linkFileDirective(Upload, $timeout, scope, elem, attr, 'ngfSrc',\n          Upload.attrGetter('ngfResize', attr, scope), false);\n      }\n    };\n  }]);\n\n  /** @namespace attr.ngfBackground */\n  /** @namespace attr.ngfNoObjectUrl */\n  ngFileUpload.directive('ngfBackground', ['Upload', '$timeout', function (Upload, $timeout) {\n    return {\n      restrict: 'AE',\n      link: function (scope, elem, attr) {\n        linkFileDirective(Upload, $timeout, scope, elem, attr, 'ngfBackground',\n          Upload.attrGetter('ngfResize', attr, scope), true);\n      }\n    };\n  }]);\n\n  /** @namespace attr.ngfThumbnail */\n  /** @namespace attr.ngfAsBackground */\n  /** @namespace attr.ngfSize */\n  /** @namespace attr.ngfNoObjectUrl */\n  ngFileUpload.directive('ngfThumbnail', ['Upload', '$timeout', function (Upload, $timeout) {\n    return {\n      restrict: 'AE',\n      link: function (scope, elem, attr) {\n        var size = Upload.attrGetter('ngfSize', attr, scope);\n        linkFileDirective(Upload, $timeout, scope, elem, attr, 'ngfThumbnail', size,\n          Upload.attrGetter('ngfAsBackground', attr, scope));\n      }\n    };\n  }]);\n\n  ngFileUpload.config(['$compileProvider', function ($compileProvider) {\n    if ($compileProvider.imgSrcSanitizationWhitelist) $compileProvider.imgSrcSanitizationWhitelist(/^\\s*(https?|ftp|mailto|tel|webcal|local|file|data|blob):/);\n    if ($compileProvider.aHrefSanitizationWhitelist) $compileProvider.aHrefSanitizationWhitelist(/^\\s*(https?|ftp|mailto|tel|webcal|local|file|data|blob):/);\n  }]);\n\n  ngFileUpload.filter('ngfDataUrl', ['UploadDataUrl', '$sce', function (UploadDataUrl, $sce) {\n    return function (file, disallowObjectUrl, trustedUrl) {\n      if (angular.isString(file)) {\n        return $sce.trustAsResourceUrl(file);\n      }\n      var src = file && ((disallowObjectUrl ? file.$ngfDataUrl : file.$ngfBlobUrl) || file.$ngfDataUrl);\n      if (file && !src) {\n        if (!file.$ngfDataUrlFilterInProgress && angular.isObject(file)) {\n          file.$ngfDataUrlFilterInProgress = true;\n          UploadDataUrl.dataUrl(file, disallowObjectUrl);\n        }\n        return '';\n      }\n      if (file) delete file.$ngfDataUrlFilterInProgress;\n      return (file && src ? (trustedUrl ? $sce.trustAsResourceUrl(src) : src) : file) || '';\n    };\n  }]);\n\n})();\n\nngFileUpload.service('UploadValidate', ['UploadDataUrl', '$q', '$timeout', function (UploadDataUrl, $q, $timeout) {\n  var upload = UploadDataUrl;\n\n  function globStringToRegex(str) {\n    var regexp = '', excludes = [];\n    if (str.length > 2 && str[0] === '/' && str[str.length - 1] === '/') {\n      regexp = str.substring(1, str.length - 1);\n    } else {\n      var split = str.split(',');\n      if (split.length > 1) {\n        for (var i = 0; i < split.length; i++) {\n          var r = globStringToRegex(split[i]);\n          if (r.regexp) {\n            regexp += '(' + r.regexp + ')';\n            if (i < split.length - 1) {\n              regexp += '|';\n            }\n          } else {\n            excludes = excludes.concat(r.excludes);\n          }\n        }\n      } else {\n        if (str.indexOf('!') === 0) {\n          excludes.push('^((?!' + globStringToRegex(str.substring(1)).regexp + ').)*$');\n        } else {\n          if (str.indexOf('.') === 0) {\n            str = '*' + str;\n          }\n          regexp = '^' + str.replace(new RegExp('[.\\\\\\\\+*?\\\\[\\\\^\\\\]$(){}=!<>|:\\\\-]', 'g'), '\\\\$&') + '$';\n          regexp = regexp.replace(/\\\\\\*/g, '.*').replace(/\\\\\\?/g, '.');\n        }\n      }\n    }\n    return {regexp: regexp, excludes: excludes};\n  }\n\n  upload.validatePattern = function (file, val) {\n    if (!val) {\n      return true;\n    }\n    var pattern = globStringToRegex(val), valid = true;\n    if (pattern.regexp && pattern.regexp.length) {\n      var regexp = new RegExp(pattern.regexp, 'i');\n      valid = (file.type != null && regexp.test(file.type)) ||\n        (file.name != null && regexp.test(file.name));\n    }\n    var len = pattern.excludes.length;\n    while (len--) {\n      var exclude = new RegExp(pattern.excludes[len], 'i');\n      valid = valid && (file.type == null || exclude.test(file.type)) &&\n        (file.name == null || exclude.test(file.name));\n    }\n    return valid;\n  };\n\n  upload.ratioToFloat = function (val) {\n    var r = val.toString(), xIndex = r.search(/[x:]/i);\n    if (xIndex > -1) {\n      r = parseFloat(r.substring(0, xIndex)) / parseFloat(r.substring(xIndex + 1));\n    } else {\n      r = parseFloat(r);\n    }\n    return r;\n  };\n\n  upload.registerModelChangeValidator = function (ngModel, attr, scope) {\n    if (ngModel) {\n      ngModel.$formatters.push(function (files) {\n        if (ngModel.$dirty) {\n          var filesArray = files;\n          if (files && !angular.isArray(files)) {\n            filesArray = [files];\n          }\n          upload.validate(filesArray, 0, ngModel, attr, scope).then(function () {\n            upload.applyModelValidation(ngModel, filesArray);\n          });\n        }\n        return files;\n      });\n    }\n  };\n\n  function markModelAsDirty(ngModel, files) {\n    if (files != null && !ngModel.$dirty) {\n      if (ngModel.$setDirty) {\n        ngModel.$setDirty();\n      } else {\n        ngModel.$dirty = true;\n      }\n    }\n  }\n\n  upload.applyModelValidation = function (ngModel, files) {\n    markModelAsDirty(ngModel, files);\n    angular.forEach(ngModel.$ngfValidations, function (validation) {\n      ngModel.$setValidity(validation.name, validation.valid);\n    });\n  };\n\n  upload.getValidationAttr = function (attr, scope, name, validationName, file) {\n    var dName = 'ngf' + name[0].toUpperCase() + name.substr(1);\n    var val = upload.attrGetter(dName, attr, scope, {$file: file});\n    if (val == null) {\n      val = upload.attrGetter('ngfValidate', attr, scope, {$file: file});\n      if (val) {\n        var split = (validationName || name).split('.');\n        val = val[split[0]];\n        if (split.length > 1) {\n          val = val && val[split[1]];\n        }\n      }\n    }\n    return val;\n  };\n\n  upload.validate = function (files, prevLength, ngModel, attr, scope) {\n    ngModel = ngModel || {};\n    ngModel.$ngfValidations = ngModel.$ngfValidations || [];\n\n    angular.forEach(ngModel.$ngfValidations, function (v) {\n      v.valid = true;\n    });\n\n    var attrGetter = function (name, params) {\n      return upload.attrGetter(name, attr, scope, params);\n    };\n\n    var ignoredErrors = (upload.attrGetter('ngfIgnoreInvalid', attr, scope) || '').split(' ');\n    var runAllValidation = upload.attrGetter('ngfRunAllValidations', attr, scope);\n\n    if (files == null || files.length === 0) {\n      return upload.emptyPromise({'validFiles': files, 'invalidFiles': []});\n    }\n\n    files = files.length === undefined ? [files] : files.slice(0);\n    var invalidFiles = [];\n\n    function validateSync(name, validationName, fn) {\n      if (files) {\n        var i = files.length, valid = null;\n        while (i--) {\n          var file = files[i];\n          if (file) {\n            var val = upload.getValidationAttr(attr, scope, name, validationName, file);\n            if (val != null) {\n              if (!fn(file, val, i)) {\n                if (ignoredErrors.indexOf(name) === -1) {\n                  file.$error = name;\n                  (file.$errorMessages = (file.$errorMessages || {}))[name] = true;\n                  file.$errorParam = val;\n                  if (invalidFiles.indexOf(file) === -1) {\n                    invalidFiles.push(file);\n                  }\n                  if (!runAllValidation) {\n                    files.splice(i, 1);\n                  }\n                  valid = false;\n                } else {\n                  files.splice(i, 1);\n                }\n              }\n            }\n          }\n        }\n        if (valid !== null) {\n          ngModel.$ngfValidations.push({name: name, valid: valid});\n        }\n      }\n    }\n\n    validateSync('pattern', null, upload.validatePattern);\n    validateSync('minSize', 'size.min', function (file, val) {\n      return file.size + 0.1 >= upload.translateScalars(val);\n    });\n    validateSync('maxSize', 'size.max', function (file, val) {\n      return file.size - 0.1 <= upload.translateScalars(val);\n    });\n    var totalSize = 0;\n    validateSync('maxTotalSize', null, function (file, val) {\n      totalSize += file.size;\n      if (totalSize > upload.translateScalars(val)) {\n        files.splice(0, files.length);\n        return false;\n      }\n      return true;\n    });\n\n    validateSync('validateFn', null, function (file, r) {\n      return r === true || r === null || r === '';\n    });\n\n    if (!files.length) {\n      return upload.emptyPromise({'validFiles': [], 'invalidFiles': invalidFiles});\n    }\n\n    function validateAsync(name, validationName, type, asyncFn, fn) {\n      function resolveResult(defer, file, val) {\n        function resolveInternal(fn) {\n          if (fn()) {\n            if (ignoredErrors.indexOf(name) === -1) {\n              file.$error = name;\n              (file.$errorMessages = (file.$errorMessages || {}))[name] = true;\n              file.$errorParam = val;\n              if (invalidFiles.indexOf(file) === -1) {\n                invalidFiles.push(file);\n              }\n              if (!runAllValidation) {\n                var i = files.indexOf(file);\n                if (i > -1) files.splice(i, 1);\n              }\n              defer.resolve(false);\n            } else {\n              var j = files.indexOf(file);\n              if (j > -1) files.splice(j, 1);\n              defer.resolve(true);\n            }\n          } else {\n            defer.resolve(true);\n          }\n        }\n\n        if (val != null) {\n          asyncFn(file, val).then(function (d) {\n            resolveInternal(function () {\n              return !fn(d, val);\n            });\n          }, function () {\n            resolveInternal(function () {\n              return attrGetter('ngfValidateForce', {$file: file});\n            });\n          });\n        } else {\n          defer.resolve(true);\n        }\n      }\n\n      var promises = [upload.emptyPromise(true)];\n      if (files) {\n        files = files.length === undefined ? [files] : files;\n        angular.forEach(files, function (file) {\n          var defer = $q.defer();\n          promises.push(defer.promise);\n          if (type && (file.type == null || file.type.search(type) !== 0)) {\n            defer.resolve(true);\n            return;\n          }\n          if (name === 'dimensions' && upload.attrGetter('ngfDimensions', attr) != null) {\n            upload.imageDimensions(file).then(function (d) {\n              resolveResult(defer, file,\n                attrGetter('ngfDimensions', {$file: file, $width: d.width, $height: d.height}));\n            }, function () {\n              defer.resolve(false);\n            });\n          } else if (name === 'duration' && upload.attrGetter('ngfDuration', attr) != null) {\n            upload.mediaDuration(file).then(function (d) {\n              resolveResult(defer, file,\n                attrGetter('ngfDuration', {$file: file, $duration: d}));\n            }, function () {\n              defer.resolve(false);\n            });\n          } else {\n            resolveResult(defer, file,\n              upload.getValidationAttr(attr, scope, name, validationName, file));\n          }\n        });\n      }\n      var deffer = $q.defer();\n      $q.all(promises).then(function (values) {\n        var isValid = true;\n        for (var i = 0; i < values.length; i++) {\n          if (!values[i]) {\n            isValid = false;\n            break;\n          }\n        }\n        ngModel.$ngfValidations.push({name: name, valid: isValid});\n        deffer.resolve(isValid);\n      });\n      return deffer.promise;\n    }\n\n    var deffer = $q.defer();\n    var promises = [];\n\n    promises.push(validateAsync('maxHeight', 'height.max', /image/,\n      this.imageDimensions, function (d, val) {\n        return d.height <= val;\n      }));\n    promises.push(validateAsync('minHeight', 'height.min', /image/,\n      this.imageDimensions, function (d, val) {\n        return d.height >= val;\n      }));\n    promises.push(validateAsync('maxWidth', 'width.max', /image/,\n      this.imageDimensions, function (d, val) {\n        return d.width <= val;\n      }));\n    promises.push(validateAsync('minWidth', 'width.min', /image/,\n      this.imageDimensions, function (d, val) {\n        return d.width >= val;\n      }));\n    promises.push(validateAsync('dimensions', null, /image/,\n      function (file, val) {\n        return upload.emptyPromise(val);\n      }, function (r) {\n        return r;\n      }));\n    promises.push(validateAsync('ratio', null, /image/,\n      this.imageDimensions, function (d, val) {\n        var split = val.toString().split(','), valid = false;\n        for (var i = 0; i < split.length; i++) {\n          if (Math.abs((d.width / d.height) - upload.ratioToFloat(split[i])) < 0.01) {\n            valid = true;\n          }\n        }\n        return valid;\n      }));\n    promises.push(validateAsync('maxRatio', 'ratio.max', /image/,\n      this.imageDimensions, function (d, val) {\n        return (d.width / d.height) - upload.ratioToFloat(val) < 0.0001;\n      }));\n    promises.push(validateAsync('minRatio', 'ratio.min', /image/,\n      this.imageDimensions, function (d, val) {\n        return (d.width / d.height) - upload.ratioToFloat(val) > -0.0001;\n      }));\n    promises.push(validateAsync('maxDuration', 'duration.max', /audio|video/,\n      this.mediaDuration, function (d, val) {\n        return d <= upload.translateScalars(val);\n      }));\n    promises.push(validateAsync('minDuration', 'duration.min', /audio|video/,\n      this.mediaDuration, function (d, val) {\n        return d >= upload.translateScalars(val);\n      }));\n    promises.push(validateAsync('duration', null, /audio|video/,\n      function (file, val) {\n        return upload.emptyPromise(val);\n      }, function (r) {\n        return r;\n      }));\n\n    promises.push(validateAsync('validateAsyncFn', null, null,\n      function (file, val) {\n        return val;\n      }, function (r) {\n        return r === true || r === null || r === '';\n      }));\n\n    $q.all(promises).then(function () {\n\n      if (runAllValidation) {\n        for (var i = 0; i < files.length; i++) {\n          var file = files[i];\n          if (file.$error) {\n            files.splice(i--, 1);\n          }\n        }\n      }\n\n      runAllValidation = false;\n      validateSync('maxFiles', null, function (file, val, i) {\n        return prevLength + i < val;\n      });\n\n      deffer.resolve({'validFiles': files, 'invalidFiles': invalidFiles});\n    });\n    return deffer.promise;\n  };\n\n  upload.imageDimensions = function (file) {\n    if (file.$ngfWidth && file.$ngfHeight) {\n      var d = $q.defer();\n      $timeout(function () {\n        d.resolve({width: file.$ngfWidth, height: file.$ngfHeight});\n      });\n      return d.promise;\n    }\n    if (file.$ngfDimensionPromise) return file.$ngfDimensionPromise;\n\n    var deferred = $q.defer();\n    $timeout(function () {\n      if (file.type.indexOf('image') !== 0) {\n        deferred.reject('not image');\n        return;\n      }\n      upload.dataUrl(file).then(function (dataUrl) {\n        var img = angular.element('<img>').attr('src', dataUrl)\n          .css('visibility', 'hidden').css('position', 'fixed')\n          .css('max-width', 'none !important').css('max-height', 'none !important');\n\n        function success() {\n          var width = img[0].naturalWidth || img[0].clientWidth;\n          var height = img[0].naturalHeight || img[0].clientHeight;\n          img.remove();\n          file.$ngfWidth = width;\n          file.$ngfHeight = height;\n          deferred.resolve({width: width, height: height});\n        }\n\n        function error() {\n          img.remove();\n          deferred.reject('load error');\n        }\n\n        img.on('load', success);\n        img.on('error', error);\n\n        var secondsCounter = 0;\n        function checkLoadErrorInCaseOfNoCallback() {\n          $timeout(function () {\n            if (img[0].parentNode) {\n              if (img[0].clientWidth) {\n                success();\n              } else if (secondsCounter++ > 10) {\n                error();\n              } else {\n                checkLoadErrorInCaseOfNoCallback();\n              }\n            }\n          }, 1000);\n        }\n\n        checkLoadErrorInCaseOfNoCallback();\n\n        angular.element(document.getElementsByTagName('body')[0]).append(img);\n      }, function () {\n        deferred.reject('load error');\n      });\n    });\n\n    file.$ngfDimensionPromise = deferred.promise;\n    file.$ngfDimensionPromise['finally'](function () {\n      delete file.$ngfDimensionPromise;\n    });\n    return file.$ngfDimensionPromise;\n  };\n\n  upload.mediaDuration = function (file) {\n    if (file.$ngfDuration) {\n      var d = $q.defer();\n      $timeout(function () {\n        d.resolve(file.$ngfDuration);\n      });\n      return d.promise;\n    }\n    if (file.$ngfDurationPromise) return file.$ngfDurationPromise;\n\n    var deferred = $q.defer();\n    $timeout(function () {\n      if (file.type.indexOf('audio') !== 0 && file.type.indexOf('video') !== 0) {\n        deferred.reject('not media');\n        return;\n      }\n      upload.dataUrl(file).then(function (dataUrl) {\n        var el = angular.element(file.type.indexOf('audio') === 0 ? '<audio>' : '<video>')\n          .attr('src', dataUrl).css('visibility', 'none').css('position', 'fixed');\n\n        function success() {\n          var duration = el[0].duration;\n          file.$ngfDuration = duration;\n          el.remove();\n          deferred.resolve(duration);\n        }\n\n        function error() {\n          el.remove();\n          deferred.reject('load error');\n        }\n\n        el.on('loadedmetadata', success);\n        el.on('error', error);\n        var count = 0;\n\n        function checkLoadError() {\n          $timeout(function () {\n            if (el[0].parentNode) {\n              if (el[0].duration) {\n                success();\n              } else if (count > 10) {\n                error();\n              } else {\n                checkLoadError();\n              }\n            }\n          }, 1000);\n        }\n\n        checkLoadError();\n\n        angular.element(document.body).append(el);\n      }, function () {\n        deferred.reject('load error');\n      });\n    });\n\n    file.$ngfDurationPromise = deferred.promise;\n    file.$ngfDurationPromise['finally'](function () {\n      delete file.$ngfDurationPromise;\n    });\n    return file.$ngfDurationPromise;\n  };\n  return upload;\n}\n]);\n\nngFileUpload.service('UploadResize', ['UploadValidate', '$q', function (UploadValidate, $q) {\n  var upload = UploadValidate;\n\n  /**\n   * Conserve aspect ratio of the original region. Useful when shrinking/enlarging\n   * images to fit into a certain area.\n   * Source:  http://stackoverflow.com/a/14731922\n   *\n   * @param {Number} srcWidth Source area width\n   * @param {Number} srcHeight Source area height\n   * @param {Number} maxWidth Nestable area maximum available width\n   * @param {Number} maxHeight Nestable area maximum available height\n   * @return {Object} { width, height }\n   */\n  var calculateAspectRatioFit = function (srcWidth, srcHeight, maxWidth, maxHeight, centerCrop) {\n    var ratio = centerCrop ? Math.max(maxWidth / srcWidth, maxHeight / srcHeight) :\n      Math.min(maxWidth / srcWidth, maxHeight / srcHeight);\n    return {\n      width: srcWidth * ratio, height: srcHeight * ratio,\n      marginX: srcWidth * ratio - maxWidth, marginY: srcHeight * ratio - maxHeight\n    };\n  };\n\n  // Extracted from https://github.com/romelgomez/angular-firebase-image-upload/blob/master/app/scripts/fileUpload.js#L89\n  var resize = function (imagen, width, height, quality, type, ratio, centerCrop, resizeIf) {\n    var deferred = $q.defer();\n    var canvasElement = document.createElement('canvas');\n    var imageElement = document.createElement('img');\n    imageElement.setAttribute('style', 'visibility:hidden;position:fixed;z-index:-100000');\n    document.body.appendChild(imageElement);\n\n    imageElement.onload = function () {\n      var imgWidth = imageElement.width, imgHeight = imageElement.height;\n      imageElement.parentNode.removeChild(imageElement);\n      if (resizeIf != null && resizeIf(imgWidth, imgHeight) === false) {\n        deferred.reject('resizeIf');\n        return;\n      }\n      try {\n        if (ratio) {\n          var ratioFloat = upload.ratioToFloat(ratio);\n          var imgRatio = imgWidth / imgHeight;\n          if (imgRatio < ratioFloat) {\n            width = imgWidth;\n            height = width / ratioFloat;\n          } else {\n            height = imgHeight;\n            width = height * ratioFloat;\n          }\n        }\n        if (!width) {\n          width = imgWidth;\n        }\n        if (!height) {\n          height = imgHeight;\n        }\n        var dimensions = calculateAspectRatioFit(imgWidth, imgHeight, width, height, centerCrop);\n        canvasElement.width = Math.min(dimensions.width, width);\n        canvasElement.height = Math.min(dimensions.height, height);\n        var context = canvasElement.getContext('2d');\n        context.drawImage(imageElement,\n          Math.min(0, -dimensions.marginX / 2), Math.min(0, -dimensions.marginY / 2),\n          dimensions.width, dimensions.height);\n        deferred.resolve(canvasElement.toDataURL(type || 'image/WebP', quality || 0.934));\n      } catch (e) {\n        deferred.reject(e);\n      }\n    };\n    imageElement.onerror = function () {\n      imageElement.parentNode.removeChild(imageElement);\n      deferred.reject();\n    };\n    imageElement.src = imagen;\n    return deferred.promise;\n  };\n\n  upload.dataUrltoBlob = function (dataurl, name, origSize) {\n    var arr = dataurl.split(','), mime = arr[0].match(/:(.*?);/)[1],\n      bstr = atob(arr[1]), n = bstr.length, u8arr = new Uint8Array(n);\n    while (n--) {\n      u8arr[n] = bstr.charCodeAt(n);\n    }\n    var blob = new window.Blob([u8arr], {type: mime});\n    blob.name = name;\n    blob.$ngfOrigSize = origSize;\n    return blob;\n  };\n\n  upload.isResizeSupported = function () {\n    var elem = document.createElement('canvas');\n    return window.atob && elem.getContext && elem.getContext('2d') && window.Blob;\n  };\n\n  if (upload.isResizeSupported()) {\n    // add name getter to the blob constructor prototype\n    Object.defineProperty(window.Blob.prototype, 'name', {\n      get: function () {\n        return this.$ngfName;\n      },\n      set: function (v) {\n        this.$ngfName = v;\n      },\n      configurable: true\n    });\n  }\n\n  upload.resize = function (file, options) {\n    if (file.type.indexOf('image') !== 0) return upload.emptyPromise(file);\n\n    var deferred = $q.defer();\n    upload.dataUrl(file, true).then(function (url) {\n      resize(url, options.width, options.height, options.quality, options.type || file.type,\n        options.ratio, options.centerCrop, options.resizeIf)\n        .then(function (dataUrl) {\n          if (file.type === 'image/jpeg' && options.restoreExif !== false) {\n            try {\n              dataUrl = upload.restoreExif(url, dataUrl);\n            } catch (e) {\n              setTimeout(function () {throw e;}, 1);\n            }\n          }\n          try {\n            var blob = upload.dataUrltoBlob(dataUrl, file.name, file.size);\n            deferred.resolve(blob);\n          } catch (e) {\n            deferred.reject(e);\n          }\n        }, function (r) {\n          if (r === 'resizeIf') {\n            deferred.resolve(file);\n          }\n          deferred.reject(r);\n        });\n    }, function (e) {\n      deferred.reject(e);\n    });\n    return deferred.promise;\n  };\n\n  return upload;\n}]);\n\n(function () {\n  ngFileUpload.directive('ngfDrop', ['$parse', '$timeout', '$window', 'Upload', '$http', '$q',\n    function ($parse, $timeout, $window, Upload, $http, $q) {\n      return {\n        restrict: 'AEC',\n        require: '?ngModel',\n        link: function (scope, elem, attr, ngModel) {\n          linkDrop(scope, elem, attr, ngModel, $parse, $timeout, $window, Upload, $http, $q);\n        }\n      };\n    }]);\n\n  ngFileUpload.directive('ngfNoFileDrop', function () {\n    return function (scope, elem) {\n      if (dropAvailable()) elem.css('display', 'none');\n    };\n  });\n\n  ngFileUpload.directive('ngfDropAvailable', ['$parse', '$timeout', 'Upload', function ($parse, $timeout, Upload) {\n    return function (scope, elem, attr) {\n      if (dropAvailable()) {\n        var model = $parse(Upload.attrGetter('ngfDropAvailable', attr));\n        $timeout(function () {\n          model(scope);\n          if (model.assign) {\n            model.assign(scope, true);\n          }\n        });\n      }\n    };\n  }]);\n\n  function linkDrop(scope, elem, attr, ngModel, $parse, $timeout, $window, upload, $http, $q) {\n    var available = dropAvailable();\n\n    var attrGetter = function (name, scope, params) {\n      return upload.attrGetter(name, attr, scope, params);\n    };\n\n    if (attrGetter('dropAvailable')) {\n      $timeout(function () {\n        if (scope[attrGetter('dropAvailable')]) {\n          scope[attrGetter('dropAvailable')].value = available;\n        } else {\n          scope[attrGetter('dropAvailable')] = available;\n        }\n      });\n    }\n    if (!available) {\n      if (attrGetter('ngfHideOnDropNotAvailable', scope) === true) {\n        elem.css('display', 'none');\n      }\n      return;\n    }\n\n    function isDisabled() {\n      return elem.attr('disabled') || attrGetter('ngfDropDisabled', scope);\n    }\n\n    if (attrGetter('ngfSelect') == null) {\n      upload.registerModelChangeValidator(ngModel, attr, scope);\n    }\n\n    var leaveTimeout = null;\n    var stopPropagation = $parse(attrGetter('ngfStopPropagation'));\n    var dragOverDelay = 1;\n    var actualDragOverClass;\n\n    elem[0].addEventListener('dragover', function (evt) {\n      if (isDisabled() || !upload.shouldUpdateOn('drop', attr, scope)) return;\n      evt.preventDefault();\n      if (stopPropagation(scope)) evt.stopPropagation();\n      // handling dragover events from the Chrome download bar\n      if (navigator.userAgent.indexOf('Chrome') > -1) {\n        var b = evt.dataTransfer.effectAllowed;\n        evt.dataTransfer.dropEffect = ('move' === b || 'linkMove' === b) ? 'move' : 'copy';\n      }\n      $timeout.cancel(leaveTimeout);\n      if (!actualDragOverClass) {\n        actualDragOverClass = 'C';\n        calculateDragOverClass(scope, attr, evt, function (clazz) {\n          actualDragOverClass = clazz;\n          elem.addClass(actualDragOverClass);\n          attrGetter('ngfDrag', scope, {$isDragging: true, $class: actualDragOverClass, $event: evt});\n        });\n      }\n    }, false);\n    elem[0].addEventListener('dragenter', function (evt) {\n      if (isDisabled() || !upload.shouldUpdateOn('drop', attr, scope)) return;\n      evt.preventDefault();\n      if (stopPropagation(scope)) evt.stopPropagation();\n    }, false);\n    elem[0].addEventListener('dragleave', function (evt) {\n      if (isDisabled() || !upload.shouldUpdateOn('drop', attr, scope)) return;\n      evt.preventDefault();\n      if (stopPropagation(scope)) evt.stopPropagation();\n      leaveTimeout = $timeout(function () {\n        if (actualDragOverClass) elem.removeClass(actualDragOverClass);\n        actualDragOverClass = null;\n        attrGetter('ngfDrag', scope, {$isDragging: false, $event: evt});\n      }, dragOverDelay || 100);\n    }, false);\n    elem[0].addEventListener('drop', function (evt) {\n      if (isDisabled() || !upload.shouldUpdateOn('drop', attr, scope)) return;\n      evt.preventDefault();\n      if (stopPropagation(scope)) evt.stopPropagation();\n      if (actualDragOverClass) elem.removeClass(actualDragOverClass);\n      actualDragOverClass = null;\n      extractFilesAndUpdateModel(evt.dataTransfer, evt, 'dropUrl');\n    }, false);\n    elem[0].addEventListener('paste', function (evt) {\n      if (navigator.userAgent.toLowerCase().indexOf('firefox') > -1 &&\n        attrGetter('ngfEnableFirefoxPaste', scope)) {\n        evt.preventDefault();\n      }\n      if (isDisabled() || !upload.shouldUpdateOn('paste', attr, scope)) return;\n      extractFilesAndUpdateModel(evt.clipboardData || evt.originalEvent.clipboardData, evt, 'pasteUrl');\n    }, false);\n\n    if (navigator.userAgent.toLowerCase().indexOf('firefox') > -1 &&\n      attrGetter('ngfEnableFirefoxPaste', scope)) {\n      elem.attr('contenteditable', true);\n      elem.on('keypress', function (e) {\n        if (!e.metaKey && !e.ctrlKey) {\n          e.preventDefault();\n        }\n      });\n    }\n\n    function extractFilesAndUpdateModel(source, evt, updateOnType) {\n      if (!source) return;\n      // html needs to be calculated on the same process otherwise the data will be wiped\n      // after promise resolve or setTimeout.\n      var html;\n      try {\n        html = source && source.getData && source.getData('text/html');\n      } catch (e) {/* Fix IE11 that throw error calling getData */\n      }\n      extractFiles(source.items, source.files, attrGetter('ngfAllowDir', scope) !== false,\n        attrGetter('multiple') || attrGetter('ngfMultiple', scope)).then(function (files) {\n        if (files.length) {\n          updateModel(files, evt);\n        } else {\n          extractFilesFromHtml(updateOnType, html).then(function (files) {\n            updateModel(files, evt);\n          });\n        }\n      });\n    }\n\n    function updateModel(files, evt) {\n      upload.updateModel(ngModel, attr, scope, attrGetter('ngfChange') || attrGetter('ngfDrop'), files, evt);\n    }\n\n    function extractFilesFromHtml(updateOn, html) {\n      if (!upload.shouldUpdateOn(updateOn, attr, scope) || typeof html !== 'string') return upload.rejectPromise([]);\n      var urls = [];\n      html.replace(/<(img src|img [^>]* src) *=\\\"([^\\\"]*)\\\"/gi, function (m, n, src) {\n        urls.push(src);\n      });\n      var promises = [], files = [];\n      if (urls.length) {\n        angular.forEach(urls, function (url) {\n          promises.push(upload.urlToBlob(url).then(function (blob) {\n            files.push(blob);\n          }));\n        });\n        var defer = $q.defer();\n        $q.all(promises).then(function () {\n          defer.resolve(files);\n        }, function (e) {\n          defer.reject(e);\n        });\n        return defer.promise;\n      }\n      return upload.emptyPromise();\n    }\n\n    function calculateDragOverClass(scope, attr, evt, callback) {\n      var obj = attrGetter('ngfDragOverClass', scope, {$event: evt}), dClass = 'dragover';\n      if (angular.isString(obj)) {\n        dClass = obj;\n      } else if (obj) {\n        if (obj.delay) dragOverDelay = obj.delay;\n        if (obj.accept || obj.reject) {\n          var items = evt.dataTransfer.items;\n          if (items == null || !items.length) {\n            dClass = obj.accept;\n          } else {\n            var pattern = obj.pattern || attrGetter('ngfPattern', scope, {$event: evt});\n            var len = items.length;\n            while (len--) {\n              if (!upload.validatePattern(items[len], pattern)) {\n                dClass = obj.reject;\n                break;\n              } else {\n                dClass = obj.accept;\n              }\n            }\n          }\n        }\n      }\n      callback(dClass);\n    }\n\n    function extractFiles(items, fileList, allowDir, multiple) {\n      var maxFiles = upload.getValidationAttr(attr, scope, 'maxFiles');\n      if (maxFiles == null) {\n        maxFiles = Number.MAX_VALUE;\n      }\n      var maxTotalSize = upload.getValidationAttr(attr, scope, 'maxTotalSize');\n      if (maxTotalSize == null) {\n        maxTotalSize = Number.MAX_VALUE;\n      }\n      var includeDir = attrGetter('ngfIncludeDir', scope);\n      var files = [], totalSize = 0;\n\n      function traverseFileTree(entry, path) {\n        var defer = $q.defer();\n        if (entry != null) {\n          if (entry.isDirectory) {\n            var promises = [upload.emptyPromise()];\n            if (includeDir) {\n              var file = {type: 'directory'};\n              file.name = file.path = (path || '') + entry.name;\n              files.push(file);\n            }\n            var dirReader = entry.createReader();\n            var entries = [];\n            var readEntries = function () {\n              dirReader.readEntries(function (results) {\n                try {\n                  if (!results.length) {\n                    angular.forEach(entries.slice(0), function (e) {\n                      if (files.length <= maxFiles && totalSize <= maxTotalSize) {\n                        promises.push(traverseFileTree(e, (path ? path : '') + entry.name + '/'));\n                      }\n                    });\n                    $q.all(promises).then(function () {\n                      defer.resolve();\n                    }, function (e) {\n                      defer.reject(e);\n                    });\n                  } else {\n                    entries = entries.concat(Array.prototype.slice.call(results || [], 0));\n                    readEntries();\n                  }\n                } catch (e) {\n                  defer.reject(e);\n                }\n              }, function (e) {\n                defer.reject(e);\n              });\n            };\n            readEntries();\n          } else {\n            entry.file(function (file) {\n              try {\n                file.path = (path ? path : '') + file.name;\n                if (includeDir) {\n                  file = upload.rename(file, file.path);\n                }\n                files.push(file);\n                totalSize += file.size;\n                defer.resolve();\n              } catch (e) {\n                defer.reject(e);\n              }\n            }, function (e) {\n              defer.reject(e);\n            });\n          }\n        }\n        return defer.promise;\n      }\n\n      var promises = [upload.emptyPromise()];\n\n      if (items && items.length > 0 && $window.location.protocol !== 'file:') {\n        for (var i = 0; i < items.length; i++) {\n          if (items[i].webkitGetAsEntry && items[i].webkitGetAsEntry() && items[i].webkitGetAsEntry().isDirectory) {\n            var entry = items[i].webkitGetAsEntry();\n            if (entry.isDirectory && !allowDir) {\n              continue;\n            }\n            if (entry != null) {\n              promises.push(traverseFileTree(entry));\n            }\n          } else {\n            var f = items[i].getAsFile();\n            if (f != null) {\n              files.push(f);\n              totalSize += f.size;\n            }\n          }\n          if (files.length > maxFiles || totalSize > maxTotalSize ||\n            (!multiple && files.length > 0)) break;\n        }\n      } else {\n        if (fileList != null) {\n          for (var j = 0; j < fileList.length; j++) {\n            var file = fileList.item(j);\n            if (file.type || file.size > 0) {\n              files.push(file);\n              totalSize += file.size;\n            }\n            if (files.length > maxFiles || totalSize > maxTotalSize ||\n              (!multiple && files.length > 0)) break;\n          }\n        }\n      }\n\n      var defer = $q.defer();\n      $q.all(promises).then(function () {\n        if (!multiple && !includeDir && files.length) {\n          var i = 0;\n          while (files[i] && files[i].type === 'directory') i++;\n          defer.resolve([files[i]]);\n        } else {\n          defer.resolve(files);\n        }\n      }, function (e) {\n        defer.reject(e);\n      });\n\n      return defer.promise;\n    }\n  }\n\n  function dropAvailable() {\n    var div = document.createElement('div');\n    return ('draggable' in div) && ('ondrop' in div) && !/Edge\\/12./i.test(navigator.userAgent);\n  }\n\n})();\n\n// customized version of https://github.com/exif-js/exif-js\nngFileUpload.service('UploadExif', ['UploadResize', '$q', function (UploadResize, $q) {\n  var upload = UploadResize;\n\n  upload.isExifSupported = function () {\n    return window.FileReader && new FileReader().readAsArrayBuffer && upload.isResizeSupported();\n  };\n\n  function applyTransform(ctx, orientation, width, height) {\n    switch (orientation) {\n      case 2:\n        return ctx.transform(-1, 0, 0, 1, width, 0);\n      case 3:\n        return ctx.transform(-1, 0, 0, -1, width, height);\n      case 4:\n        return ctx.transform(1, 0, 0, -1, 0, height);\n      case 5:\n        return ctx.transform(0, 1, 1, 0, 0, 0);\n      case 6:\n        return ctx.transform(0, 1, -1, 0, height, 0);\n      case 7:\n        return ctx.transform(0, -1, -1, 0, height, width);\n      case 8:\n        return ctx.transform(0, -1, 1, 0, 0, width);\n    }\n  }\n\n  upload.readOrientation = function (file) {\n    var defer = $q.defer();\n    var reader = new FileReader();\n    var slicedFile = file.slice ? file.slice(0, 64 * 1024) : file;\n    reader.readAsArrayBuffer(slicedFile);\n    reader.onerror = function (e) {\n      return defer.reject(e);\n    };\n    reader.onload = function (e) {\n      var result = {orientation: 1};\n      var view = new DataView(this.result);\n      if (view.getUint16(0, false) !== 0xFFD8) return defer.resolve(result);\n\n      var length = view.byteLength,\n        offset = 2;\n      while (offset < length) {\n        var marker = view.getUint16(offset, false);\n        offset += 2;\n        if (marker === 0xFFE1) {\n          if (view.getUint32(offset += 2, false) !== 0x45786966) return defer.resolve(result);\n\n          var little = view.getUint16(offset += 6, false) === 0x4949;\n          offset += view.getUint32(offset + 4, little);\n          var tags = view.getUint16(offset, little);\n          offset += 2;\n          for (var i = 0; i < tags; i++)\n            if (view.getUint16(offset + (i * 12), little) === 0x0112) {\n              var orientation = view.getUint16(offset + (i * 12) + 8, little);\n              if (orientation >= 2 && orientation <= 8) {\n                view.setUint16(offset + (i * 12) + 8, 1, little);\n                result.fixedArrayBuffer = e.target.result;\n              }\n              result.orientation = orientation;\n              return defer.resolve(result);\n            }\n        } else if ((marker & 0xFF00) !== 0xFF00) break;\n        else offset += view.getUint16(offset, false);\n      }\n      return defer.resolve(result);\n    };\n    return defer.promise;\n  };\n\n  function arrayBufferToBase64(buffer) {\n    var binary = '';\n    var bytes = new Uint8Array(buffer);\n    var len = bytes.byteLength;\n    for (var i = 0; i < len; i++) {\n      binary += String.fromCharCode(bytes[i]);\n    }\n    return window.btoa(binary);\n  }\n\n  upload.applyExifRotation = function (file) {\n    if (file.type.indexOf('image/jpeg') !== 0) {\n      return upload.emptyPromise(file);\n    }\n\n    var deferred = $q.defer();\n    upload.readOrientation(file).then(function (result) {\n      if (result.orientation < 2 || result.orientation > 8) {\n        return deferred.resolve(file);\n      }\n      upload.dataUrl(file, true).then(function (url) {\n        var canvas = document.createElement('canvas');\n        var img = document.createElement('img');\n\n        img.onload = function () {\n          try {\n            canvas.width = result.orientation > 4 ? img.height : img.width;\n            canvas.height = result.orientation > 4 ? img.width : img.height;\n            var ctx = canvas.getContext('2d');\n            applyTransform(ctx, result.orientation, img.width, img.height);\n            ctx.drawImage(img, 0, 0);\n            var dataUrl = canvas.toDataURL(file.type || 'image/WebP', 0.934);\n            dataUrl = upload.restoreExif(arrayBufferToBase64(result.fixedArrayBuffer), dataUrl);\n            var blob = upload.dataUrltoBlob(dataUrl, file.name);\n            deferred.resolve(blob);\n          } catch (e) {\n            return deferred.reject(e);\n          }\n        };\n        img.onerror = function () {\n          deferred.reject();\n        };\n        img.src = url;\n      }, function (e) {\n        deferred.reject(e);\n      });\n    }, function (e) {\n      deferred.reject(e);\n    });\n    return deferred.promise;\n  };\n\n  upload.restoreExif = function (orig, resized) {\n    var ExifRestorer = {};\n\n    ExifRestorer.KEY_STR = 'ABCDEFGHIJKLMNOP' +\n      'QRSTUVWXYZabcdef' +\n      'ghijklmnopqrstuv' +\n      'wxyz0123456789+/' +\n      '=';\n\n    ExifRestorer.encode64 = function (input) {\n      var output = '',\n        chr1, chr2, chr3 = '',\n        enc1, enc2, enc3, enc4 = '',\n        i = 0;\n\n      do {\n        chr1 = input[i++];\n        chr2 = input[i++];\n        chr3 = input[i++];\n\n        enc1 = chr1 >> 2;\n        enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n        enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n        enc4 = chr3 & 63;\n\n        if (isNaN(chr2)) {\n          enc3 = enc4 = 64;\n        } else if (isNaN(chr3)) {\n          enc4 = 64;\n        }\n\n        output = output +\n          this.KEY_STR.charAt(enc1) +\n          this.KEY_STR.charAt(enc2) +\n          this.KEY_STR.charAt(enc3) +\n          this.KEY_STR.charAt(enc4);\n        chr1 = chr2 = chr3 = '';\n        enc1 = enc2 = enc3 = enc4 = '';\n      } while (i < input.length);\n\n      return output;\n    };\n\n    ExifRestorer.restore = function (origFileBase64, resizedFileBase64) {\n      if (origFileBase64.match('data:image/jpeg;base64,')) {\n        origFileBase64 = origFileBase64.replace('data:image/jpeg;base64,', '');\n      }\n\n      var rawImage = this.decode64(origFileBase64);\n      var segments = this.slice2Segments(rawImage);\n\n      var image = this.exifManipulation(resizedFileBase64, segments);\n\n      return 'data:image/jpeg;base64,' + this.encode64(image);\n    };\n\n\n    ExifRestorer.exifManipulation = function (resizedFileBase64, segments) {\n      var exifArray = this.getExifArray(segments),\n        newImageArray = this.insertExif(resizedFileBase64, exifArray);\n      return new Uint8Array(newImageArray);\n    };\n\n\n    ExifRestorer.getExifArray = function (segments) {\n      var seg;\n      for (var x = 0; x < segments.length; x++) {\n        seg = segments[x];\n        if (seg[0] === 255 & seg[1] === 225) //(ff e1)\n        {\n          return seg;\n        }\n      }\n      return [];\n    };\n\n\n    ExifRestorer.insertExif = function (resizedFileBase64, exifArray) {\n      var imageData = resizedFileBase64.replace('data:image/jpeg;base64,', ''),\n        buf = this.decode64(imageData),\n        separatePoint = buf.indexOf(255, 3),\n        mae = buf.slice(0, separatePoint),\n        ato = buf.slice(separatePoint),\n        array = mae;\n\n      array = array.concat(exifArray);\n      array = array.concat(ato);\n      return array;\n    };\n\n\n    ExifRestorer.slice2Segments = function (rawImageArray) {\n      var head = 0,\n        segments = [];\n\n      while (1) {\n        if (rawImageArray[head] === 255 & rawImageArray[head + 1] === 218) {\n          break;\n        }\n        if (rawImageArray[head] === 255 & rawImageArray[head + 1] === 216) {\n          head += 2;\n        }\n        else {\n          var length = rawImageArray[head + 2] * 256 + rawImageArray[head + 3],\n            endPoint = head + length + 2,\n            seg = rawImageArray.slice(head, endPoint);\n          segments.push(seg);\n          head = endPoint;\n        }\n        if (head > rawImageArray.length) {\n          break;\n        }\n      }\n\n      return segments;\n    };\n\n\n    ExifRestorer.decode64 = function (input) {\n      var chr1, chr2, chr3 = '',\n        enc1, enc2, enc3, enc4 = '',\n        i = 0,\n        buf = [];\n\n      // remove all characters that are not A-Z, a-z, 0-9, +, /, or =\n      var base64test = /[^A-Za-z0-9\\+\\/\\=]/g;\n      if (base64test.exec(input)) {\n        console.log('There were invalid base64 characters in the input text.\\n' +\n          'Valid base64 characters are A-Z, a-z, 0-9, ' + ', ' / ',and \"=\"\\n' +\n          'Expect errors in decoding.');\n      }\n      input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, '');\n\n      do {\n        enc1 = this.KEY_STR.indexOf(input.charAt(i++));\n        enc2 = this.KEY_STR.indexOf(input.charAt(i++));\n        enc3 = this.KEY_STR.indexOf(input.charAt(i++));\n        enc4 = this.KEY_STR.indexOf(input.charAt(i++));\n\n        chr1 = (enc1 << 2) | (enc2 >> 4);\n        chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n        chr3 = ((enc3 & 3) << 6) | enc4;\n\n        buf.push(chr1);\n\n        if (enc3 !== 64) {\n          buf.push(chr2);\n        }\n        if (enc4 !== 64) {\n          buf.push(chr3);\n        }\n\n        chr1 = chr2 = chr3 = '';\n        enc1 = enc2 = enc3 = enc4 = '';\n\n      } while (i < input.length);\n\n      return buf;\n    };\n\n    return ExifRestorer.restore(orig, resized);  //<= EXIF\n  };\n\n  return upload;\n}]);\n\n","const angular = require(\"angular\");\nrequire(\"ng-file-upload\");\nimport { convertFileSize } from \"../../utilities/file.utilities\";\nrequire(\"../../../sass/pages/sample-files.scss\");\n\n/**\n * Filter for formatting the files size.\n * @return {function} filter for file size\n */\nfunction humanReadableBytes() {\n  return convertFileSize;\n}\n\n/**\n * Controller for the modal to confirm removing a sequenceFile\n *\n * @param {Object} $uibModalInstance Handle on the current modal\n * @param {long} id id for the file to delete.\n * @param {String} label Name of the file to remove from the Sample.\n * @constructor\n */\nfunction FileDeletionController($uibModalInstance, id, label) {\n  this.fileId = id;\n  this.label = label;\n\n  this.deleteFile = function() {\n    $uibModalInstance.close();\n  };\n\n  this.cancel = function() {\n    $uibModalInstance.dismiss();\n  };\n}\n\n/**\n * Controller for the Buttons in the list of sequence files.\n *\n * @param {Object} $uibModal Angular modal\n * @constructor\n */\nfunction FileController($uibModal) {\n  /**\n   * Click handler for the delete button for a sequenceFile\n   *  Displays a confirmation modal\n   *\n   * @param {long} id Id for the sequenceFile to delete\n   * @param {String} label Name of the sequenceFile to delete\n   */\n  this.deleteFile = function(id, label) {\n    $uibModal.open({\n      templateUrl: \"/confirm.html\",\n      controller: \"FileDeletionController as deleteCtrl\",\n      resolve: {\n        id: function() {\n          return id;\n        },\n        label: function() {\n          return label;\n        }\n      }\n    });\n  };\n}\n\n/**\n * Controller for the Buttons in the list of assembly files.\n *\n * @param {Object} $uibModal Angular modal\n * @constructor\n */\nfunction AssemblyFileController($uibModal) {\n  /**\n   * Click handler for the delete button for an assembly\n   *  Displays a confirmation modal\n   *\n   * @param {long} id Id for the assembly to delete\n   * @param {String} label Name of the assembly to delete\n   */\n  this.deleteFile = function(id, label) {\n    $uibModal.open({\n      templateUrl: \"/confirm_assembly.html\",\n      controller: \"FileDeletionController as deleteCtrl\",\n      resolve: {\n        id: function() {\n          return id;\n        },\n        label: function() {\n          return label;\n        }\n      }\n    });\n  };\n}\n\n/**\n * Controller to handle uploading new sequence files\n *\n * @param {object} Upload angular file upload\n * @param {object} $timeout angular window timeout\n * @param {object} $window angular window object\n * @param {object} $uibModal angular-ui modal\n * @constructor\n */\nfunction FileUploadController(Upload, $timeout, $window, $uibModal) {\n  const vm = this;\n  let fileUpload;\n\n  /**\n   * Upload good sequence files to the server.\n   * @param {list} files of files to send.\n   */\n  function uploadGoodFiles(files) {\n    vm.uploading = true;\n\n    $window.onbeforeunload = function() {\n      return $window.PAGE.i18n.leaving;\n    };\n\n    fileUpload = Upload.upload({\n      url: $window.PAGE.URLS.upload,\n      data: {\n        files: files\n      },\n      arrayKey: \"\"\n    });\n\n    fileUpload.then(\n      function() {\n        $window.onbeforeunload = undefined;\n        $timeout(function() {\n          vm.uploading = false;\n          $window.location.reload();\n          vm.processing = false;\n        }, 100);\n      },\n      function(data) {\n        $window.onbeforeunload = undefined;\n        vm.processing = false;\n        vm.uploading = false;\n        vm.errorMessage = data.error_message;\n      },\n      function(evt) {\n        vm.progress = parseInt((100.0 * evt.loaded) / evt.total, 0);\n        if (vm.progress >= 99) {\n          vm.uploading = false;\n          vm.processing = true;\n        }\n      }\n    );\n  }\n\n  vm.uploadFiles = function($files) {\n    console.log(arguments);\n\n    if ($files.length === 0) {\n      return;\n    }\n\n    // Check to make sure the files are the right format.\n    const fastqregex = /\\.fastq(\\/gz)?/;\n    const goodFiles = [];\n    const badFiles = [];\n    for (const file of $files) {\n      if (file.name.match(fastqregex) === null) {\n        badFiles.push(file);\n      } else {\n        goodFiles.push(file);\n      }\n    }\n\n    if (badFiles.length > 0) {\n      $uibModal\n        .open({\n          animation: true,\n          templateUrl: \"/upload-error.html\",\n          controllerAs: \"rejectModalCtrl\",\n          controller: [\n            \"$uibModalInstance\",\n            function($uibModalInstance) {\n              const vm = this;\n              vm.rejects = badFiles;\n              vm.good = goodFiles;\n\n              vm.cancel = function() {\n                $uibModalInstance.dismiss();\n              };\n\n              vm.finish = function() {\n                $uibModalInstance.close(\n                  goodFiles.filter(file => {\n                    return file.selected;\n                  })\n                );\n              };\n            }\n          ],\n          resolve: {\n            rejects: function() {\n              return badFiles;\n            },\n            files: function() {\n              return goodFiles;\n            }\n          }\n        })\n        .result.then(function(files) {\n          uploadGoodFiles(files);\n        });\n    } else {\n      uploadGoodFiles($files);\n    }\n  };\n\n  vm.cancel = function() {\n    if (typeof fileUpload !== \"undefined\") {\n      fileUpload.abort();\n      fileUpload = undefined;\n      vm.uploading = false;\n    }\n  };\n}\n\nconst filesModule = angular\n  .module(\"irida.sample.files\", [\"ui.bootstrap\", \"ngFileUpload\"])\n  .filter(\"humanReadableBytes\", humanReadableBytes)\n  .controller(\"FileUploadController\", [\n    \"Upload\",\n    \"$timeout\",\n    \"$window\",\n    \"$uibModal\",\n    FileUploadController\n  ])\n  .controller(\"FileController\", [\"$uibModal\", FileController])\n  .controller(\"AssemblyFileController\", [\"$uibModal\", AssemblyFileController])\n  .controller(\"FileDeletionController\", [\n    \"$uibModalInstance\",\n    \"id\",\n    \"label\",\n    FileDeletionController\n  ]).name;\n\nangular.module(\"irida\").requires.push(filesModule);\n"],"sourceRoot":""}