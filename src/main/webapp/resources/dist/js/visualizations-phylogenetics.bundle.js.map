{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"jQuery\"","webpack:///external \"angular\"","webpack:///(webpack)/buildin/module.js","webpack:///./node_modules/chroma-js/chroma.js","webpack:///./resources/js/vendor/plugins/angular/angular-bootstrap-switch.js","webpack:///./node_modules/bootstrap-switch/dist/js/bootstrap-switch.js","webpack:///./node_modules/angular-bootstrap-switch/dist/angular-bootstrap-switch.js","webpack:///./node_modules/phylocanvas/dist/phylocanvas.js","webpack:///./node_modules/phylocanvas-plugin-metadata/dist/index.min.js","webpack:///./node_modules/phylocanvas-plugin-export-svg/dist/index.js","webpack:///./node_modules/angular-aside/index.js","webpack:///./node_modules/angular-aside/dist/js/angular-aside.js","webpack:///./resources/js/pages/visualizations/phylogenetics/constants.js","webpack:///./resources/js/pages/visualizations/phylogenetics/components/metadata/metadata.button.component.js","webpack:///./resources/js/pages/visualizations/phylogenetics/components/metadata/metadata.component.js","webpack:///./resources/js/pages/visualizations/phylogenetics/components/metadata/metadata.service.js","webpack:///./resources/js/pages/visualizations/phylogenetics/components/metadata/metadata.module.js","webpack:///./resources/js/pages/visualizations/phylogenetics/components/phylocanvas/phylocanvas.component.js","webpack:///./resources/js/pages/visualizations/phylogenetics/components/phylocanvas/phylocanvas.service.js","webpack:///./resources/js/pages/visualizations/phylogenetics/components/phylocanvas/phylocanvas.module.js","webpack:///./resources/js/pages/visualizations/phylogenetics/components/templates/template.comonent.js","webpack:///./resources/js/pages/visualizations/phylogenetics/components/templates/template.service.js","webpack:///./resources/js/pages/visualizations/phylogenetics/components/templates/template.module.js","webpack:///./resources/js/pages/visualizations/phylogenetics/components/app/app.component.js","webpack:///./resources/js/pages/visualizations/phylogenetics/components/svgExport/svg-export.module.js","webpack:///./resources/js/pages/visualizations/phylogenetics/components/app/app.module.js","webpack:///./resources/js/pages/visualizations/phylogenetics/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","jQuery","angular","webpackPolyfill","deprecate","paths","children","Color","DEG2RAD","LAB_CONSTANTS","PI","PITHIRD","RAD2DEG","TWOPI","_average_lrgb","_guess_formats","_guess_formats_sorted","_input","_interpolators","abs","atan2","bezier","blend","blend_f","brewer","burn","chroma","clip_rgb","cmyk2rgb","cos","css2rgb","darken","dodge","each","floor","hcg2rgb","hex2rgb","hsi2rgb","hsl2css","hsl2rgb","hsv2rgb","interpolate","interpolate_hsx","interpolate_lab","interpolate_lrgb","interpolate_num","interpolate_rgb","lab2lch","lab2rgb","lab_xyz","lch2lab","lch2rgb","lighten","limit","log","luminance_x","max","multiply","num2rgb","overlay","pow","rgb2cmyk","rgb2css","rgb2hcg","rgb2hex","rgb2hsi","rgb2hsl","rgb2hsv","rgb2lab","rgb2lch","rgb2luminance","rgb2num","rgb2temperature","rgb2xyz","rgb_xyz","rnd","round","screen","sin","sqrt","temperature2rgb","type","unpack","w3cx11","xyz_lab","xyz_rgb","slice","classToType","len","ref","split","length","toLowerCase","obj","strType","toString","x","min","args","Array","rgb","_clipped","_unclipped","Math","arguments","func","ctor","child","result","apply","undefined","__WEBPACK_AMD_DEFINE_RESULT__","version","arg","chk","len1","me","w","this","push","_rgb","sort","a","b","test","console","warn","hex","OrRd","PuBu","BuPu","Oranges","BuGn","YlOrBr","YlGn","Reds","RdPu","Greens","YlGnBu","Purples","GnBu","Greys","YlOrRd","PuRd","Blues","PuBuGn","Viridis","Spectral","RdYlGn","RdBu","PiYG","PRGn","RdYlBu","BrBG","RdGy","PuOr","Set2","Accent","Set1","Set3","Dark2","Paired","Pastel2","Pastel1","results","colors","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflower","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","laserlemon","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrod","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","maroon2","maroon3","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","purple2","purple3","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","y","z","isNaN","Yn","Xn","Zn","t1","t2","t0","Kn","t3","g","ref1","lab","concat","I","I0","I1","lab0","lab1","lab2","lab3","ref2","f","scale","cubehelix","start","rotations","hue","gamma","lightness","dh","dl","fract","amp","cos_a","sin_a","h","random","code","charAt","col1","col2","interpol","res","alpha","mix","k","v","map","rgba","lrgb","xyz0","xyz1","xyz","average","A","cnt","dx","dy","first","xyz2","splice","u","match","substr","parseInt","css","channels","hxa","str","Number","NaN","hsl","q","ref3","ref4","ref5","delta","hsv","num","_c","_g","hcg","aa","ab","join","named","L","lch","hcl","reverse","cmyk","gl","luminance","lum","cur_lum","max_iter","lm","kelvin","temp","maxTemp","minTemp","temperature","K","contrast","l1","l2","distance","sum_sq","deltaE","C","L1","L2","a1","a2","b1","b2","c1","c2","c4","delA","delB","delC","h1","sc","sl","v1","v2","v3","modechan","channel","src","indexOf","set","clipped","amount","brighten","darker","brighter","saturate","desaturate","premultiply","bottom","top","normal","c0","out","analyze","data","val","MAX_VALUE","sum","values","count","domain","limits","positions","_classes","_colorCache","_colors","_correctLightness","_domain","_gamma","_max","_min","_mode","_nacol","_out","_padding","_pos","_spread","_useCache","getClass","getColor","resetCache","setColors","tmap","col","maxc","minc","bypassMap","classes","_m","range","_o","spread","correctLightness","L0","L_actual","L_diff","L_ideal","pol","padding","numColors","dd","dm","samples","cache","nodata","scales","cool","hot","filter","add","visit","ac","ad","ae","af","ag","ah","ai","aj","ak","al","am","assignments","best","centroids","cluster","clusterSizes","dist","j","kClusters","max_log","min_log","mindist","nb_iters","newCentroids","pb","pr","ref10","ref11","ref12","ref13","ref14","ref6","ref7","ref8","ref9","repeat","tmpKMeansBreaks","LOG10E","acos","hsi","hue0","hue1","lbv0","lbv1","sat","sat0","sat1","n1","n2","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","_jquery","_jquery2","default","_extends","assign","target","source","_createClass","defineProperties","props","descriptor","configurable","writable","Constructor","protoProps","staticProps","$","window","BootstrapSwitch","element","_this","options","instance","TypeError","_classCallCheck","$element","extend","fn","bootstrapSwitch","defaults","_getElementOptions","prevOptions","$wrapper","class","state","size","disabled","readonly","indeterminate","inverse","attr","_getClass","baseClass","_getClasses","wrapperClass","$container","$on","html","onText","onColor","$off","offText","offColor","$label","labelText","on","onInit","_len","_key","onSwitchChange","is","trigger","wrap","parent","before","prop","_init","_elementHandlers","_handleHandlers","_labelHandlers","_formHandler","_externalLabelHandler","skip","radioAllOff","Boolean","removeClass","addClass","_width","_containerPosition","animate","toggleAnimate","toggleClass","toggleDisabled","toggleReadonly","toggleIndeterminate","toggleInverse","clone","replaceWith","handleWidth","labelWidth","$form","closest","off","removeData","not","remove","unwrap","_this2","$handles","width","index","_handleWidth","outerWidth","_labelWidth","_this3","_this4","init","setPrevOptions","setTimeout","initInterval","setInterval","clearInterval","_this5","setPreviousOptions.bootstrapSwitch","previousState.bootstrapSwitch","change.bootstrapSwitch","event","preventDefault","stopImmediatePropagation","focus.bootstrapSwitch","blur.bootstrapSwitch","keydown.bootstrapSwitch","which","_this6","stopPropagation","_this7","handlers","click","mousedown.bootstrapSwitch touchstart.bootstrapSwitch","_dragStart","pageX","originalEvent","touches","mousemove.bootstrapSwitch touchmove.bootstrapSwitch","difference","_dragEnd","mouseup.bootstrapSwitch touchend.bootstrapSwitch","mouseleave.bootstrapSwitch","_this8","$externalLabel","toggleState","find","checked","isArray","option","_len2","_key2","reduce","ret","next","$this","existingData","directive","$parse","$timeout","restrict","require","link","scope","attrs","controller","isInit","getTrueValue","ngValue","trueValue","ngTrueValue","isUndefined","getBooleanFromString","$eval","getBooleanFromStringDefTrue","getValueOrUndefined","getExprFromString","noop","$evalAsync","getSwitchAttrValue","attrName","switchRadioOff","switchActive","switchAnimate","switchLabel","switchIcon","switchWrapper","switchInverse","switchReadonly","switchChange","setSwitchParamMaybe","modelAttr","newValue","setActive","e","$modelValue","$viewValue","$setViewValue","$observe","$render","viewValue","initMaybe","bindings","switchOnText","switchOffText","switchOnColor","switchOffColor","switchSize","switchHandleWidth","switchLabelWidth","observeProp","listenToModel","template","replace","factory","id","loaded","utils","nodeRenderers","treeTypes","Parser","Tooltip","Prerenderer","Branch","Tree","_Tree2","_interopRequireDefault","_Branch2","_Prerenderer2","_Tooltip2","_Parser2","_treeTypes2","_nodeRenderers2","newObj","_interopRequireWildcard","decorate","fnName","originalFn","plugin","pluginFn","createTree","config","_utils","_Tooltip","_parsers2","dom","setCursorDrag","setCursorDragging","fireEvent","events","addEvent","removeEvent","getPixelRatio","canvas","translateClick","Predicates","constants","_point","containerElement","document","getElementById","branches","leaves","root","stringRepresentation","backColour","originalTree","getComputedStyle","position","style","boxSizing","canvasElement","createElement","className","height","offsetHeight","offsetWidth","zIndex","appendChild","getContext","onselectstart","fillStyle","strokeStyle","save","collapsedColour","defaultCollapsed","tooltip","ChildNodesTooltip","drawn","highlighters","zoom","zoomFactor","disableZoom","fillCanvas","branchScaling","currentBranchScale","branchScalingStep","pickedup","dragging","startx","starty","baseNodeSize","origx","origy","offsetx","offsety","selectedColour","highlightColour","highlightWidth","highlightSize","branchColour","branchScalar","labelPadding","multiSelect","clickFlag","clickFlagPredicate","tautology","hoverLabel","internalNodesSelectable","showLabels","showBranchLengthLabels","branchLengthLabelPredicate","showInternalNodeLabels","internalLabelStyle","colour","textSize","font","format","setTreeType","maxBranchLength","lineWidth","unselectOnClickAway","farthestNodeFromRootX","farthestNodeFromRootY","shiftKeyDrag","maxLabelLength","resizeToContainer","eventListeners","listener","clicked","mousedown","pickup","mouseup","drop","mouseout","mousemove","drag","mousewheel","scroll","DOMMouseScroll","resize","draw","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","keys","iterator","done","_eventListeners$event","addListener","err","return","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","def","childIds","node","getChildProperties","collapsed","setInitialCollapsedBranches","_root","arr","arr2","from","_toConsumableArray","getNodeIdsWithFlag","flag","memo","leaf","button","nodeIds","getNodeAtMousePosition","isMultiSelectActive","metaKey","ctrlKey","interactive","someUnflagged","some","cascadeFlag","nodesUpdated","ratio","xmove","clientX","ymove","clientY","nd","hovered","hasCollapsedAncestor","open","cursor","close","shiftKey","forceRedraw","clearRect","lineCap","lineJoin","prerenderer","run","fitInPanel","pixelRatio","translate","branchRenderer","render","forEach","restore","loadError","Error","wheelDelta","offsetX","offsetY","sign","detail","setBranchScale","smoothZoom","pattern","searchProperty","foundLeaves","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","_","toDataURL","inputString","buildOptions","buildCallback","callback","build","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","parserName","parser","fileExtension","validator","error","branchLengths","parents","storeNode","extractChildren","extractNestedBranches","branchLength","setTotalLength","formatString","clearState","lastId","setRoot","parse","saveState","beforeFirstDraw","saveOriginalTree","loadCompleted","resetTree","subtreeDrawn","load","generateId","tree","ystep","calculateFontSize","quiet","oldType","treeType","labelAlign","treeTypeChanged","navigator","adjustForPixelRatio","_ref","getCentrePoint","oldZoom","calculateZoomedOffset","steps","point","setZoom","offset","coord","newZoom","branchScalingAxis","previoudBranchLength","initialBranchScalar","scaleRatio","oldPosition","newPosition","dimensions","measureText","append","newType","initialBounds","minx","maxx","miny","maxy","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","bounds","getBounds","canvasSize","treeSize","xZoomRatio","yZoomRatio","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","branch","rotate","nwk","getNwk","lastIndexOf","setSize","removeEventListeners","labelAlignEnabled","removeListener","_canvas","_constants","_dom","_events","getBackingStorePixelRatio","translatePoint","phylocanvas","undoPointTranslation","_ref2","context","backingStorePixelRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","devicePixelRatio","createBlobUrl","blob","Blob","windowURL","createObjectURL","setupDownloadLink","url","filename","anchor","isDownloadSupported","download","href","revokeObjectURL","getX","domElement","xValue","offsetLeft","offsetParent","getY","yValue","offsetTop","hasClass","URL","webkitURL","_typeof","constructor","param","params","createEvent","initEvent","createEventObject","eventType","eventName","dispatchEvent","elem","addEventListener","attachEvent","removeEventListener","killEvent","createHandler","handler","Angles","FORTYFIVE","QUARTER","HALF","FULL","Shapes","contradiction","leafOnly","nonLeaf","_bounds","_leafStyle","angle","centerx","centery","highlighted","label","maxChildAngle","minChildAngle","nodeShape","radius","selected","totalBranchLength","pruned","labelStyle","leafStyle","fSize","getTextSize","getLabel","getFontString","tx","getLabelStartX","alignLabels","getLabelOffset","beginPath","getTextColour","fillText","closePath","centerX","centerY","boundedRadius","numberOfLeaves","queue","pop","getCollapsedMeasurements","_getCollapsedMeasurem","startAngle","endAngle","moveTo","arc","gradient","createRadialGradient","addColorStop","getColour","fill","_tree","isHighlighted","getRadius","lineTo","getDiameter","stroke","_tree2","drawLabelConnector","getLeafStyle","drawLabel","getHighlightLineWidth","getHighlightRadius","textBaseline","textAlign","em","toFixed","nodeRadius","theta","setNodeDimensions","drawCollapsed","drawLeaf","drawHighlight","drawBranchLabels","getChildCount","getChildYTotal","predicate","reset","expand","redrawFromBranch","collapse","colours","specifiedColour","isRoot","childColours","getChildColours","hasLabelConnector","getHighlightSize","newChildren","shape","getLabelSize","nodeSize","totalLength","getTotalLength","step","getStep","_leafStyle2","_rectangular2","_circular2","_radial2","_diagonal2","_hierarchical2","rectangular","circular","radial","diagonal","hierarchical","_BranchRenderer2","_branchRenderer2","_prerenderer2","getNumberOfLeaves","BranchRenderer","prepareChild","drawNode","calculate","setFontSize","setMaxLabelLength","childrenArray","labelOffsetX","labelOffsetY","_branch$tree","getChildNo","prerenderNodes","xstep","drawConnector","connectingOffset","commitPath","lengthOfSquareSide","circle","scaledArea","scaledRadius","square","lengthOfSide","startX","star","cx","outerRadius","innerRadius","rot","triangle","midpoint","_ref$className","_ref$element","_ref$zIndex","_ref$parent","display","closed","hasChildNodes","removeChild","firstChild","createContent","left","self","ReferenceError","_possibleConstructorReturn","__proto__","getPrototypeOf","background","color","marginTop","borderRadius","fontFamily","fontSize","fontWeight","subClass","superClass","setPrototypeOf","_inherits","textNode","createTextNode","_newick2","_nexus2","nexus","newick","parseFn","_ref2$options","validate","string","_Branch","isTerminatingChar","terminatingChar","labelTerminatingChars","nodeTerminatingChars","parseBranch","char","parseLabel","postLabelIndex","branchLengthStr","segments","displayOptions","setDisplay","parseAnnotations","nodeLength","parseBranchLength","parseFloat","cleanString","currentNode","addChild","_newick","treeSection","leafNameObject","translateSection","tIntArr","ia","trim","tArr","trees","_i","metadata","blockLength","columns","propertyName","_maxLabelWidth","blockSize","_maxBlockSize","hypot","_headingDrawn","showHeaders","_maxHeaderWidth","_maxHeaderHeight","headerAngle","underlineHeaders","S","T","H","M","W","B","fillRect","__lookupGetter__","__defineGetter__","active","O","P","D","N","exportSVG","ExportSVG","RegExp","right","center","end","alphabetic","hanging","middle","svgAttr","svg","miterLimit","globalAlpha","shadowColor","shadowOffsetX","shadowOffsetY","shadowBlur","__root","__ctx","__createElement","setAttribute","exec","enableMirroring","__document","__canvas","__setDefaultStyles","__stack","__getStyleState","__groupStack","createElementNS","setAttributeNS","__ids","__defs","__currentElement","__applyStyleState","__applyStyleToCurrentElement","childNodes","getAttribute","__closestGroupOrSvg","nodeName","parentNode","getSerializedSvg","XMLSerializer","serializeToString","getSvg","__addTransform","cy","transform","__currentDefaultPath","__currentPosition","__applyCurrentDefaultPath","__addPathCommand","bezierCurveTo","cp1x","cp1y","cp2x","cp2y","quadraticCurveTo","cpx","cpy","arcTo","rect","strokeRect","createLinearGradient","x1","x2","y1","y2","gradientUnits","fx","fy","__parseFont","family","weight","decoration","__fontUnderline","__fontHref","__wrapTextLink","__applyText","font-family","font-size","font-style","font-weight","text-decoration","text-anchor","dominant-baseline","strokeText","rx","ry","xAxisRotation","largeArcFlag","sweepFlag","endX","endY","clip","drawImage","createPattern","drawFocusRing","createImageData","getImageData","putImageData","globalCompositeOperation","setTransform","C2S","$uibModal","placement","asideFactory","vertHoriz","windowClass","METADATA","LOADED","ERROR","EMPTY","UPDATED","TEMPLATE","ALL_FIELDS","TREE","NOT_LOADED","COMPLETED","EXPORT_SVG","TEMPLATES","MetadataAsideController","$uibModalInstance","terms","modal","handleTermVisibilityChange","dismiss","$inject","MetadataButtonController","$rootScope","$scope","$aside","fields","existing","copy","newOrder","field","findIndex","term","item","showFields","$broadcast","templateUrl","openedClass","controllerAs","resolve","MetadataButton","metadataUrl","MetadataComponent","onSelectionChange","formatMetadata","metadataFieldLabels","colourMap","sampleNames","sampleName","sampleMetadata","metadataLabel","reference","MetadataService","$http","$window","metadata_service_classCallCheck","PAGE","urls","then","response","_response$data","templateTerms","includes","MetadataModule","service","component","PHYLOCANVAS_DIV","metadataFormat","setCanvasHeight","querySelector","innerHeight","phylocanvasController","$q","Phylocanvas","PhylocanvasService","metadataPlugin","exportSVgPlugin","promises","metadataPromise","defer","promise","$onInit","newickPromise","getNewickData","newickurl","$emit","all","isString","getSortedAndFilteredColumns","getSerialisedSVG","encodeURIComponent","body","Date","now","PhylocanvasComponent","phylocanvas_service_classCallCheck","PhylocanvasModule","templateController","TemplateService","templates","getTemplates","templatesurl","templateChange","selectedTemplate","getFieldsForTemplate","fieldsurl","TemplateComponent","template_service_classCallCheck","templateId","TemplateModule","AppController","app_component_classCallCheck","loading","metadataError","metadataEmpty","showEmptyMetadataWarning","metadataLoaded","treeError","templateError","closeEmptyMetadataWarning","AppComponent","transclude","exportSVGController","exportSVGComponent","AppModule","requires"],"mappings":"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","file":"js/visualizations-phylogenetics.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/resources/dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 987);\n","module.exports = jQuery;","module.exports = angular;","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","\n/**\n * @license\n *\n * chroma.js - JavaScript library for color conversions\n * \n * Copyright (c) 2011-2017, Gregor Aisch\n * All rights reserved.\n * \n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n * \n * 1. Redistributions of source code must retain the above copyright notice, this\n *    list of conditions and the following disclaimer.\n * \n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n * \n * 3. The name Gregor Aisch may not be used to endorse or promote products\n *    derived from this software without specific prior written permission.\n * \n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL GREGOR AISCH OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n */\n\n(function() {\n  var Color, DEG2RAD, LAB_CONSTANTS, PI, PITHIRD, RAD2DEG, TWOPI, _average_lrgb, _guess_formats, _guess_formats_sorted, _input, _interpolators, abs, atan2, bezier, blend, blend_f, brewer, burn, chroma, clip_rgb, cmyk2rgb, colors, cos, css2rgb, darken, dodge, each, floor, hcg2rgb, hex2rgb, hsi2rgb, hsl2css, hsl2rgb, hsv2rgb, interpolate, interpolate_hsx, interpolate_lab, interpolate_lrgb, interpolate_num, interpolate_rgb, lab2lch, lab2rgb, lab_xyz, lch2lab, lch2rgb, lighten, limit, log, luminance_x, m, max, multiply, normal, num2rgb, overlay, pow, rgb2cmyk, rgb2css, rgb2hcg, rgb2hex, rgb2hsi, rgb2hsl, rgb2hsv, rgb2lab, rgb2lch, rgb2luminance, rgb2num, rgb2temperature, rgb2xyz, rgb_xyz, rnd, root, round, screen, sin, sqrt, temperature2rgb, type, unpack, w3cx11, xyz_lab, xyz_rgb,\n    slice = [].slice;\n\n  type = (function() {\n\n    /*\n    for browser-safe type checking+\n    ported from jQuery's $.type\n     */\n    var classToType, len, name, o, ref;\n    classToType = {};\n    ref = \"Boolean Number String Function Array Date RegExp Undefined Null\".split(\" \");\n    for (o = 0, len = ref.length; o < len; o++) {\n      name = ref[o];\n      classToType[\"[object \" + name + \"]\"] = name.toLowerCase();\n    }\n    return function(obj) {\n      var strType;\n      strType = Object.prototype.toString.call(obj);\n      return classToType[strType] || \"object\";\n    };\n  })();\n\n  limit = function(x, min, max) {\n    if (min == null) {\n      min = 0;\n    }\n    if (max == null) {\n      max = 1;\n    }\n    if (x < min) {\n      x = min;\n    }\n    if (x > max) {\n      x = max;\n    }\n    return x;\n  };\n\n  unpack = function(args) {\n    if (args.length >= 3) {\n      return Array.prototype.slice.call(args);\n    } else {\n      return args[0];\n    }\n  };\n\n  clip_rgb = function(rgb) {\n    var i, o;\n    rgb._clipped = false;\n    rgb._unclipped = rgb.slice(0);\n    for (i = o = 0; o < 3; i = ++o) {\n      if (i < 3) {\n        if (rgb[i] < 0 || rgb[i] > 255) {\n          rgb._clipped = true;\n        }\n        if (rgb[i] < 0) {\n          rgb[i] = 0;\n        }\n        if (rgb[i] > 255) {\n          rgb[i] = 255;\n        }\n      } else if (i === 3) {\n        if (rgb[i] < 0) {\n          rgb[i] = 0;\n        }\n        if (rgb[i] > 1) {\n          rgb[i] = 1;\n        }\n      }\n    }\n    if (!rgb._clipped) {\n      delete rgb._unclipped;\n    }\n    return rgb;\n  };\n\n  PI = Math.PI, round = Math.round, cos = Math.cos, floor = Math.floor, pow = Math.pow, log = Math.log, sin = Math.sin, sqrt = Math.sqrt, atan2 = Math.atan2, max = Math.max, abs = Math.abs;\n\n  TWOPI = PI * 2;\n\n  PITHIRD = PI / 3;\n\n  DEG2RAD = PI / 180;\n\n  RAD2DEG = 180 / PI;\n\n  chroma = function() {\n    if (arguments[0] instanceof Color) {\n      return arguments[0];\n    }\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, arguments, function(){});\n  };\n\n  chroma[\"default\"] = chroma;\n\n  _interpolators = [];\n\n  if ((typeof module !== \"undefined\" && module !== null) && (module.exports != null)) {\n    module.exports = chroma;\n  }\n\n  if (typeof define === 'function' && define.amd) {\n    define([], function() {\n      return chroma;\n    });\n  } else {\n    root = typeof exports !== \"undefined\" && exports !== null ? exports : this;\n    root.chroma = chroma;\n  }\n\n  chroma.version = '1.4.1';\n\n  _input = {};\n\n  _guess_formats = [];\n\n  _guess_formats_sorted = false;\n\n  Color = (function() {\n    function Color() {\n      var arg, args, chk, len, len1, me, mode, o, w;\n      me = this;\n      args = [];\n      for (o = 0, len = arguments.length; o < len; o++) {\n        arg = arguments[o];\n        if (arg != null) {\n          args.push(arg);\n        }\n      }\n      if (args.length > 1) {\n        mode = args[args.length - 1];\n      }\n      if (_input[mode] != null) {\n        me._rgb = clip_rgb(_input[mode](unpack(args.slice(0, -1))));\n      } else {\n        if (!_guess_formats_sorted) {\n          _guess_formats = _guess_formats.sort(function(a, b) {\n            return b.p - a.p;\n          });\n          _guess_formats_sorted = true;\n        }\n        for (w = 0, len1 = _guess_formats.length; w < len1; w++) {\n          chk = _guess_formats[w];\n          mode = chk.test.apply(chk, args);\n          if (mode) {\n            break;\n          }\n        }\n        if (mode) {\n          me._rgb = clip_rgb(_input[mode].apply(_input, args));\n        }\n      }\n      if (me._rgb == null) {\n        console.warn('unknown format: ' + args);\n      }\n      if (me._rgb == null) {\n        me._rgb = [0, 0, 0];\n      }\n      if (me._rgb.length === 3) {\n        me._rgb.push(1);\n      }\n    }\n\n    Color.prototype.toString = function() {\n      return this.hex();\n    };\n\n    return Color;\n\n  })();\n\n  chroma._input = _input;\n\n\n  /**\n  \tColorBrewer colors for chroma.js\n  \n  \tCopyright (c) 2002 Cynthia Brewer, Mark Harrower, and The \n  \tPennsylvania State University.\n  \n  \tLicensed under the Apache License, Version 2.0 (the \"License\"); \n  \tyou may not use this file except in compliance with the License.\n  \tYou may obtain a copy of the License at\t\n  \thttp://www.apache.org/licenses/LICENSE-2.0\n  \n  \tUnless required by applicable law or agreed to in writing, software distributed\n  \tunder the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n  \tCONDITIONS OF ANY KIND, either express or implied. See the License for the\n  \tspecific language governing permissions and limitations under the License.\n  \n      @preserve\n   */\n\n  chroma.brewer = brewer = {\n    OrRd: ['#fff7ec', '#fee8c8', '#fdd49e', '#fdbb84', '#fc8d59', '#ef6548', '#d7301f', '#b30000', '#7f0000'],\n    PuBu: ['#fff7fb', '#ece7f2', '#d0d1e6', '#a6bddb', '#74a9cf', '#3690c0', '#0570b0', '#045a8d', '#023858'],\n    BuPu: ['#f7fcfd', '#e0ecf4', '#bfd3e6', '#9ebcda', '#8c96c6', '#8c6bb1', '#88419d', '#810f7c', '#4d004b'],\n    Oranges: ['#fff5eb', '#fee6ce', '#fdd0a2', '#fdae6b', '#fd8d3c', '#f16913', '#d94801', '#a63603', '#7f2704'],\n    BuGn: ['#f7fcfd', '#e5f5f9', '#ccece6', '#99d8c9', '#66c2a4', '#41ae76', '#238b45', '#006d2c', '#00441b'],\n    YlOrBr: ['#ffffe5', '#fff7bc', '#fee391', '#fec44f', '#fe9929', '#ec7014', '#cc4c02', '#993404', '#662506'],\n    YlGn: ['#ffffe5', '#f7fcb9', '#d9f0a3', '#addd8e', '#78c679', '#41ab5d', '#238443', '#006837', '#004529'],\n    Reds: ['#fff5f0', '#fee0d2', '#fcbba1', '#fc9272', '#fb6a4a', '#ef3b2c', '#cb181d', '#a50f15', '#67000d'],\n    RdPu: ['#fff7f3', '#fde0dd', '#fcc5c0', '#fa9fb5', '#f768a1', '#dd3497', '#ae017e', '#7a0177', '#49006a'],\n    Greens: ['#f7fcf5', '#e5f5e0', '#c7e9c0', '#a1d99b', '#74c476', '#41ab5d', '#238b45', '#006d2c', '#00441b'],\n    YlGnBu: ['#ffffd9', '#edf8b1', '#c7e9b4', '#7fcdbb', '#41b6c4', '#1d91c0', '#225ea8', '#253494', '#081d58'],\n    Purples: ['#fcfbfd', '#efedf5', '#dadaeb', '#bcbddc', '#9e9ac8', '#807dba', '#6a51a3', '#54278f', '#3f007d'],\n    GnBu: ['#f7fcf0', '#e0f3db', '#ccebc5', '#a8ddb5', '#7bccc4', '#4eb3d3', '#2b8cbe', '#0868ac', '#084081'],\n    Greys: ['#ffffff', '#f0f0f0', '#d9d9d9', '#bdbdbd', '#969696', '#737373', '#525252', '#252525', '#000000'],\n    YlOrRd: ['#ffffcc', '#ffeda0', '#fed976', '#feb24c', '#fd8d3c', '#fc4e2a', '#e31a1c', '#bd0026', '#800026'],\n    PuRd: ['#f7f4f9', '#e7e1ef', '#d4b9da', '#c994c7', '#df65b0', '#e7298a', '#ce1256', '#980043', '#67001f'],\n    Blues: ['#f7fbff', '#deebf7', '#c6dbef', '#9ecae1', '#6baed6', '#4292c6', '#2171b5', '#08519c', '#08306b'],\n    PuBuGn: ['#fff7fb', '#ece2f0', '#d0d1e6', '#a6bddb', '#67a9cf', '#3690c0', '#02818a', '#016c59', '#014636'],\n    Viridis: ['#440154', '#482777', '#3f4a8a', '#31678e', '#26838f', '#1f9d8a', '#6cce5a', '#b6de2b', '#fee825'],\n    Spectral: ['#9e0142', '#d53e4f', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#e6f598', '#abdda4', '#66c2a5', '#3288bd', '#5e4fa2'],\n    RdYlGn: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#d9ef8b', '#a6d96a', '#66bd63', '#1a9850', '#006837'],\n    RdBu: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#f7f7f7', '#d1e5f0', '#92c5de', '#4393c3', '#2166ac', '#053061'],\n    PiYG: ['#8e0152', '#c51b7d', '#de77ae', '#f1b6da', '#fde0ef', '#f7f7f7', '#e6f5d0', '#b8e186', '#7fbc41', '#4d9221', '#276419'],\n    PRGn: ['#40004b', '#762a83', '#9970ab', '#c2a5cf', '#e7d4e8', '#f7f7f7', '#d9f0d3', '#a6dba0', '#5aae61', '#1b7837', '#00441b'],\n    RdYlBu: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee090', '#ffffbf', '#e0f3f8', '#abd9e9', '#74add1', '#4575b4', '#313695'],\n    BrBG: ['#543005', '#8c510a', '#bf812d', '#dfc27d', '#f6e8c3', '#f5f5f5', '#c7eae5', '#80cdc1', '#35978f', '#01665e', '#003c30'],\n    RdGy: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#ffffff', '#e0e0e0', '#bababa', '#878787', '#4d4d4d', '#1a1a1a'],\n    PuOr: ['#7f3b08', '#b35806', '#e08214', '#fdb863', '#fee0b6', '#f7f7f7', '#d8daeb', '#b2abd2', '#8073ac', '#542788', '#2d004b'],\n    Set2: ['#66c2a5', '#fc8d62', '#8da0cb', '#e78ac3', '#a6d854', '#ffd92f', '#e5c494', '#b3b3b3'],\n    Accent: ['#7fc97f', '#beaed4', '#fdc086', '#ffff99', '#386cb0', '#f0027f', '#bf5b17', '#666666'],\n    Set1: ['#e41a1c', '#377eb8', '#4daf4a', '#984ea3', '#ff7f00', '#ffff33', '#a65628', '#f781bf', '#999999'],\n    Set3: ['#8dd3c7', '#ffffb3', '#bebada', '#fb8072', '#80b1d3', '#fdb462', '#b3de69', '#fccde5', '#d9d9d9', '#bc80bd', '#ccebc5', '#ffed6f'],\n    Dark2: ['#1b9e77', '#d95f02', '#7570b3', '#e7298a', '#66a61e', '#e6ab02', '#a6761d', '#666666'],\n    Paired: ['#a6cee3', '#1f78b4', '#b2df8a', '#33a02c', '#fb9a99', '#e31a1c', '#fdbf6f', '#ff7f00', '#cab2d6', '#6a3d9a', '#ffff99', '#b15928'],\n    Pastel2: ['#b3e2cd', '#fdcdac', '#cbd5e8', '#f4cae4', '#e6f5c9', '#fff2ae', '#f1e2cc', '#cccccc'],\n    Pastel1: ['#fbb4ae', '#b3cde3', '#ccebc5', '#decbe4', '#fed9a6', '#ffffcc', '#e5d8bd', '#fddaec', '#f2f2f2']\n  };\n\n  (function() {\n    var key, results;\n    results = [];\n    for (key in brewer) {\n      results.push(brewer[key.toLowerCase()] = brewer[key]);\n    }\n    return results;\n  })();\n\n\n  /**\n  \tX11 color names\n  \n  \thttp://www.w3.org/TR/css3-color/#svg-color\n   */\n\n  w3cx11 = {\n    aliceblue: '#f0f8ff',\n    antiquewhite: '#faebd7',\n    aqua: '#00ffff',\n    aquamarine: '#7fffd4',\n    azure: '#f0ffff',\n    beige: '#f5f5dc',\n    bisque: '#ffe4c4',\n    black: '#000000',\n    blanchedalmond: '#ffebcd',\n    blue: '#0000ff',\n    blueviolet: '#8a2be2',\n    brown: '#a52a2a',\n    burlywood: '#deb887',\n    cadetblue: '#5f9ea0',\n    chartreuse: '#7fff00',\n    chocolate: '#d2691e',\n    coral: '#ff7f50',\n    cornflower: '#6495ed',\n    cornflowerblue: '#6495ed',\n    cornsilk: '#fff8dc',\n    crimson: '#dc143c',\n    cyan: '#00ffff',\n    darkblue: '#00008b',\n    darkcyan: '#008b8b',\n    darkgoldenrod: '#b8860b',\n    darkgray: '#a9a9a9',\n    darkgreen: '#006400',\n    darkgrey: '#a9a9a9',\n    darkkhaki: '#bdb76b',\n    darkmagenta: '#8b008b',\n    darkolivegreen: '#556b2f',\n    darkorange: '#ff8c00',\n    darkorchid: '#9932cc',\n    darkred: '#8b0000',\n    darksalmon: '#e9967a',\n    darkseagreen: '#8fbc8f',\n    darkslateblue: '#483d8b',\n    darkslategray: '#2f4f4f',\n    darkslategrey: '#2f4f4f',\n    darkturquoise: '#00ced1',\n    darkviolet: '#9400d3',\n    deeppink: '#ff1493',\n    deepskyblue: '#00bfff',\n    dimgray: '#696969',\n    dimgrey: '#696969',\n    dodgerblue: '#1e90ff',\n    firebrick: '#b22222',\n    floralwhite: '#fffaf0',\n    forestgreen: '#228b22',\n    fuchsia: '#ff00ff',\n    gainsboro: '#dcdcdc',\n    ghostwhite: '#f8f8ff',\n    gold: '#ffd700',\n    goldenrod: '#daa520',\n    gray: '#808080',\n    green: '#008000',\n    greenyellow: '#adff2f',\n    grey: '#808080',\n    honeydew: '#f0fff0',\n    hotpink: '#ff69b4',\n    indianred: '#cd5c5c',\n    indigo: '#4b0082',\n    ivory: '#fffff0',\n    khaki: '#f0e68c',\n    laserlemon: '#ffff54',\n    lavender: '#e6e6fa',\n    lavenderblush: '#fff0f5',\n    lawngreen: '#7cfc00',\n    lemonchiffon: '#fffacd',\n    lightblue: '#add8e6',\n    lightcoral: '#f08080',\n    lightcyan: '#e0ffff',\n    lightgoldenrod: '#fafad2',\n    lightgoldenrodyellow: '#fafad2',\n    lightgray: '#d3d3d3',\n    lightgreen: '#90ee90',\n    lightgrey: '#d3d3d3',\n    lightpink: '#ffb6c1',\n    lightsalmon: '#ffa07a',\n    lightseagreen: '#20b2aa',\n    lightskyblue: '#87cefa',\n    lightslategray: '#778899',\n    lightslategrey: '#778899',\n    lightsteelblue: '#b0c4de',\n    lightyellow: '#ffffe0',\n    lime: '#00ff00',\n    limegreen: '#32cd32',\n    linen: '#faf0e6',\n    magenta: '#ff00ff',\n    maroon: '#800000',\n    maroon2: '#7f0000',\n    maroon3: '#b03060',\n    mediumaquamarine: '#66cdaa',\n    mediumblue: '#0000cd',\n    mediumorchid: '#ba55d3',\n    mediumpurple: '#9370db',\n    mediumseagreen: '#3cb371',\n    mediumslateblue: '#7b68ee',\n    mediumspringgreen: '#00fa9a',\n    mediumturquoise: '#48d1cc',\n    mediumvioletred: '#c71585',\n    midnightblue: '#191970',\n    mintcream: '#f5fffa',\n    mistyrose: '#ffe4e1',\n    moccasin: '#ffe4b5',\n    navajowhite: '#ffdead',\n    navy: '#000080',\n    oldlace: '#fdf5e6',\n    olive: '#808000',\n    olivedrab: '#6b8e23',\n    orange: '#ffa500',\n    orangered: '#ff4500',\n    orchid: '#da70d6',\n    palegoldenrod: '#eee8aa',\n    palegreen: '#98fb98',\n    paleturquoise: '#afeeee',\n    palevioletred: '#db7093',\n    papayawhip: '#ffefd5',\n    peachpuff: '#ffdab9',\n    peru: '#cd853f',\n    pink: '#ffc0cb',\n    plum: '#dda0dd',\n    powderblue: '#b0e0e6',\n    purple: '#800080',\n    purple2: '#7f007f',\n    purple3: '#a020f0',\n    rebeccapurple: '#663399',\n    red: '#ff0000',\n    rosybrown: '#bc8f8f',\n    royalblue: '#4169e1',\n    saddlebrown: '#8b4513',\n    salmon: '#fa8072',\n    sandybrown: '#f4a460',\n    seagreen: '#2e8b57',\n    seashell: '#fff5ee',\n    sienna: '#a0522d',\n    silver: '#c0c0c0',\n    skyblue: '#87ceeb',\n    slateblue: '#6a5acd',\n    slategray: '#708090',\n    slategrey: '#708090',\n    snow: '#fffafa',\n    springgreen: '#00ff7f',\n    steelblue: '#4682b4',\n    tan: '#d2b48c',\n    teal: '#008080',\n    thistle: '#d8bfd8',\n    tomato: '#ff6347',\n    turquoise: '#40e0d0',\n    violet: '#ee82ee',\n    wheat: '#f5deb3',\n    white: '#ffffff',\n    whitesmoke: '#f5f5f5',\n    yellow: '#ffff00',\n    yellowgreen: '#9acd32'\n  };\n\n  chroma.colors = colors = w3cx11;\n\n  lab2rgb = function() {\n    var a, args, b, g, l, r, x, y, z;\n    args = unpack(arguments);\n    l = args[0], a = args[1], b = args[2];\n    y = (l + 16) / 116;\n    x = isNaN(a) ? y : y + a / 500;\n    z = isNaN(b) ? y : y - b / 200;\n    y = LAB_CONSTANTS.Yn * lab_xyz(y);\n    x = LAB_CONSTANTS.Xn * lab_xyz(x);\n    z = LAB_CONSTANTS.Zn * lab_xyz(z);\n    r = xyz_rgb(3.2404542 * x - 1.5371385 * y - 0.4985314 * z);\n    g = xyz_rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z);\n    b = xyz_rgb(0.0556434 * x - 0.2040259 * y + 1.0572252 * z);\n    return [r, g, b, args.length > 3 ? args[3] : 1];\n  };\n\n  xyz_rgb = function(r) {\n    return 255 * (r <= 0.00304 ? 12.92 * r : 1.055 * pow(r, 1 / 2.4) - 0.055);\n  };\n\n  lab_xyz = function(t) {\n    if (t > LAB_CONSTANTS.t1) {\n      return t * t * t;\n    } else {\n      return LAB_CONSTANTS.t2 * (t - LAB_CONSTANTS.t0);\n    }\n  };\n\n  LAB_CONSTANTS = {\n    Kn: 18,\n    Xn: 0.950470,\n    Yn: 1,\n    Zn: 1.088830,\n    t0: 0.137931034,\n    t1: 0.206896552,\n    t2: 0.12841855,\n    t3: 0.008856452\n  };\n\n  rgb2lab = function() {\n    var b, g, r, ref, ref1, x, y, z;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    ref1 = rgb2xyz(r, g, b), x = ref1[0], y = ref1[1], z = ref1[2];\n    return [116 * y - 16, 500 * (x - y), 200 * (y - z)];\n  };\n\n  rgb_xyz = function(r) {\n    if ((r /= 255) <= 0.04045) {\n      return r / 12.92;\n    } else {\n      return pow((r + 0.055) / 1.055, 2.4);\n    }\n  };\n\n  xyz_lab = function(t) {\n    if (t > LAB_CONSTANTS.t3) {\n      return pow(t, 1 / 3);\n    } else {\n      return t / LAB_CONSTANTS.t2 + LAB_CONSTANTS.t0;\n    }\n  };\n\n  rgb2xyz = function() {\n    var b, g, r, ref, x, y, z;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    r = rgb_xyz(r);\n    g = rgb_xyz(g);\n    b = rgb_xyz(b);\n    x = xyz_lab((0.4124564 * r + 0.3575761 * g + 0.1804375 * b) / LAB_CONSTANTS.Xn);\n    y = xyz_lab((0.2126729 * r + 0.7151522 * g + 0.0721750 * b) / LAB_CONSTANTS.Yn);\n    z = xyz_lab((0.0193339 * r + 0.1191920 * g + 0.9503041 * b) / LAB_CONSTANTS.Zn);\n    return [x, y, z];\n  };\n\n  chroma.lab = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['lab']), function(){});\n  };\n\n  _input.lab = lab2rgb;\n\n  Color.prototype.lab = function() {\n    return rgb2lab(this._rgb);\n  };\n\n  bezier = function(colors) {\n    var I, I0, I1, c, lab0, lab1, lab2, lab3, ref, ref1, ref2;\n    colors = (function() {\n      var len, o, results;\n      results = [];\n      for (o = 0, len = colors.length; o < len; o++) {\n        c = colors[o];\n        results.push(chroma(c));\n      }\n      return results;\n    })();\n    if (colors.length === 2) {\n      ref = (function() {\n        var len, o, results;\n        results = [];\n        for (o = 0, len = colors.length; o < len; o++) {\n          c = colors[o];\n          results.push(c.lab());\n        }\n        return results;\n      })(), lab0 = ref[0], lab1 = ref[1];\n      I = function(t) {\n        var i, lab;\n        lab = (function() {\n          var o, results;\n          results = [];\n          for (i = o = 0; o <= 2; i = ++o) {\n            results.push(lab0[i] + t * (lab1[i] - lab0[i]));\n          }\n          return results;\n        })();\n        return chroma.lab.apply(chroma, lab);\n      };\n    } else if (colors.length === 3) {\n      ref1 = (function() {\n        var len, o, results;\n        results = [];\n        for (o = 0, len = colors.length; o < len; o++) {\n          c = colors[o];\n          results.push(c.lab());\n        }\n        return results;\n      })(), lab0 = ref1[0], lab1 = ref1[1], lab2 = ref1[2];\n      I = function(t) {\n        var i, lab;\n        lab = (function() {\n          var o, results;\n          results = [];\n          for (i = o = 0; o <= 2; i = ++o) {\n            results.push((1 - t) * (1 - t) * lab0[i] + 2 * (1 - t) * t * lab1[i] + t * t * lab2[i]);\n          }\n          return results;\n        })();\n        return chroma.lab.apply(chroma, lab);\n      };\n    } else if (colors.length === 4) {\n      ref2 = (function() {\n        var len, o, results;\n        results = [];\n        for (o = 0, len = colors.length; o < len; o++) {\n          c = colors[o];\n          results.push(c.lab());\n        }\n        return results;\n      })(), lab0 = ref2[0], lab1 = ref2[1], lab2 = ref2[2], lab3 = ref2[3];\n      I = function(t) {\n        var i, lab;\n        lab = (function() {\n          var o, results;\n          results = [];\n          for (i = o = 0; o <= 2; i = ++o) {\n            results.push((1 - t) * (1 - t) * (1 - t) * lab0[i] + 3 * (1 - t) * (1 - t) * t * lab1[i] + 3 * (1 - t) * t * t * lab2[i] + t * t * t * lab3[i]);\n          }\n          return results;\n        })();\n        return chroma.lab.apply(chroma, lab);\n      };\n    } else if (colors.length === 5) {\n      I0 = bezier(colors.slice(0, 3));\n      I1 = bezier(colors.slice(2, 5));\n      I = function(t) {\n        if (t < 0.5) {\n          return I0(t * 2);\n        } else {\n          return I1((t - 0.5) * 2);\n        }\n      };\n    }\n    return I;\n  };\n\n  chroma.bezier = function(colors) {\n    var f;\n    f = bezier(colors);\n    f.scale = function() {\n      return chroma.scale(f);\n    };\n    return f;\n  };\n\n  chroma.cubehelix = function(start, rotations, hue, gamma, lightness) {\n    var dh, dl, f;\n    if (start == null) {\n      start = 300;\n    }\n    if (rotations == null) {\n      rotations = -1.5;\n    }\n    if (hue == null) {\n      hue = 1;\n    }\n    if (gamma == null) {\n      gamma = 1;\n    }\n    if (lightness == null) {\n      lightness = [0, 1];\n    }\n    dh = 0;\n    if (type(lightness) === 'array') {\n      dl = lightness[1] - lightness[0];\n    } else {\n      dl = 0;\n      lightness = [lightness, lightness];\n    }\n    f = function(fract) {\n      var a, amp, b, cos_a, g, h, l, r, sin_a;\n      a = TWOPI * ((start + 120) / 360 + rotations * fract);\n      l = pow(lightness[0] + dl * fract, gamma);\n      h = dh !== 0 ? hue[0] + fract * dh : hue;\n      amp = h * l * (1 - l) / 2;\n      cos_a = cos(a);\n      sin_a = sin(a);\n      r = l + amp * (-0.14861 * cos_a + 1.78277 * sin_a);\n      g = l + amp * (-0.29227 * cos_a - 0.90649 * sin_a);\n      b = l + amp * (+1.97294 * cos_a);\n      return chroma(clip_rgb([r * 255, g * 255, b * 255, 1]));\n    };\n    f.start = function(s) {\n      if (s == null) {\n        return start;\n      }\n      start = s;\n      return f;\n    };\n    f.rotations = function(r) {\n      if (r == null) {\n        return rotations;\n      }\n      rotations = r;\n      return f;\n    };\n    f.gamma = function(g) {\n      if (g == null) {\n        return gamma;\n      }\n      gamma = g;\n      return f;\n    };\n    f.hue = function(h) {\n      if (h == null) {\n        return hue;\n      }\n      hue = h;\n      if (type(hue) === 'array') {\n        dh = hue[1] - hue[0];\n        if (dh === 0) {\n          hue = hue[1];\n        }\n      } else {\n        dh = 0;\n      }\n      return f;\n    };\n    f.lightness = function(h) {\n      if (h == null) {\n        return lightness;\n      }\n      if (type(h) === 'array') {\n        lightness = h;\n        dl = h[1] - h[0];\n      } else {\n        lightness = [h, h];\n        dl = 0;\n      }\n      return f;\n    };\n    f.scale = function() {\n      return chroma.scale(f);\n    };\n    f.hue(hue);\n    return f;\n  };\n\n  chroma.random = function() {\n    var code, digits, i, o;\n    digits = '0123456789abcdef';\n    code = '#';\n    for (i = o = 0; o < 6; i = ++o) {\n      code += digits.charAt(floor(Math.random() * 16));\n    }\n    return new Color(code);\n  };\n\n  _interpolators = [];\n\n  interpolate = function(col1, col2, f, m) {\n    var interpol, len, o, res;\n    if (f == null) {\n      f = 0.5;\n    }\n    if (m == null) {\n      m = 'rgb';\n    }\n\n    /*\n    interpolates between colors\n    f = 0 --> me\n    f = 1 --> col\n     */\n    if (type(col1) !== 'object') {\n      col1 = chroma(col1);\n    }\n    if (type(col2) !== 'object') {\n      col2 = chroma(col2);\n    }\n    for (o = 0, len = _interpolators.length; o < len; o++) {\n      interpol = _interpolators[o];\n      if (m === interpol[0]) {\n        res = interpol[1](col1, col2, f, m);\n        break;\n      }\n    }\n    if (res == null) {\n      throw \"color mode \" + m + \" is not supported\";\n    }\n    return res.alpha(col1.alpha() + f * (col2.alpha() - col1.alpha()));\n  };\n\n  chroma.interpolate = interpolate;\n\n  Color.prototype.interpolate = function(col2, f, m) {\n    return interpolate(this, col2, f, m);\n  };\n\n  chroma.mix = interpolate;\n\n  Color.prototype.mix = Color.prototype.interpolate;\n\n  _input.rgb = function() {\n    var k, ref, results, v;\n    ref = unpack(arguments);\n    results = [];\n    for (k in ref) {\n      v = ref[k];\n      results.push(v);\n    }\n    return results;\n  };\n\n  chroma.rgb = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['rgb']), function(){});\n  };\n\n  Color.prototype.rgb = function(round) {\n    if (round == null) {\n      round = true;\n    }\n    if (round) {\n      return this._rgb.map(Math.round).slice(0, 3);\n    } else {\n      return this._rgb.slice(0, 3);\n    }\n  };\n\n  Color.prototype.rgba = function(round) {\n    if (round == null) {\n      round = true;\n    }\n    if (!round) {\n      return this._rgb.slice(0);\n    }\n    return [Math.round(this._rgb[0]), Math.round(this._rgb[1]), Math.round(this._rgb[2]), this._rgb[3]];\n  };\n\n  _guess_formats.push({\n    p: 3,\n    test: function(n) {\n      var a;\n      a = unpack(arguments);\n      if (type(a) === 'array' && a.length === 3) {\n        return 'rgb';\n      }\n      if (a.length === 4 && type(a[3]) === \"number\" && a[3] >= 0 && a[3] <= 1) {\n        return 'rgb';\n      }\n    }\n  });\n\n  _input.lrgb = _input.rgb;\n\n  interpolate_lrgb = function(col1, col2, f, m) {\n    var xyz0, xyz1;\n    xyz0 = col1._rgb;\n    xyz1 = col2._rgb;\n    return new Color(sqrt(pow(xyz0[0], 2) * (1 - f) + pow(xyz1[0], 2) * f), sqrt(pow(xyz0[1], 2) * (1 - f) + pow(xyz1[1], 2) * f), sqrt(pow(xyz0[2], 2) * (1 - f) + pow(xyz1[2], 2) * f), m);\n  };\n\n  _average_lrgb = function(colors) {\n    var col, f, len, o, rgb, xyz;\n    f = 1 / colors.length;\n    xyz = [0, 0, 0, 0];\n    for (o = 0, len = colors.length; o < len; o++) {\n      col = colors[o];\n      rgb = col._rgb;\n      xyz[0] += pow(rgb[0], 2) * f;\n      xyz[1] += pow(rgb[1], 2) * f;\n      xyz[2] += pow(rgb[2], 2) * f;\n      xyz[3] += rgb[3] * f;\n    }\n    xyz[0] = sqrt(xyz[0]);\n    xyz[1] = sqrt(xyz[1]);\n    xyz[2] = sqrt(xyz[2]);\n    if (xyz[3] > 1) {\n      xyz[3] = 1;\n    }\n    return new Color(clip_rgb(xyz));\n  };\n\n  _interpolators.push(['lrgb', interpolate_lrgb]);\n\n  chroma.average = function(colors, mode) {\n    var A, alpha, c, cnt, dx, dy, first, i, l, len, o, xyz, xyz2;\n    if (mode == null) {\n      mode = 'rgb';\n    }\n    l = colors.length;\n    colors = colors.map(function(c) {\n      return chroma(c);\n    });\n    first = colors.splice(0, 1)[0];\n    if (mode === 'lrgb') {\n      return _average_lrgb(colors);\n    }\n    xyz = first.get(mode);\n    cnt = [];\n    dx = 0;\n    dy = 0;\n    for (i in xyz) {\n      xyz[i] = xyz[i] || 0;\n      cnt.push(isNaN(xyz[i]) ? 0 : 1);\n      if (mode.charAt(i) === 'h' && !isNaN(xyz[i])) {\n        A = xyz[i] / 180 * PI;\n        dx += cos(A);\n        dy += sin(A);\n      }\n    }\n    alpha = first.alpha();\n    for (o = 0, len = colors.length; o < len; o++) {\n      c = colors[o];\n      xyz2 = c.get(mode);\n      alpha += c.alpha();\n      for (i in xyz) {\n        if (!isNaN(xyz2[i])) {\n          cnt[i] += 1;\n          if (mode.charAt(i) === 'h') {\n            A = xyz2[i] / 180 * PI;\n            dx += cos(A);\n            dy += sin(A);\n          } else {\n            xyz[i] += xyz2[i];\n          }\n        }\n      }\n    }\n    for (i in xyz) {\n      if (mode.charAt(i) === 'h') {\n        A = atan2(dy / cnt[i], dx / cnt[i]) / PI * 180;\n        while (A < 0) {\n          A += 360;\n        }\n        while (A >= 360) {\n          A -= 360;\n        }\n        xyz[i] = A;\n      } else {\n        xyz[i] = xyz[i] / cnt[i];\n      }\n    }\n    return chroma(xyz, mode).alpha(alpha / l);\n  };\n\n  hex2rgb = function(hex) {\n    var a, b, g, r, rgb, u;\n    if (hex.match(/^#?([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/)) {\n      if (hex.length === 4 || hex.length === 7) {\n        hex = hex.substr(1);\n      }\n      if (hex.length === 3) {\n        hex = hex.split(\"\");\n        hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\n      }\n      u = parseInt(hex, 16);\n      r = u >> 16;\n      g = u >> 8 & 0xFF;\n      b = u & 0xFF;\n      return [r, g, b, 1];\n    }\n    if (hex.match(/^#?([A-Fa-f0-9]{8})$/)) {\n      if (hex.length === 9) {\n        hex = hex.substr(1);\n      }\n      u = parseInt(hex, 16);\n      r = u >> 24 & 0xFF;\n      g = u >> 16 & 0xFF;\n      b = u >> 8 & 0xFF;\n      a = round((u & 0xFF) / 0xFF * 100) / 100;\n      return [r, g, b, a];\n    }\n    if ((_input.css != null) && (rgb = _input.css(hex))) {\n      return rgb;\n    }\n    throw \"unknown color: \" + hex;\n  };\n\n  rgb2hex = function(channels, mode) {\n    var a, b, g, hxa, r, str, u;\n    if (mode == null) {\n      mode = 'auto';\n    }\n    r = channels[0], g = channels[1], b = channels[2], a = channels[3];\n    if (mode === 'auto') {\n      mode = a < 1 ? 'rgba' : 'rgb';\n    }\n    r = Math.round(r);\n    g = Math.round(g);\n    b = Math.round(b);\n    u = r << 16 | g << 8 | b;\n    str = \"000000\" + u.toString(16);\n    str = str.substr(str.length - 6);\n    hxa = '0' + round(a * 255).toString(16);\n    hxa = hxa.substr(hxa.length - 2);\n    return \"#\" + (function() {\n      switch (mode.toLowerCase()) {\n        case 'rgba':\n          return str + hxa;\n        case 'argb':\n          return hxa + str;\n        default:\n          return str;\n      }\n    })();\n  };\n\n  _input.hex = function(h) {\n    return hex2rgb(h);\n  };\n\n  chroma.hex = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['hex']), function(){});\n  };\n\n  Color.prototype.hex = function(mode) {\n    if (mode == null) {\n      mode = 'auto';\n    }\n    return rgb2hex(this._rgb, mode);\n  };\n\n  _guess_formats.push({\n    p: 4,\n    test: function(n) {\n      if (arguments.length === 1 && type(n) === \"string\") {\n        return 'hex';\n      }\n    }\n  });\n\n  hsl2rgb = function() {\n    var args, b, c, g, h, i, l, o, r, ref, s, t1, t2, t3;\n    args = unpack(arguments);\n    h = args[0], s = args[1], l = args[2];\n    if (s === 0) {\n      r = g = b = l * 255;\n    } else {\n      t3 = [0, 0, 0];\n      c = [0, 0, 0];\n      t2 = l < 0.5 ? l * (1 + s) : l + s - l * s;\n      t1 = 2 * l - t2;\n      h /= 360;\n      t3[0] = h + 1 / 3;\n      t3[1] = h;\n      t3[2] = h - 1 / 3;\n      for (i = o = 0; o <= 2; i = ++o) {\n        if (t3[i] < 0) {\n          t3[i] += 1;\n        }\n        if (t3[i] > 1) {\n          t3[i] -= 1;\n        }\n        if (6 * t3[i] < 1) {\n          c[i] = t1 + (t2 - t1) * 6 * t3[i];\n        } else if (2 * t3[i] < 1) {\n          c[i] = t2;\n        } else if (3 * t3[i] < 2) {\n          c[i] = t1 + (t2 - t1) * ((2 / 3) - t3[i]) * 6;\n        } else {\n          c[i] = t1;\n        }\n      }\n      ref = [round(c[0] * 255), round(c[1] * 255), round(c[2] * 255)], r = ref[0], g = ref[1], b = ref[2];\n    }\n    if (args.length > 3) {\n      return [r, g, b, args[3]];\n    } else {\n      return [r, g, b];\n    }\n  };\n\n  rgb2hsl = function(r, g, b) {\n    var h, l, min, ref, s;\n    if (r !== void 0 && r.length >= 3) {\n      ref = r, r = ref[0], g = ref[1], b = ref[2];\n    }\n    r /= 255;\n    g /= 255;\n    b /= 255;\n    min = Math.min(r, g, b);\n    max = Math.max(r, g, b);\n    l = (max + min) / 2;\n    if (max === min) {\n      s = 0;\n      h = Number.NaN;\n    } else {\n      s = l < 0.5 ? (max - min) / (max + min) : (max - min) / (2 - max - min);\n    }\n    if (r === max) {\n      h = (g - b) / (max - min);\n    } else if (g === max) {\n      h = 2 + (b - r) / (max - min);\n    } else if (b === max) {\n      h = 4 + (r - g) / (max - min);\n    }\n    h *= 60;\n    if (h < 0) {\n      h += 360;\n    }\n    return [h, s, l];\n  };\n\n  chroma.hsl = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['hsl']), function(){});\n  };\n\n  _input.hsl = hsl2rgb;\n\n  Color.prototype.hsl = function() {\n    return rgb2hsl(this._rgb);\n  };\n\n  hsv2rgb = function() {\n    var args, b, f, g, h, i, p, q, r, ref, ref1, ref2, ref3, ref4, ref5, s, t, v;\n    args = unpack(arguments);\n    h = args[0], s = args[1], v = args[2];\n    v *= 255;\n    if (s === 0) {\n      r = g = b = v;\n    } else {\n      if (h === 360) {\n        h = 0;\n      }\n      if (h > 360) {\n        h -= 360;\n      }\n      if (h < 0) {\n        h += 360;\n      }\n      h /= 60;\n      i = floor(h);\n      f = h - i;\n      p = v * (1 - s);\n      q = v * (1 - s * f);\n      t = v * (1 - s * (1 - f));\n      switch (i) {\n        case 0:\n          ref = [v, t, p], r = ref[0], g = ref[1], b = ref[2];\n          break;\n        case 1:\n          ref1 = [q, v, p], r = ref1[0], g = ref1[1], b = ref1[2];\n          break;\n        case 2:\n          ref2 = [p, v, t], r = ref2[0], g = ref2[1], b = ref2[2];\n          break;\n        case 3:\n          ref3 = [p, q, v], r = ref3[0], g = ref3[1], b = ref3[2];\n          break;\n        case 4:\n          ref4 = [t, p, v], r = ref4[0], g = ref4[1], b = ref4[2];\n          break;\n        case 5:\n          ref5 = [v, p, q], r = ref5[0], g = ref5[1], b = ref5[2];\n      }\n    }\n    return [r, g, b, args.length > 3 ? args[3] : 1];\n  };\n\n  rgb2hsv = function() {\n    var b, delta, g, h, min, r, ref, s, v;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    min = Math.min(r, g, b);\n    max = Math.max(r, g, b);\n    delta = max - min;\n    v = max / 255.0;\n    if (max === 0) {\n      h = Number.NaN;\n      s = 0;\n    } else {\n      s = delta / max;\n      if (r === max) {\n        h = (g - b) / delta;\n      }\n      if (g === max) {\n        h = 2 + (b - r) / delta;\n      }\n      if (b === max) {\n        h = 4 + (r - g) / delta;\n      }\n      h *= 60;\n      if (h < 0) {\n        h += 360;\n      }\n    }\n    return [h, s, v];\n  };\n\n  chroma.hsv = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['hsv']), function(){});\n  };\n\n  _input.hsv = hsv2rgb;\n\n  Color.prototype.hsv = function() {\n    return rgb2hsv(this._rgb);\n  };\n\n  num2rgb = function(num) {\n    var b, g, r;\n    if (type(num) === \"number\" && num >= 0 && num <= 0xFFFFFF) {\n      r = num >> 16;\n      g = (num >> 8) & 0xFF;\n      b = num & 0xFF;\n      return [r, g, b, 1];\n    }\n    console.warn(\"unknown num color: \" + num);\n    return [0, 0, 0, 1];\n  };\n\n  rgb2num = function() {\n    var b, g, r, ref;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    return (r << 16) + (g << 8) + b;\n  };\n\n  chroma.num = function(num) {\n    return new Color(num, 'num');\n  };\n\n  Color.prototype.num = function(mode) {\n    if (mode == null) {\n      mode = 'rgb';\n    }\n    return rgb2num(this._rgb, mode);\n  };\n\n  _input.num = num2rgb;\n\n  _guess_formats.push({\n    p: 1,\n    test: function(n) {\n      if (arguments.length === 1 && type(n) === \"number\" && n >= 0 && n <= 0xFFFFFF) {\n        return 'num';\n      }\n    }\n  });\n\n  hcg2rgb = function() {\n    var _c, _g, args, b, c, f, g, h, i, p, q, r, ref, ref1, ref2, ref3, ref4, ref5, t, v;\n    args = unpack(arguments);\n    h = args[0], c = args[1], _g = args[2];\n    c = c / 100;\n    g = g / 100 * 255;\n    _c = c * 255;\n    if (c === 0) {\n      r = g = b = _g;\n    } else {\n      if (h === 360) {\n        h = 0;\n      }\n      if (h > 360) {\n        h -= 360;\n      }\n      if (h < 0) {\n        h += 360;\n      }\n      h /= 60;\n      i = floor(h);\n      f = h - i;\n      p = _g * (1 - c);\n      q = p + _c * (1 - f);\n      t = p + _c * f;\n      v = p + _c;\n      switch (i) {\n        case 0:\n          ref = [v, t, p], r = ref[0], g = ref[1], b = ref[2];\n          break;\n        case 1:\n          ref1 = [q, v, p], r = ref1[0], g = ref1[1], b = ref1[2];\n          break;\n        case 2:\n          ref2 = [p, v, t], r = ref2[0], g = ref2[1], b = ref2[2];\n          break;\n        case 3:\n          ref3 = [p, q, v], r = ref3[0], g = ref3[1], b = ref3[2];\n          break;\n        case 4:\n          ref4 = [t, p, v], r = ref4[0], g = ref4[1], b = ref4[2];\n          break;\n        case 5:\n          ref5 = [v, p, q], r = ref5[0], g = ref5[1], b = ref5[2];\n      }\n    }\n    return [r, g, b, args.length > 3 ? args[3] : 1];\n  };\n\n  rgb2hcg = function() {\n    var _g, b, c, delta, g, h, min, r, ref;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    min = Math.min(r, g, b);\n    max = Math.max(r, g, b);\n    delta = max - min;\n    c = delta * 100 / 255;\n    _g = min / (255 - delta) * 100;\n    if (delta === 0) {\n      h = Number.NaN;\n    } else {\n      if (r === max) {\n        h = (g - b) / delta;\n      }\n      if (g === max) {\n        h = 2 + (b - r) / delta;\n      }\n      if (b === max) {\n        h = 4 + (r - g) / delta;\n      }\n      h *= 60;\n      if (h < 0) {\n        h += 360;\n      }\n    }\n    return [h, c, _g];\n  };\n\n  chroma.hcg = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['hcg']), function(){});\n  };\n\n  _input.hcg = hcg2rgb;\n\n  Color.prototype.hcg = function() {\n    return rgb2hcg(this._rgb);\n  };\n\n  css2rgb = function(css) {\n    var aa, ab, hsl, i, m, o, rgb, w;\n    css = css.toLowerCase();\n    if ((chroma.colors != null) && chroma.colors[css]) {\n      return hex2rgb(chroma.colors[css]);\n    }\n    if (m = css.match(/rgb\\(\\s*(\\-?\\d+),\\s*(\\-?\\d+)\\s*,\\s*(\\-?\\d+)\\s*\\)/)) {\n      rgb = m.slice(1, 4);\n      for (i = o = 0; o <= 2; i = ++o) {\n        rgb[i] = +rgb[i];\n      }\n      rgb[3] = 1;\n    } else if (m = css.match(/rgba\\(\\s*(\\-?\\d+),\\s*(\\-?\\d+)\\s*,\\s*(\\-?\\d+)\\s*,\\s*([01]|[01]?\\.\\d+)\\)/)) {\n      rgb = m.slice(1, 5);\n      for (i = w = 0; w <= 3; i = ++w) {\n        rgb[i] = +rgb[i];\n      }\n    } else if (m = css.match(/rgb\\(\\s*(\\-?\\d+(?:\\.\\d+)?)%,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*\\)/)) {\n      rgb = m.slice(1, 4);\n      for (i = aa = 0; aa <= 2; i = ++aa) {\n        rgb[i] = round(rgb[i] * 2.55);\n      }\n      rgb[3] = 1;\n    } else if (m = css.match(/rgba\\(\\s*(\\-?\\d+(?:\\.\\d+)?)%,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*([01]|[01]?\\.\\d+)\\)/)) {\n      rgb = m.slice(1, 5);\n      for (i = ab = 0; ab <= 2; i = ++ab) {\n        rgb[i] = round(rgb[i] * 2.55);\n      }\n      rgb[3] = +rgb[3];\n    } else if (m = css.match(/hsl\\(\\s*(\\-?\\d+(?:\\.\\d+)?),\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*\\)/)) {\n      hsl = m.slice(1, 4);\n      hsl[1] *= 0.01;\n      hsl[2] *= 0.01;\n      rgb = hsl2rgb(hsl);\n      rgb[3] = 1;\n    } else if (m = css.match(/hsla\\(\\s*(\\-?\\d+(?:\\.\\d+)?),\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*([01]|[01]?\\.\\d+)\\)/)) {\n      hsl = m.slice(1, 4);\n      hsl[1] *= 0.01;\n      hsl[2] *= 0.01;\n      rgb = hsl2rgb(hsl);\n      rgb[3] = +m[4];\n    }\n    return rgb;\n  };\n\n  rgb2css = function(rgba) {\n    var mode;\n    mode = rgba[3] < 1 ? 'rgba' : 'rgb';\n    if (mode === 'rgb') {\n      return mode + '(' + rgba.slice(0, 3).map(round).join(',') + ')';\n    } else if (mode === 'rgba') {\n      return mode + '(' + rgba.slice(0, 3).map(round).join(',') + ',' + rgba[3] + ')';\n    } else {\n\n    }\n  };\n\n  rnd = function(a) {\n    return round(a * 100) / 100;\n  };\n\n  hsl2css = function(hsl, alpha) {\n    var mode;\n    mode = alpha < 1 ? 'hsla' : 'hsl';\n    hsl[0] = rnd(hsl[0] || 0);\n    hsl[1] = rnd(hsl[1] * 100) + '%';\n    hsl[2] = rnd(hsl[2] * 100) + '%';\n    if (mode === 'hsla') {\n      hsl[3] = alpha;\n    }\n    return mode + '(' + hsl.join(',') + ')';\n  };\n\n  _input.css = function(h) {\n    return css2rgb(h);\n  };\n\n  chroma.css = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['css']), function(){});\n  };\n\n  Color.prototype.css = function(mode) {\n    if (mode == null) {\n      mode = 'rgb';\n    }\n    if (mode.slice(0, 3) === 'rgb') {\n      return rgb2css(this._rgb);\n    } else if (mode.slice(0, 3) === 'hsl') {\n      return hsl2css(this.hsl(), this.alpha());\n    }\n  };\n\n  _input.named = function(name) {\n    return hex2rgb(w3cx11[name]);\n  };\n\n  _guess_formats.push({\n    p: 5,\n    test: function(n) {\n      if (arguments.length === 1 && (w3cx11[n] != null)) {\n        return 'named';\n      }\n    }\n  });\n\n  Color.prototype.name = function(n) {\n    var h, k;\n    if (arguments.length) {\n      if (w3cx11[n]) {\n        this._rgb = hex2rgb(w3cx11[n]);\n      }\n      this._rgb[3] = 1;\n      this;\n    }\n    h = this.hex('rgb');\n    for (k in w3cx11) {\n      if (h === w3cx11[k]) {\n        return k;\n      }\n    }\n    return h;\n  };\n\n  lch2lab = function() {\n\n    /*\n    Convert from a qualitative parameter h and a quantitative parameter l to a 24-bit pixel.\n    These formulas were invented by David Dalrymple to obtain maximum contrast without going\n    out of gamut if the parameters are in the range 0-1.\n    \n    A saturation multiplier was added by Gregor Aisch\n     */\n    var c, h, l, ref;\n    ref = unpack(arguments), l = ref[0], c = ref[1], h = ref[2];\n    h = h * DEG2RAD;\n    return [l, cos(h) * c, sin(h) * c];\n  };\n\n  lch2rgb = function() {\n    var L, a, args, b, c, g, h, l, r, ref, ref1;\n    args = unpack(arguments);\n    l = args[0], c = args[1], h = args[2];\n    ref = lch2lab(l, c, h), L = ref[0], a = ref[1], b = ref[2];\n    ref1 = lab2rgb(L, a, b), r = ref1[0], g = ref1[1], b = ref1[2];\n    return [r, g, b, args.length > 3 ? args[3] : 1];\n  };\n\n  lab2lch = function() {\n    var a, b, c, h, l, ref;\n    ref = unpack(arguments), l = ref[0], a = ref[1], b = ref[2];\n    c = sqrt(a * a + b * b);\n    h = (atan2(b, a) * RAD2DEG + 360) % 360;\n    if (round(c * 10000) === 0) {\n      h = Number.NaN;\n    }\n    return [l, c, h];\n  };\n\n  rgb2lch = function() {\n    var a, b, g, l, r, ref, ref1;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    ref1 = rgb2lab(r, g, b), l = ref1[0], a = ref1[1], b = ref1[2];\n    return lab2lch(l, a, b);\n  };\n\n  chroma.lch = function() {\n    var args;\n    args = unpack(arguments);\n    return new Color(args, 'lch');\n  };\n\n  chroma.hcl = function() {\n    var args;\n    args = unpack(arguments);\n    return new Color(args, 'hcl');\n  };\n\n  _input.lch = lch2rgb;\n\n  _input.hcl = function() {\n    var c, h, l, ref;\n    ref = unpack(arguments), h = ref[0], c = ref[1], l = ref[2];\n    return lch2rgb([l, c, h]);\n  };\n\n  Color.prototype.lch = function() {\n    return rgb2lch(this._rgb);\n  };\n\n  Color.prototype.hcl = function() {\n    return rgb2lch(this._rgb).reverse();\n  };\n\n  rgb2cmyk = function(mode) {\n    var b, c, f, g, k, m, r, ref, y;\n    if (mode == null) {\n      mode = 'rgb';\n    }\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    r = r / 255;\n    g = g / 255;\n    b = b / 255;\n    k = 1 - Math.max(r, Math.max(g, b));\n    f = k < 1 ? 1 / (1 - k) : 0;\n    c = (1 - r - k) * f;\n    m = (1 - g - k) * f;\n    y = (1 - b - k) * f;\n    return [c, m, y, k];\n  };\n\n  cmyk2rgb = function() {\n    var alpha, args, b, c, g, k, m, r, y;\n    args = unpack(arguments);\n    c = args[0], m = args[1], y = args[2], k = args[3];\n    alpha = args.length > 4 ? args[4] : 1;\n    if (k === 1) {\n      return [0, 0, 0, alpha];\n    }\n    r = c >= 1 ? 0 : 255 * (1 - c) * (1 - k);\n    g = m >= 1 ? 0 : 255 * (1 - m) * (1 - k);\n    b = y >= 1 ? 0 : 255 * (1 - y) * (1 - k);\n    return [r, g, b, alpha];\n  };\n\n  _input.cmyk = function() {\n    return cmyk2rgb(unpack(arguments));\n  };\n\n  chroma.cmyk = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['cmyk']), function(){});\n  };\n\n  Color.prototype.cmyk = function() {\n    return rgb2cmyk(this._rgb);\n  };\n\n  _input.gl = function() {\n    var i, k, o, rgb, v;\n    rgb = (function() {\n      var ref, results;\n      ref = unpack(arguments);\n      results = [];\n      for (k in ref) {\n        v = ref[k];\n        results.push(v);\n      }\n      return results;\n    }).apply(this, arguments);\n    for (i = o = 0; o <= 2; i = ++o) {\n      rgb[i] *= 255;\n    }\n    return rgb;\n  };\n\n  chroma.gl = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['gl']), function(){});\n  };\n\n  Color.prototype.gl = function() {\n    var rgb;\n    rgb = this._rgb;\n    return [rgb[0] / 255, rgb[1] / 255, rgb[2] / 255, rgb[3]];\n  };\n\n  rgb2luminance = function(r, g, b) {\n    var ref;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    r = luminance_x(r);\n    g = luminance_x(g);\n    b = luminance_x(b);\n    return 0.2126 * r + 0.7152 * g + 0.0722 * b;\n  };\n\n  luminance_x = function(x) {\n    x /= 255;\n    if (x <= 0.03928) {\n      return x / 12.92;\n    } else {\n      return pow((x + 0.055) / 1.055, 2.4);\n    }\n  };\n\n  interpolate_rgb = function(col1, col2, f, m) {\n    var xyz0, xyz1;\n    xyz0 = col1._rgb;\n    xyz1 = col2._rgb;\n    return new Color(xyz0[0] + f * (xyz1[0] - xyz0[0]), xyz0[1] + f * (xyz1[1] - xyz0[1]), xyz0[2] + f * (xyz1[2] - xyz0[2]), m);\n  };\n\n  _interpolators.push(['rgb', interpolate_rgb]);\n\n  Color.prototype.luminance = function(lum, mode) {\n    var cur_lum, eps, max_iter, rgba, test;\n    if (mode == null) {\n      mode = 'rgb';\n    }\n    if (!arguments.length) {\n      return rgb2luminance(this._rgb);\n    }\n    rgba = this._rgb;\n    if (lum === 0) {\n      rgba = [0, 0, 0, this._rgb[3]];\n    } else if (lum === 1) {\n      rgba = [255, 255, 255, this[3]];\n    } else {\n      cur_lum = rgb2luminance(this._rgb);\n      eps = 1e-7;\n      max_iter = 20;\n      test = function(l, h) {\n        var lm, m;\n        m = l.interpolate(h, 0.5, mode);\n        lm = m.luminance();\n        if (Math.abs(lum - lm) < eps || !max_iter--) {\n          return m;\n        }\n        if (lm > lum) {\n          return test(l, m);\n        }\n        return test(m, h);\n      };\n      if (cur_lum > lum) {\n        rgba = test(chroma('black'), this).rgba();\n      } else {\n        rgba = test(this, chroma('white')).rgba();\n      }\n    }\n    return chroma(rgba).alpha(this.alpha());\n  };\n\n  temperature2rgb = function(kelvin) {\n    var b, g, r, temp;\n    temp = kelvin / 100;\n    if (temp < 66) {\n      r = 255;\n      g = -155.25485562709179 - 0.44596950469579133 * (g = temp - 2) + 104.49216199393888 * log(g);\n      b = temp < 20 ? 0 : -254.76935184120902 + 0.8274096064007395 * (b = temp - 10) + 115.67994401066147 * log(b);\n    } else {\n      r = 351.97690566805693 + 0.114206453784165 * (r = temp - 55) - 40.25366309332127 * log(r);\n      g = 325.4494125711974 + 0.07943456536662342 * (g = temp - 50) - 28.0852963507957 * log(g);\n      b = 255;\n    }\n    return [r, g, b];\n  };\n\n  rgb2temperature = function() {\n    var b, eps, g, maxTemp, minTemp, r, ref, rgb, temp;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    minTemp = 1000;\n    maxTemp = 40000;\n    eps = 0.4;\n    while (maxTemp - minTemp > eps) {\n      temp = (maxTemp + minTemp) * 0.5;\n      rgb = temperature2rgb(temp);\n      if ((rgb[2] / rgb[0]) >= (b / r)) {\n        maxTemp = temp;\n      } else {\n        minTemp = temp;\n      }\n    }\n    return round(temp);\n  };\n\n  chroma.temperature = chroma.kelvin = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['temperature']), function(){});\n  };\n\n  _input.temperature = _input.kelvin = _input.K = temperature2rgb;\n\n  Color.prototype.temperature = function() {\n    return rgb2temperature(this._rgb);\n  };\n\n  Color.prototype.kelvin = Color.prototype.temperature;\n\n  chroma.contrast = function(a, b) {\n    var l1, l2, ref, ref1;\n    if ((ref = type(a)) === 'string' || ref === 'number') {\n      a = new Color(a);\n    }\n    if ((ref1 = type(b)) === 'string' || ref1 === 'number') {\n      b = new Color(b);\n    }\n    l1 = a.luminance();\n    l2 = b.luminance();\n    if (l1 > l2) {\n      return (l1 + 0.05) / (l2 + 0.05);\n    } else {\n      return (l2 + 0.05) / (l1 + 0.05);\n    }\n  };\n\n  chroma.distance = function(a, b, mode) {\n    var d, i, l1, l2, ref, ref1, sum_sq;\n    if (mode == null) {\n      mode = 'lab';\n    }\n    if ((ref = type(a)) === 'string' || ref === 'number') {\n      a = new Color(a);\n    }\n    if ((ref1 = type(b)) === 'string' || ref1 === 'number') {\n      b = new Color(b);\n    }\n    l1 = a.get(mode);\n    l2 = b.get(mode);\n    sum_sq = 0;\n    for (i in l1) {\n      d = (l1[i] || 0) - (l2[i] || 0);\n      sum_sq += d * d;\n    }\n    return Math.sqrt(sum_sq);\n  };\n\n  chroma.deltaE = function(a, b, L, C) {\n    var L1, L2, a1, a2, b1, b2, c1, c2, c4, dH2, delA, delB, delC, delL, f, h1, ref, ref1, ref2, ref3, sc, sh, sl, t, v1, v2, v3;\n    if (L == null) {\n      L = 1;\n    }\n    if (C == null) {\n      C = 1;\n    }\n    if ((ref = type(a)) === 'string' || ref === 'number') {\n      a = new Color(a);\n    }\n    if ((ref1 = type(b)) === 'string' || ref1 === 'number') {\n      b = new Color(b);\n    }\n    ref2 = a.lab(), L1 = ref2[0], a1 = ref2[1], b1 = ref2[2];\n    ref3 = b.lab(), L2 = ref3[0], a2 = ref3[1], b2 = ref3[2];\n    c1 = sqrt(a1 * a1 + b1 * b1);\n    c2 = sqrt(a2 * a2 + b2 * b2);\n    sl = L1 < 16.0 ? 0.511 : (0.040975 * L1) / (1.0 + 0.01765 * L1);\n    sc = (0.0638 * c1) / (1.0 + 0.0131 * c1) + 0.638;\n    h1 = c1 < 0.000001 ? 0.0 : (atan2(b1, a1) * 180.0) / PI;\n    while (h1 < 0) {\n      h1 += 360;\n    }\n    while (h1 >= 360) {\n      h1 -= 360;\n    }\n    t = (h1 >= 164.0) && (h1 <= 345.0) ? 0.56 + abs(0.2 * cos((PI * (h1 + 168.0)) / 180.0)) : 0.36 + abs(0.4 * cos((PI * (h1 + 35.0)) / 180.0));\n    c4 = c1 * c1 * c1 * c1;\n    f = sqrt(c4 / (c4 + 1900.0));\n    sh = sc * (f * t + 1.0 - f);\n    delL = L1 - L2;\n    delC = c1 - c2;\n    delA = a1 - a2;\n    delB = b1 - b2;\n    dH2 = delA * delA + delB * delB - delC * delC;\n    v1 = delL / (L * sl);\n    v2 = delC / (C * sc);\n    v3 = sh;\n    return sqrt(v1 * v1 + v2 * v2 + (dH2 / (v3 * v3)));\n  };\n\n  Color.prototype.get = function(modechan) {\n    var channel, i, me, mode, ref, src;\n    me = this;\n    ref = modechan.split('.'), mode = ref[0], channel = ref[1];\n    src = me[mode]();\n    if (channel) {\n      i = mode.indexOf(channel);\n      if (i > -1) {\n        return src[i];\n      } else {\n        return console.warn('unknown channel ' + channel + ' in mode ' + mode);\n      }\n    } else {\n      return src;\n    }\n  };\n\n  Color.prototype.set = function(modechan, value) {\n    var channel, i, me, mode, ref, src;\n    me = this;\n    ref = modechan.split('.'), mode = ref[0], channel = ref[1];\n    if (channel) {\n      src = me[mode]();\n      i = mode.indexOf(channel);\n      if (i > -1) {\n        if (type(value) === 'string') {\n          switch (value.charAt(0)) {\n            case '+':\n              src[i] += +value;\n              break;\n            case '-':\n              src[i] += +value;\n              break;\n            case '*':\n              src[i] *= +(value.substr(1));\n              break;\n            case '/':\n              src[i] /= +(value.substr(1));\n              break;\n            default:\n              src[i] = +value;\n          }\n        } else {\n          src[i] = value;\n        }\n      } else {\n        console.warn('unknown channel ' + channel + ' in mode ' + mode);\n      }\n    } else {\n      src = value;\n    }\n    return chroma(src, mode).alpha(me.alpha());\n  };\n\n  Color.prototype.clipped = function() {\n    return this._rgb._clipped || false;\n  };\n\n  Color.prototype.alpha = function(a) {\n    if (arguments.length) {\n      return chroma.rgb([this._rgb[0], this._rgb[1], this._rgb[2], a]);\n    }\n    return this._rgb[3];\n  };\n\n  Color.prototype.darken = function(amount) {\n    var lab, me;\n    if (amount == null) {\n      amount = 1;\n    }\n    me = this;\n    lab = me.lab();\n    lab[0] -= LAB_CONSTANTS.Kn * amount;\n    return chroma.lab(lab).alpha(me.alpha());\n  };\n\n  Color.prototype.brighten = function(amount) {\n    if (amount == null) {\n      amount = 1;\n    }\n    return this.darken(-amount);\n  };\n\n  Color.prototype.darker = Color.prototype.darken;\n\n  Color.prototype.brighter = Color.prototype.brighten;\n\n  Color.prototype.saturate = function(amount) {\n    var lch, me;\n    if (amount == null) {\n      amount = 1;\n    }\n    me = this;\n    lch = me.lch();\n    lch[1] += amount * LAB_CONSTANTS.Kn;\n    if (lch[1] < 0) {\n      lch[1] = 0;\n    }\n    return chroma.lch(lch).alpha(me.alpha());\n  };\n\n  Color.prototype.desaturate = function(amount) {\n    if (amount == null) {\n      amount = 1;\n    }\n    return this.saturate(-amount);\n  };\n\n  Color.prototype.premultiply = function() {\n    var a, rgb;\n    rgb = this.rgb();\n    a = this.alpha();\n    return chroma(rgb[0] * a, rgb[1] * a, rgb[2] * a, a);\n  };\n\n  blend = function(bottom, top, mode) {\n    if (!blend[mode]) {\n      throw 'unknown blend mode ' + mode;\n    }\n    return blend[mode](bottom, top);\n  };\n\n  blend_f = function(f) {\n    return function(bottom, top) {\n      var c0, c1;\n      c0 = chroma(top).rgb();\n      c1 = chroma(bottom).rgb();\n      return chroma(f(c0, c1), 'rgb');\n    };\n  };\n\n  each = function(f) {\n    return function(c0, c1) {\n      var i, o, out;\n      out = [];\n      for (i = o = 0; o <= 3; i = ++o) {\n        out[i] = f(c0[i], c1[i]);\n      }\n      return out;\n    };\n  };\n\n  normal = function(a, b) {\n    return a;\n  };\n\n  multiply = function(a, b) {\n    return a * b / 255;\n  };\n\n  darken = function(a, b) {\n    if (a > b) {\n      return b;\n    } else {\n      return a;\n    }\n  };\n\n  lighten = function(a, b) {\n    if (a > b) {\n      return a;\n    } else {\n      return b;\n    }\n  };\n\n  screen = function(a, b) {\n    return 255 * (1 - (1 - a / 255) * (1 - b / 255));\n  };\n\n  overlay = function(a, b) {\n    if (b < 128) {\n      return 2 * a * b / 255;\n    } else {\n      return 255 * (1 - 2 * (1 - a / 255) * (1 - b / 255));\n    }\n  };\n\n  burn = function(a, b) {\n    return 255 * (1 - (1 - b / 255) / (a / 255));\n  };\n\n  dodge = function(a, b) {\n    if (a === 255) {\n      return 255;\n    }\n    a = 255 * (b / 255) / (1 - a / 255);\n    if (a > 255) {\n      return 255;\n    } else {\n      return a;\n    }\n  };\n\n  blend.normal = blend_f(each(normal));\n\n  blend.multiply = blend_f(each(multiply));\n\n  blend.screen = blend_f(each(screen));\n\n  blend.overlay = blend_f(each(overlay));\n\n  blend.darken = blend_f(each(darken));\n\n  blend.lighten = blend_f(each(lighten));\n\n  blend.dodge = blend_f(each(dodge));\n\n  blend.burn = blend_f(each(burn));\n\n  chroma.blend = blend;\n\n  chroma.analyze = function(data) {\n    var len, o, r, val;\n    r = {\n      min: Number.MAX_VALUE,\n      max: Number.MAX_VALUE * -1,\n      sum: 0,\n      values: [],\n      count: 0\n    };\n    for (o = 0, len = data.length; o < len; o++) {\n      val = data[o];\n      if ((val != null) && !isNaN(val)) {\n        r.values.push(val);\n        r.sum += val;\n        if (val < r.min) {\n          r.min = val;\n        }\n        if (val > r.max) {\n          r.max = val;\n        }\n        r.count += 1;\n      }\n    }\n    r.domain = [r.min, r.max];\n    r.limits = function(mode, num) {\n      return chroma.limits(r, mode, num);\n    };\n    return r;\n  };\n\n  chroma.scale = function(colors, positions) {\n    var _classes, _colorCache, _colors, _correctLightness, _domain, _fixed, _gamma, _max, _min, _mode, _nacol, _out, _padding, _pos, _spread, _useCache, classifyValue, f, getClass, getColor, resetCache, setColors, tmap;\n    _mode = 'rgb';\n    _nacol = chroma('#ccc');\n    _spread = 0;\n    _fixed = false;\n    _domain = [0, 1];\n    _pos = [];\n    _padding = [0, 0];\n    _classes = false;\n    _colors = [];\n    _out = false;\n    _min = 0;\n    _max = 1;\n    _correctLightness = false;\n    _colorCache = {};\n    _useCache = true;\n    _gamma = 1;\n    setColors = function(colors) {\n      var c, col, o, ref, ref1, w;\n      if (colors == null) {\n        colors = ['#fff', '#000'];\n      }\n      if ((colors != null) && type(colors) === 'string' && (chroma.brewer != null)) {\n        colors = chroma.brewer[colors] || chroma.brewer[colors.toLowerCase()] || colors;\n      }\n      if (type(colors) === 'array') {\n        if (colors.length === 1) {\n          colors = [colors[0], colors[0]];\n        }\n        colors = colors.slice(0);\n        for (c = o = 0, ref = colors.length - 1; 0 <= ref ? o <= ref : o >= ref; c = 0 <= ref ? ++o : --o) {\n          col = colors[c];\n          if (type(col) === \"string\") {\n            colors[c] = chroma(col);\n          }\n        }\n        _pos.length = 0;\n        for (c = w = 0, ref1 = colors.length - 1; 0 <= ref1 ? w <= ref1 : w >= ref1; c = 0 <= ref1 ? ++w : --w) {\n          _pos.push(c / (colors.length - 1));\n        }\n      }\n      resetCache();\n      return _colors = colors;\n    };\n    getClass = function(value) {\n      var i, n;\n      if (_classes != null) {\n        n = _classes.length - 1;\n        i = 0;\n        while (i < n && value >= _classes[i]) {\n          i++;\n        }\n        return i - 1;\n      }\n      return 0;\n    };\n    tmap = function(t) {\n      return t;\n    };\n    classifyValue = function(value) {\n      var i, maxc, minc, n, val;\n      val = value;\n      if (_classes.length > 2) {\n        n = _classes.length - 1;\n        i = getClass(value);\n        minc = _classes[0] + (_classes[1] - _classes[0]) * (0 + _spread * 0.5);\n        maxc = _classes[n - 1] + (_classes[n] - _classes[n - 1]) * (1 - _spread * 0.5);\n        val = _min + ((_classes[i] + (_classes[i + 1] - _classes[i]) * 0.5 - minc) / (maxc - minc)) * (_max - _min);\n      }\n      return val;\n    };\n    getColor = function(val, bypassMap) {\n      var c, col, i, k, o, p, ref, t;\n      if (bypassMap == null) {\n        bypassMap = false;\n      }\n      if (isNaN(val) || val === null) {\n        return _nacol;\n      }\n      if (!bypassMap) {\n        if (_classes && _classes.length > 2) {\n          c = getClass(val);\n          t = c / (_classes.length - 2);\n        } else if (_max !== _min) {\n          t = (val - _min) / (_max - _min);\n        } else {\n          t = 1;\n        }\n      } else {\n        t = val;\n      }\n      if (!bypassMap) {\n        t = tmap(t);\n      }\n      if (_gamma !== 1) {\n        t = pow(t, _gamma);\n      }\n      t = _padding[0] + (t * (1 - _padding[0] - _padding[1]));\n      t = Math.min(1, Math.max(0, t));\n      k = Math.floor(t * 10000);\n      if (_useCache && _colorCache[k]) {\n        col = _colorCache[k];\n      } else {\n        if (type(_colors) === 'array') {\n          for (i = o = 0, ref = _pos.length - 1; 0 <= ref ? o <= ref : o >= ref; i = 0 <= ref ? ++o : --o) {\n            p = _pos[i];\n            if (t <= p) {\n              col = _colors[i];\n              break;\n            }\n            if (t >= p && i === _pos.length - 1) {\n              col = _colors[i];\n              break;\n            }\n            if (t > p && t < _pos[i + 1]) {\n              t = (t - p) / (_pos[i + 1] - p);\n              col = chroma.interpolate(_colors[i], _colors[i + 1], t, _mode);\n              break;\n            }\n          }\n        } else if (type(_colors) === 'function') {\n          col = _colors(t);\n        }\n        if (_useCache) {\n          _colorCache[k] = col;\n        }\n      }\n      return col;\n    };\n    resetCache = function() {\n      return _colorCache = {};\n    };\n    setColors(colors);\n    f = function(v) {\n      var c;\n      c = chroma(getColor(v));\n      if (_out && c[_out]) {\n        return c[_out]();\n      } else {\n        return c;\n      }\n    };\n    f.classes = function(classes) {\n      var d;\n      if (classes != null) {\n        if (type(classes) === 'array') {\n          _classes = classes;\n          _domain = [classes[0], classes[classes.length - 1]];\n        } else {\n          d = chroma.analyze(_domain);\n          if (classes === 0) {\n            _classes = [d.min, d.max];\n          } else {\n            _classes = chroma.limits(d, 'e', classes);\n          }\n        }\n        return f;\n      }\n      return _classes;\n    };\n    f.domain = function(domain) {\n      var c, d, k, len, o, ref, w;\n      if (!arguments.length) {\n        return _domain;\n      }\n      _min = domain[0];\n      _max = domain[domain.length - 1];\n      _pos = [];\n      k = _colors.length;\n      if (domain.length === k && _min !== _max) {\n        for (o = 0, len = domain.length; o < len; o++) {\n          d = domain[o];\n          _pos.push((d - _min) / (_max - _min));\n        }\n      } else {\n        for (c = w = 0, ref = k - 1; 0 <= ref ? w <= ref : w >= ref; c = 0 <= ref ? ++w : --w) {\n          _pos.push(c / (k - 1));\n        }\n      }\n      _domain = [_min, _max];\n      return f;\n    };\n    f.mode = function(_m) {\n      if (!arguments.length) {\n        return _mode;\n      }\n      _mode = _m;\n      resetCache();\n      return f;\n    };\n    f.range = function(colors, _pos) {\n      setColors(colors, _pos);\n      return f;\n    };\n    f.out = function(_o) {\n      _out = _o;\n      return f;\n    };\n    f.spread = function(val) {\n      if (!arguments.length) {\n        return _spread;\n      }\n      _spread = val;\n      return f;\n    };\n    f.correctLightness = function(v) {\n      if (v == null) {\n        v = true;\n      }\n      _correctLightness = v;\n      resetCache();\n      if (_correctLightness) {\n        tmap = function(t) {\n          var L0, L1, L_actual, L_diff, L_ideal, max_iter, pol, t0, t1;\n          L0 = getColor(0, true).lab()[0];\n          L1 = getColor(1, true).lab()[0];\n          pol = L0 > L1;\n          L_actual = getColor(t, true).lab()[0];\n          L_ideal = L0 + (L1 - L0) * t;\n          L_diff = L_actual - L_ideal;\n          t0 = 0;\n          t1 = 1;\n          max_iter = 20;\n          while (Math.abs(L_diff) > 1e-2 && max_iter-- > 0) {\n            (function() {\n              if (pol) {\n                L_diff *= -1;\n              }\n              if (L_diff < 0) {\n                t0 = t;\n                t += (t1 - t) * 0.5;\n              } else {\n                t1 = t;\n                t += (t0 - t) * 0.5;\n              }\n              L_actual = getColor(t, true).lab()[0];\n              return L_diff = L_actual - L_ideal;\n            })();\n          }\n          return t;\n        };\n      } else {\n        tmap = function(t) {\n          return t;\n        };\n      }\n      return f;\n    };\n    f.padding = function(p) {\n      if (p != null) {\n        if (type(p) === 'number') {\n          p = [p, p];\n        }\n        _padding = p;\n        return f;\n      } else {\n        return _padding;\n      }\n    };\n    f.colors = function(numColors, out) {\n      var dd, dm, i, o, ref, result, results, samples, w;\n      if (arguments.length < 2) {\n        out = 'hex';\n      }\n      result = [];\n      if (arguments.length === 0) {\n        result = _colors.slice(0);\n      } else if (numColors === 1) {\n        result = [f(0.5)];\n      } else if (numColors > 1) {\n        dm = _domain[0];\n        dd = _domain[1] - dm;\n        result = (function() {\n          results = [];\n          for (var o = 0; 0 <= numColors ? o < numColors : o > numColors; 0 <= numColors ? o++ : o--){ results.push(o); }\n          return results;\n        }).apply(this).map(function(i) {\n          return f(dm + i / (numColors - 1) * dd);\n        });\n      } else {\n        colors = [];\n        samples = [];\n        if (_classes && _classes.length > 2) {\n          for (i = w = 1, ref = _classes.length; 1 <= ref ? w < ref : w > ref; i = 1 <= ref ? ++w : --w) {\n            samples.push((_classes[i - 1] + _classes[i]) * 0.5);\n          }\n        } else {\n          samples = _domain;\n        }\n        result = samples.map(function(v) {\n          return f(v);\n        });\n      }\n      if (chroma[out]) {\n        result = result.map(function(c) {\n          return c[out]();\n        });\n      }\n      return result;\n    };\n    f.cache = function(c) {\n      if (c != null) {\n        _useCache = c;\n        return f;\n      } else {\n        return _useCache;\n      }\n    };\n    f.gamma = function(g) {\n      if (g != null) {\n        _gamma = g;\n        return f;\n      } else {\n        return _gamma;\n      }\n    };\n    f.nodata = function(d) {\n      if (d != null) {\n        _nacol = chroma(d);\n        return f;\n      } else {\n        return _nacol;\n      }\n    };\n    return f;\n  };\n\n  if (chroma.scales == null) {\n    chroma.scales = {};\n  }\n\n  chroma.scales.cool = function() {\n    return chroma.scale([chroma.hsl(180, 1, .9), chroma.hsl(250, .7, .4)]);\n  };\n\n  chroma.scales.hot = function() {\n    return chroma.scale(['#000', '#f00', '#ff0', '#fff'], [0, .25, .75, 1]).mode('rgb');\n  };\n\n  chroma.analyze = function(data, key, filter) {\n    var add, k, len, o, r, val, visit;\n    r = {\n      min: Number.MAX_VALUE,\n      max: Number.MAX_VALUE * -1,\n      sum: 0,\n      values: [],\n      count: 0\n    };\n    if (filter == null) {\n      filter = function() {\n        return true;\n      };\n    }\n    add = function(val) {\n      if ((val != null) && !isNaN(val)) {\n        r.values.push(val);\n        r.sum += val;\n        if (val < r.min) {\n          r.min = val;\n        }\n        if (val > r.max) {\n          r.max = val;\n        }\n        r.count += 1;\n      }\n    };\n    visit = function(val, k) {\n      if (filter(val, k)) {\n        if ((key != null) && type(key) === 'function') {\n          return add(key(val));\n        } else if ((key != null) && type(key) === 'string' || type(key) === 'number') {\n          return add(val[key]);\n        } else {\n          return add(val);\n        }\n      }\n    };\n    if (type(data) === 'array') {\n      for (o = 0, len = data.length; o < len; o++) {\n        val = data[o];\n        visit(val);\n      }\n    } else {\n      for (k in data) {\n        val = data[k];\n        visit(val, k);\n      }\n    }\n    r.domain = [r.min, r.max];\n    r.limits = function(mode, num) {\n      return chroma.limits(r, mode, num);\n    };\n    return r;\n  };\n\n  chroma.limits = function(data, mode, num) {\n    var aa, ab, ac, ad, ae, af, ag, ah, ai, aj, ak, al, am, assignments, best, centroids, cluster, clusterSizes, dist, i, j, kClusters, limits, max_log, min, min_log, mindist, n, nb_iters, newCentroids, o, p, pb, pr, ref, ref1, ref10, ref11, ref12, ref13, ref14, ref2, ref3, ref4, ref5, ref6, ref7, ref8, ref9, repeat, sum, tmpKMeansBreaks, v, value, values, w;\n    if (mode == null) {\n      mode = 'equal';\n    }\n    if (num == null) {\n      num = 7;\n    }\n    if (type(data) === 'array') {\n      data = chroma.analyze(data);\n    }\n    min = data.min;\n    max = data.max;\n    sum = data.sum;\n    values = data.values.sort(function(a, b) {\n      return a - b;\n    });\n    if (num === 1) {\n      return [min, max];\n    }\n    limits = [];\n    if (mode.substr(0, 1) === 'c') {\n      limits.push(min);\n      limits.push(max);\n    }\n    if (mode.substr(0, 1) === 'e') {\n      limits.push(min);\n      for (i = o = 1, ref = num - 1; 1 <= ref ? o <= ref : o >= ref; i = 1 <= ref ? ++o : --o) {\n        limits.push(min + (i / num) * (max - min));\n      }\n      limits.push(max);\n    } else if (mode.substr(0, 1) === 'l') {\n      if (min <= 0) {\n        throw 'Logarithmic scales are only possible for values > 0';\n      }\n      min_log = Math.LOG10E * log(min);\n      max_log = Math.LOG10E * log(max);\n      limits.push(min);\n      for (i = w = 1, ref1 = num - 1; 1 <= ref1 ? w <= ref1 : w >= ref1; i = 1 <= ref1 ? ++w : --w) {\n        limits.push(pow(10, min_log + (i / num) * (max_log - min_log)));\n      }\n      limits.push(max);\n    } else if (mode.substr(0, 1) === 'q') {\n      limits.push(min);\n      for (i = aa = 1, ref2 = num - 1; 1 <= ref2 ? aa <= ref2 : aa >= ref2; i = 1 <= ref2 ? ++aa : --aa) {\n        p = (values.length - 1) * i / num;\n        pb = floor(p);\n        if (pb === p) {\n          limits.push(values[pb]);\n        } else {\n          pr = p - pb;\n          limits.push(values[pb] * (1 - pr) + values[pb + 1] * pr);\n        }\n      }\n      limits.push(max);\n    } else if (mode.substr(0, 1) === 'k') {\n\n      /*\n      implementation based on\n      http://code.google.com/p/figue/source/browse/trunk/figue.js#336\n      simplified for 1-d input values\n       */\n      n = values.length;\n      assignments = new Array(n);\n      clusterSizes = new Array(num);\n      repeat = true;\n      nb_iters = 0;\n      centroids = null;\n      centroids = [];\n      centroids.push(min);\n      for (i = ab = 1, ref3 = num - 1; 1 <= ref3 ? ab <= ref3 : ab >= ref3; i = 1 <= ref3 ? ++ab : --ab) {\n        centroids.push(min + (i / num) * (max - min));\n      }\n      centroids.push(max);\n      while (repeat) {\n        for (j = ac = 0, ref4 = num - 1; 0 <= ref4 ? ac <= ref4 : ac >= ref4; j = 0 <= ref4 ? ++ac : --ac) {\n          clusterSizes[j] = 0;\n        }\n        for (i = ad = 0, ref5 = n - 1; 0 <= ref5 ? ad <= ref5 : ad >= ref5; i = 0 <= ref5 ? ++ad : --ad) {\n          value = values[i];\n          mindist = Number.MAX_VALUE;\n          for (j = ae = 0, ref6 = num - 1; 0 <= ref6 ? ae <= ref6 : ae >= ref6; j = 0 <= ref6 ? ++ae : --ae) {\n            dist = abs(centroids[j] - value);\n            if (dist < mindist) {\n              mindist = dist;\n              best = j;\n            }\n          }\n          clusterSizes[best]++;\n          assignments[i] = best;\n        }\n        newCentroids = new Array(num);\n        for (j = af = 0, ref7 = num - 1; 0 <= ref7 ? af <= ref7 : af >= ref7; j = 0 <= ref7 ? ++af : --af) {\n          newCentroids[j] = null;\n        }\n        for (i = ag = 0, ref8 = n - 1; 0 <= ref8 ? ag <= ref8 : ag >= ref8; i = 0 <= ref8 ? ++ag : --ag) {\n          cluster = assignments[i];\n          if (newCentroids[cluster] === null) {\n            newCentroids[cluster] = values[i];\n          } else {\n            newCentroids[cluster] += values[i];\n          }\n        }\n        for (j = ah = 0, ref9 = num - 1; 0 <= ref9 ? ah <= ref9 : ah >= ref9; j = 0 <= ref9 ? ++ah : --ah) {\n          newCentroids[j] *= 1 / clusterSizes[j];\n        }\n        repeat = false;\n        for (j = ai = 0, ref10 = num - 1; 0 <= ref10 ? ai <= ref10 : ai >= ref10; j = 0 <= ref10 ? ++ai : --ai) {\n          if (newCentroids[j] !== centroids[i]) {\n            repeat = true;\n            break;\n          }\n        }\n        centroids = newCentroids;\n        nb_iters++;\n        if (nb_iters > 200) {\n          repeat = false;\n        }\n      }\n      kClusters = {};\n      for (j = aj = 0, ref11 = num - 1; 0 <= ref11 ? aj <= ref11 : aj >= ref11; j = 0 <= ref11 ? ++aj : --aj) {\n        kClusters[j] = [];\n      }\n      for (i = ak = 0, ref12 = n - 1; 0 <= ref12 ? ak <= ref12 : ak >= ref12; i = 0 <= ref12 ? ++ak : --ak) {\n        cluster = assignments[i];\n        kClusters[cluster].push(values[i]);\n      }\n      tmpKMeansBreaks = [];\n      for (j = al = 0, ref13 = num - 1; 0 <= ref13 ? al <= ref13 : al >= ref13; j = 0 <= ref13 ? ++al : --al) {\n        tmpKMeansBreaks.push(kClusters[j][0]);\n        tmpKMeansBreaks.push(kClusters[j][kClusters[j].length - 1]);\n      }\n      tmpKMeansBreaks = tmpKMeansBreaks.sort(function(a, b) {\n        return a - b;\n      });\n      limits.push(tmpKMeansBreaks[0]);\n      for (i = am = 1, ref14 = tmpKMeansBreaks.length - 1; am <= ref14; i = am += 2) {\n        v = tmpKMeansBreaks[i];\n        if (!isNaN(v) && limits.indexOf(v) === -1) {\n          limits.push(v);\n        }\n      }\n    }\n    return limits;\n  };\n\n  hsi2rgb = function(h, s, i) {\n\n    /*\n    borrowed from here:\n    http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/hsi2rgb.cpp\n     */\n    var args, b, g, r;\n    args = unpack(arguments);\n    h = args[0], s = args[1], i = args[2];\n    if (isNaN(h)) {\n      h = 0;\n    }\n    h /= 360;\n    if (h < 1 / 3) {\n      b = (1 - s) / 3;\n      r = (1 + s * cos(TWOPI * h) / cos(PITHIRD - TWOPI * h)) / 3;\n      g = 1 - (b + r);\n    } else if (h < 2 / 3) {\n      h -= 1 / 3;\n      r = (1 - s) / 3;\n      g = (1 + s * cos(TWOPI * h) / cos(PITHIRD - TWOPI * h)) / 3;\n      b = 1 - (r + g);\n    } else {\n      h -= 2 / 3;\n      g = (1 - s) / 3;\n      b = (1 + s * cos(TWOPI * h) / cos(PITHIRD - TWOPI * h)) / 3;\n      r = 1 - (g + b);\n    }\n    r = limit(i * r * 3);\n    g = limit(i * g * 3);\n    b = limit(i * b * 3);\n    return [r * 255, g * 255, b * 255, args.length > 3 ? args[3] : 1];\n  };\n\n  rgb2hsi = function() {\n\n    /*\n    borrowed from here:\n    http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/rgb2hsi.cpp\n     */\n    var b, g, h, i, min, r, ref, s;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    TWOPI = Math.PI * 2;\n    r /= 255;\n    g /= 255;\n    b /= 255;\n    min = Math.min(r, g, b);\n    i = (r + g + b) / 3;\n    s = 1 - min / i;\n    if (s === 0) {\n      h = 0;\n    } else {\n      h = ((r - g) + (r - b)) / 2;\n      h /= Math.sqrt((r - g) * (r - g) + (r - b) * (g - b));\n      h = Math.acos(h);\n      if (b > g) {\n        h = TWOPI - h;\n      }\n      h /= TWOPI;\n    }\n    return [h * 360, s, i];\n  };\n\n  chroma.hsi = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['hsi']), function(){});\n  };\n\n  _input.hsi = hsi2rgb;\n\n  Color.prototype.hsi = function() {\n    return rgb2hsi(this._rgb);\n  };\n\n  interpolate_hsx = function(col1, col2, f, m) {\n    var dh, hue, hue0, hue1, lbv, lbv0, lbv1, res, sat, sat0, sat1, xyz0, xyz1;\n    if (m === 'hsl') {\n      xyz0 = col1.hsl();\n      xyz1 = col2.hsl();\n    } else if (m === 'hsv') {\n      xyz0 = col1.hsv();\n      xyz1 = col2.hsv();\n    } else if (m === 'hcg') {\n      xyz0 = col1.hcg();\n      xyz1 = col2.hcg();\n    } else if (m === 'hsi') {\n      xyz0 = col1.hsi();\n      xyz1 = col2.hsi();\n    } else if (m === 'lch' || m === 'hcl') {\n      m = 'hcl';\n      xyz0 = col1.hcl();\n      xyz1 = col2.hcl();\n    }\n    if (m.substr(0, 1) === 'h') {\n      hue0 = xyz0[0], sat0 = xyz0[1], lbv0 = xyz0[2];\n      hue1 = xyz1[0], sat1 = xyz1[1], lbv1 = xyz1[2];\n    }\n    if (!isNaN(hue0) && !isNaN(hue1)) {\n      if (hue1 > hue0 && hue1 - hue0 > 180) {\n        dh = hue1 - (hue0 + 360);\n      } else if (hue1 < hue0 && hue0 - hue1 > 180) {\n        dh = hue1 + 360 - hue0;\n      } else {\n        dh = hue1 - hue0;\n      }\n      hue = hue0 + f * dh;\n    } else if (!isNaN(hue0)) {\n      hue = hue0;\n      if ((lbv1 === 1 || lbv1 === 0) && m !== 'hsv') {\n        sat = sat0;\n      }\n    } else if (!isNaN(hue1)) {\n      hue = hue1;\n      if ((lbv0 === 1 || lbv0 === 0) && m !== 'hsv') {\n        sat = sat1;\n      }\n    } else {\n      hue = Number.NaN;\n    }\n    if (sat == null) {\n      sat = sat0 + f * (sat1 - sat0);\n    }\n    lbv = lbv0 + f * (lbv1 - lbv0);\n    return res = chroma[m](hue, sat, lbv);\n  };\n\n  _interpolators = _interpolators.concat((function() {\n    var len, o, ref, results;\n    ref = ['hsv', 'hsl', 'hsi', 'hcl', 'lch', 'hcg'];\n    results = [];\n    for (o = 0, len = ref.length; o < len; o++) {\n      m = ref[o];\n      results.push([m, interpolate_hsx]);\n    }\n    return results;\n  })());\n\n  interpolate_num = function(col1, col2, f, m) {\n    var n1, n2;\n    n1 = col1.num();\n    n2 = col2.num();\n    return chroma.num(n1 + (n2 - n1) * f, 'num');\n  };\n\n  _interpolators.push(['num', interpolate_num]);\n\n  interpolate_lab = function(col1, col2, f, m) {\n    var res, xyz0, xyz1;\n    xyz0 = col1.lab();\n    xyz1 = col2.lab();\n    return res = new Color(xyz0[0] + f * (xyz1[0] - xyz0[0]), xyz0[1] + f * (xyz1[1] - xyz0[1]), xyz0[2] + f * (xyz1[2] - xyz0[2]), m);\n  };\n\n  _interpolators.push(['lab', interpolate_lab]);\n\n}).call(this);\n","import \"bootstrap-switch\";\nimport \"bootstrap-switch/dist/css/bootstrap3/bootstrap-switch.css\";\nimport \"angular-bootstrap-switch\";\n","/**\n  * bootstrap-switch - Turn checkboxes and radio buttons into toggle switches.\n  *\n  * @version v3.3.4\n  * @homepage https://bttstrp.github.io/bootstrap-switch\n  * @author Mattia Larentis <mattia@larentis.eu> (http://larentis.eu)\n  * @license Apache-2.0\n  */\n\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define(['jquery'], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require('jquery'));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.jquery);\n    global.bootstrapSwitch = mod.exports;\n  }\n})(this, function (_jquery) {\n  'use strict';\n\n  var _jquery2 = _interopRequireDefault(_jquery);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  var _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  var _createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n\n  var $ = _jquery2.default || window.jQuery || window.$;\n\n  var BootstrapSwitch = function () {\n    function BootstrapSwitch(element) {\n      var _this = this;\n\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      _classCallCheck(this, BootstrapSwitch);\n\n      this.$element = $(element);\n      this.options = $.extend({}, $.fn.bootstrapSwitch.defaults, this._getElementOptions(), options);\n      this.prevOptions = {};\n      this.$wrapper = $('<div>', {\n        class: function _class() {\n          var classes = [];\n          classes.push(_this.options.state ? 'on' : 'off');\n          if (_this.options.size) {\n            classes.push(_this.options.size);\n          }\n          if (_this.options.disabled) {\n            classes.push('disabled');\n          }\n          if (_this.options.readonly) {\n            classes.push('readonly');\n          }\n          if (_this.options.indeterminate) {\n            classes.push('indeterminate');\n          }\n          if (_this.options.inverse) {\n            classes.push('inverse');\n          }\n          if (_this.$element.attr('id')) {\n            classes.push('id-' + _this.$element.attr('id'));\n          }\n          return classes.map(_this._getClass.bind(_this)).concat([_this.options.baseClass], _this._getClasses(_this.options.wrapperClass)).join(' ');\n        }\n      });\n      this.$container = $('<div>', { class: this._getClass('container') });\n      this.$on = $('<span>', {\n        html: this.options.onText,\n        class: this._getClass('handle-on') + ' ' + this._getClass(this.options.onColor)\n      });\n      this.$off = $('<span>', {\n        html: this.options.offText,\n        class: this._getClass('handle-off') + ' ' + this._getClass(this.options.offColor)\n      });\n      this.$label = $('<span>', {\n        html: this.options.labelText,\n        class: this._getClass('label')\n      });\n\n      this.$element.on('init.bootstrapSwitch', this.options.onInit.bind(this, element));\n      this.$element.on('switchChange.bootstrapSwitch', function () {\n        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        if (_this.options.onSwitchChange.apply(element, args) === false) {\n          if (_this.$element.is(':radio')) {\n            $('[name=\"' + _this.$element.attr('name') + '\"]').trigger('previousState.bootstrapSwitch', true);\n          } else {\n            _this.$element.trigger('previousState.bootstrapSwitch', true);\n          }\n        }\n      });\n\n      this.$container = this.$element.wrap(this.$container).parent();\n      this.$wrapper = this.$container.wrap(this.$wrapper).parent();\n      this.$element.before(this.options.inverse ? this.$off : this.$on).before(this.$label).before(this.options.inverse ? this.$on : this.$off);\n\n      if (this.options.indeterminate) {\n        this.$element.prop('indeterminate', true);\n      }\n\n      this._init();\n      this._elementHandlers();\n      this._handleHandlers();\n      this._labelHandlers();\n      this._formHandler();\n      this._externalLabelHandler();\n      this.$element.trigger('init.bootstrapSwitch', this.options.state);\n    }\n\n    _createClass(BootstrapSwitch, [{\n      key: 'setPrevOptions',\n      value: function setPrevOptions() {\n        this.prevOptions = _extends({}, this.options);\n      }\n    }, {\n      key: 'state',\n      value: function state(value, skip) {\n        if (typeof value === 'undefined') {\n          return this.options.state;\n        }\n        if (this.options.disabled || this.options.readonly || this.options.state && !this.options.radioAllOff && this.$element.is(':radio')) {\n          return this.$element;\n        }\n        if (this.$element.is(':radio')) {\n          $('[name=\"' + this.$element.attr('name') + '\"]').trigger('setPreviousOptions.bootstrapSwitch');\n        } else {\n          this.$element.trigger('setPreviousOptions.bootstrapSwitch');\n        }\n        if (this.options.indeterminate) {\n          this.indeterminate(false);\n        }\n        this.$element.prop('checked', Boolean(value)).trigger('change.bootstrapSwitch', skip);\n        return this.$element;\n      }\n    }, {\n      key: 'toggleState',\n      value: function toggleState(skip) {\n        if (this.options.disabled || this.options.readonly) {\n          return this.$element;\n        }\n        if (this.options.indeterminate) {\n          this.indeterminate(false);\n          return this.state(true);\n        } else {\n          return this.$element.prop('checked', !this.options.state).trigger('change.bootstrapSwitch', skip);\n        }\n      }\n    }, {\n      key: 'size',\n      value: function size(value) {\n        if (typeof value === 'undefined') {\n          return this.options.size;\n        }\n        if (this.options.size != null) {\n          this.$wrapper.removeClass(this._getClass(this.options.size));\n        }\n        if (value) {\n          this.$wrapper.addClass(this._getClass(value));\n        }\n        this._width();\n        this._containerPosition();\n        this.options.size = value;\n        return this.$element;\n      }\n    }, {\n      key: 'animate',\n      value: function animate(value) {\n        if (typeof value === 'undefined') {\n          return this.options.animate;\n        }\n        if (this.options.animate === Boolean(value)) {\n          return this.$element;\n        }\n        return this.toggleAnimate();\n      }\n    }, {\n      key: 'toggleAnimate',\n      value: function toggleAnimate() {\n        this.options.animate = !this.options.animate;\n        this.$wrapper.toggleClass(this._getClass('animate'));\n        return this.$element;\n      }\n    }, {\n      key: 'disabled',\n      value: function disabled(value) {\n        if (typeof value === 'undefined') {\n          return this.options.disabled;\n        }\n        if (this.options.disabled === Boolean(value)) {\n          return this.$element;\n        }\n        return this.toggleDisabled();\n      }\n    }, {\n      key: 'toggleDisabled',\n      value: function toggleDisabled() {\n        this.options.disabled = !this.options.disabled;\n        this.$element.prop('disabled', this.options.disabled);\n        this.$wrapper.toggleClass(this._getClass('disabled'));\n        return this.$element;\n      }\n    }, {\n      key: 'readonly',\n      value: function readonly(value) {\n        if (typeof value === 'undefined') {\n          return this.options.readonly;\n        }\n        if (this.options.readonly === Boolean(value)) {\n          return this.$element;\n        }\n        return this.toggleReadonly();\n      }\n    }, {\n      key: 'toggleReadonly',\n      value: function toggleReadonly() {\n        this.options.readonly = !this.options.readonly;\n        this.$element.prop('readonly', this.options.readonly);\n        this.$wrapper.toggleClass(this._getClass('readonly'));\n        return this.$element;\n      }\n    }, {\n      key: 'indeterminate',\n      value: function indeterminate(value) {\n        if (typeof value === 'undefined') {\n          return this.options.indeterminate;\n        }\n        if (this.options.indeterminate === Boolean(value)) {\n          return this.$element;\n        }\n        return this.toggleIndeterminate();\n      }\n    }, {\n      key: 'toggleIndeterminate',\n      value: function toggleIndeterminate() {\n        this.options.indeterminate = !this.options.indeterminate;\n        this.$element.prop('indeterminate', this.options.indeterminate);\n        this.$wrapper.toggleClass(this._getClass('indeterminate'));\n        this._containerPosition();\n        return this.$element;\n      }\n    }, {\n      key: 'inverse',\n      value: function inverse(value) {\n        if (typeof value === 'undefined') {\n          return this.options.inverse;\n        }\n        if (this.options.inverse === Boolean(value)) {\n          return this.$element;\n        }\n        return this.toggleInverse();\n      }\n    }, {\n      key: 'toggleInverse',\n      value: function toggleInverse() {\n        this.$wrapper.toggleClass(this._getClass('inverse'));\n        var $on = this.$on.clone(true);\n        var $off = this.$off.clone(true);\n        this.$on.replaceWith($off);\n        this.$off.replaceWith($on);\n        this.$on = $off;\n        this.$off = $on;\n        this.options.inverse = !this.options.inverse;\n        return this.$element;\n      }\n    }, {\n      key: 'onColor',\n      value: function onColor(value) {\n        if (typeof value === 'undefined') {\n          return this.options.onColor;\n        }\n        if (this.options.onColor) {\n          this.$on.removeClass(this._getClass(this.options.onColor));\n        }\n        this.$on.addClass(this._getClass(value));\n        this.options.onColor = value;\n        return this.$element;\n      }\n    }, {\n      key: 'offColor',\n      value: function offColor(value) {\n        if (typeof value === 'undefined') {\n          return this.options.offColor;\n        }\n        if (this.options.offColor) {\n          this.$off.removeClass(this._getClass(this.options.offColor));\n        }\n        this.$off.addClass(this._getClass(value));\n        this.options.offColor = value;\n        return this.$element;\n      }\n    }, {\n      key: 'onText',\n      value: function onText(value) {\n        if (typeof value === 'undefined') {\n          return this.options.onText;\n        }\n        this.$on.html(value);\n        this._width();\n        this._containerPosition();\n        this.options.onText = value;\n        return this.$element;\n      }\n    }, {\n      key: 'offText',\n      value: function offText(value) {\n        if (typeof value === 'undefined') {\n          return this.options.offText;\n        }\n        this.$off.html(value);\n        this._width();\n        this._containerPosition();\n        this.options.offText = value;\n        return this.$element;\n      }\n    }, {\n      key: 'labelText',\n      value: function labelText(value) {\n        if (typeof value === 'undefined') {\n          return this.options.labelText;\n        }\n        this.$label.html(value);\n        this._width();\n        this.options.labelText = value;\n        return this.$element;\n      }\n    }, {\n      key: 'handleWidth',\n      value: function handleWidth(value) {\n        if (typeof value === 'undefined') {\n          return this.options.handleWidth;\n        }\n        this.options.handleWidth = value;\n        this._width();\n        this._containerPosition();\n        return this.$element;\n      }\n    }, {\n      key: 'labelWidth',\n      value: function labelWidth(value) {\n        if (typeof value === 'undefined') {\n          return this.options.labelWidth;\n        }\n        this.options.labelWidth = value;\n        this._width();\n        this._containerPosition();\n        return this.$element;\n      }\n    }, {\n      key: 'baseClass',\n      value: function baseClass(value) {\n        return this.options.baseClass;\n      }\n    }, {\n      key: 'wrapperClass',\n      value: function wrapperClass(value) {\n        if (typeof value === 'undefined') {\n          return this.options.wrapperClass;\n        }\n        if (!value) {\n          value = $.fn.bootstrapSwitch.defaults.wrapperClass;\n        }\n        this.$wrapper.removeClass(this._getClasses(this.options.wrapperClass).join(' '));\n        this.$wrapper.addClass(this._getClasses(value).join(' '));\n        this.options.wrapperClass = value;\n        return this.$element;\n      }\n    }, {\n      key: 'radioAllOff',\n      value: function radioAllOff(value) {\n        if (typeof value === 'undefined') {\n          return this.options.radioAllOff;\n        }\n        var val = Boolean(value);\n        if (this.options.radioAllOff === val) {\n          return this.$element;\n        }\n        this.options.radioAllOff = val;\n        return this.$element;\n      }\n    }, {\n      key: 'onInit',\n      value: function onInit(value) {\n        if (typeof value === 'undefined') {\n          return this.options.onInit;\n        }\n        if (!value) {\n          value = $.fn.bootstrapSwitch.defaults.onInit;\n        }\n        this.options.onInit = value;\n        return this.$element;\n      }\n    }, {\n      key: 'onSwitchChange',\n      value: function onSwitchChange(value) {\n        if (typeof value === 'undefined') {\n          return this.options.onSwitchChange;\n        }\n        if (!value) {\n          value = $.fn.bootstrapSwitch.defaults.onSwitchChange;\n        }\n        this.options.onSwitchChange = value;\n        return this.$element;\n      }\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        var $form = this.$element.closest('form');\n        if ($form.length) {\n          $form.off('reset.bootstrapSwitch').removeData('bootstrap-switch');\n        }\n        this.$container.children().not(this.$element).remove();\n        this.$element.unwrap().unwrap().off('.bootstrapSwitch').removeData('bootstrap-switch');\n        return this.$element;\n      }\n    }, {\n      key: '_getElementOptions',\n      value: function _getElementOptions() {\n        return {\n          state: this.$element.is(':checked'),\n          size: this.$element.data('size'),\n          animate: this.$element.data('animate'),\n          disabled: this.$element.is(':disabled'),\n          readonly: this.$element.is('[readonly]'),\n          indeterminate: this.$element.data('indeterminate'),\n          inverse: this.$element.data('inverse'),\n          radioAllOff: this.$element.data('radio-all-off'),\n          onColor: this.$element.data('on-color'),\n          offColor: this.$element.data('off-color'),\n          onText: this.$element.data('on-text'),\n          offText: this.$element.data('off-text'),\n          labelText: this.$element.data('label-text'),\n          handleWidth: this.$element.data('handle-width'),\n          labelWidth: this.$element.data('label-width'),\n          baseClass: this.$element.data('base-class'),\n          wrapperClass: this.$element.data('wrapper-class')\n        };\n      }\n    }, {\n      key: '_width',\n      value: function _width() {\n        var _this2 = this;\n\n        var $handles = this.$on.add(this.$off).add(this.$label).css('width', '');\n        var handleWidth = this.options.handleWidth === 'auto' ? Math.round(Math.max(this.$on.width(), this.$off.width())) : this.options.handleWidth;\n        $handles.width(handleWidth);\n        this.$label.width(function (index, width) {\n          if (_this2.options.labelWidth !== 'auto') {\n            return _this2.options.labelWidth;\n          }\n          if (width < handleWidth) {\n            return handleWidth;\n          }\n          return width;\n        });\n        this._handleWidth = this.$on.outerWidth();\n        this._labelWidth = this.$label.outerWidth();\n        this.$container.width(this._handleWidth * 2 + this._labelWidth);\n        return this.$wrapper.width(this._handleWidth + this._labelWidth);\n      }\n    }, {\n      key: '_containerPosition',\n      value: function _containerPosition() {\n        var _this3 = this;\n\n        var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.options.state;\n        var callback = arguments[1];\n\n        this.$container.css('margin-left', function () {\n          var values = [0, '-' + _this3._handleWidth + 'px'];\n          if (_this3.options.indeterminate) {\n            return '-' + _this3._handleWidth / 2 + 'px';\n          }\n          if (state) {\n            if (_this3.options.inverse) {\n              return values[1];\n            } else {\n              return values[0];\n            }\n          } else {\n            if (_this3.options.inverse) {\n              return values[0];\n            } else {\n              return values[1];\n            }\n          }\n        });\n      }\n    }, {\n      key: '_init',\n      value: function _init() {\n        var _this4 = this;\n\n        var init = function init() {\n          _this4.setPrevOptions();\n          _this4._width();\n          _this4._containerPosition();\n          setTimeout(function () {\n            if (_this4.options.animate) {\n              return _this4.$wrapper.addClass(_this4._getClass('animate'));\n            }\n          }, 50);\n        };\n        if (this.$wrapper.is(':visible')) {\n          init();\n          return;\n        }\n        var initInterval = window.setInterval(function () {\n          if (_this4.$wrapper.is(':visible')) {\n            init();\n            return window.clearInterval(initInterval);\n          }\n        }, 50);\n      }\n    }, {\n      key: '_elementHandlers',\n      value: function _elementHandlers() {\n        var _this5 = this;\n\n        return this.$element.on({\n          'setPreviousOptions.bootstrapSwitch': this.setPrevOptions.bind(this),\n\n          'previousState.bootstrapSwitch': function previousStateBootstrapSwitch() {\n            _this5.options = _this5.prevOptions;\n            if (_this5.options.indeterminate) {\n              _this5.$wrapper.addClass(_this5._getClass('indeterminate'));\n            }\n            _this5.$element.prop('checked', _this5.options.state).trigger('change.bootstrapSwitch', true);\n          },\n\n          'change.bootstrapSwitch': function changeBootstrapSwitch(event, skip) {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n            var state = _this5.$element.is(':checked');\n            _this5._containerPosition(state);\n            if (state === _this5.options.state) {\n              return;\n            }\n            _this5.options.state = state;\n            _this5.$wrapper.toggleClass(_this5._getClass('off')).toggleClass(_this5._getClass('on'));\n            if (!skip) {\n              if (_this5.$element.is(':radio')) {\n                $('[name=\"' + _this5.$element.attr('name') + '\"]').not(_this5.$element).prop('checked', false).trigger('change.bootstrapSwitch', true);\n              }\n              _this5.$element.trigger('switchChange.bootstrapSwitch', [state]);\n            }\n          },\n\n          'focus.bootstrapSwitch': function focusBootstrapSwitch(event) {\n            event.preventDefault();\n            _this5.$wrapper.addClass(_this5._getClass('focused'));\n          },\n\n          'blur.bootstrapSwitch': function blurBootstrapSwitch(event) {\n            event.preventDefault();\n            _this5.$wrapper.removeClass(_this5._getClass('focused'));\n          },\n\n          'keydown.bootstrapSwitch': function keydownBootstrapSwitch(event) {\n            if (!event.which || _this5.options.disabled || _this5.options.readonly) {\n              return;\n            }\n            if (event.which === 37 || event.which === 39) {\n              event.preventDefault();\n              event.stopImmediatePropagation();\n              _this5.state(event.which === 39);\n            }\n          }\n        });\n      }\n    }, {\n      key: '_handleHandlers',\n      value: function _handleHandlers() {\n        var _this6 = this;\n\n        this.$on.on('click.bootstrapSwitch', function (event) {\n          event.preventDefault();\n          event.stopPropagation();\n          _this6.state(false);\n          return _this6.$element.trigger('focus.bootstrapSwitch');\n        });\n        return this.$off.on('click.bootstrapSwitch', function (event) {\n          event.preventDefault();\n          event.stopPropagation();\n          _this6.state(true);\n          return _this6.$element.trigger('focus.bootstrapSwitch');\n        });\n      }\n    }, {\n      key: '_labelHandlers',\n      value: function _labelHandlers() {\n        var _this7 = this;\n\n        var handlers = {\n          click: function click(event) {\n            event.stopPropagation();\n          },\n\n\n          'mousedown.bootstrapSwitch touchstart.bootstrapSwitch': function mousedownBootstrapSwitchTouchstartBootstrapSwitch(event) {\n            if (_this7._dragStart || _this7.options.disabled || _this7.options.readonly) {\n              return;\n            }\n            event.preventDefault();\n            event.stopPropagation();\n            _this7._dragStart = (event.pageX || event.originalEvent.touches[0].pageX) - parseInt(_this7.$container.css('margin-left'), 10);\n            if (_this7.options.animate) {\n              _this7.$wrapper.removeClass(_this7._getClass('animate'));\n            }\n            _this7.$element.trigger('focus.bootstrapSwitch');\n          },\n\n          'mousemove.bootstrapSwitch touchmove.bootstrapSwitch': function mousemoveBootstrapSwitchTouchmoveBootstrapSwitch(event) {\n            if (_this7._dragStart == null) {\n              return;\n            }\n            var difference = (event.pageX || event.originalEvent.touches[0].pageX) - _this7._dragStart;\n            event.preventDefault();\n            if (difference < -_this7._handleWidth || difference > 0) {\n              return;\n            }\n            _this7._dragEnd = difference;\n            _this7.$container.css('margin-left', _this7._dragEnd + 'px');\n          },\n\n          'mouseup.bootstrapSwitch touchend.bootstrapSwitch': function mouseupBootstrapSwitchTouchendBootstrapSwitch(event) {\n            if (!_this7._dragStart) {\n              return;\n            }\n            event.preventDefault();\n            if (_this7.options.animate) {\n              _this7.$wrapper.addClass(_this7._getClass('animate'));\n            }\n            if (_this7._dragEnd) {\n              var state = _this7._dragEnd > -(_this7._handleWidth / 2);\n              _this7._dragEnd = false;\n              _this7.state(_this7.options.inverse ? !state : state);\n            } else {\n              _this7.state(!_this7.options.state);\n            }\n            _this7._dragStart = false;\n          },\n\n          'mouseleave.bootstrapSwitch': function mouseleaveBootstrapSwitch() {\n            _this7.$label.trigger('mouseup.bootstrapSwitch');\n          }\n        };\n        this.$label.on(handlers);\n      }\n    }, {\n      key: '_externalLabelHandler',\n      value: function _externalLabelHandler() {\n        var _this8 = this;\n\n        var $externalLabel = this.$element.closest('label');\n        $externalLabel.on('click', function (event) {\n          event.preventDefault();\n          event.stopImmediatePropagation();\n          if (event.target === $externalLabel[0]) {\n            _this8.toggleState();\n          }\n        });\n      }\n    }, {\n      key: '_formHandler',\n      value: function _formHandler() {\n        var $form = this.$element.closest('form');\n        if ($form.data('bootstrap-switch')) {\n          return;\n        }\n        $form.on('reset.bootstrapSwitch', function () {\n          window.setTimeout(function () {\n            $form.find('input').filter(function () {\n              return $(this).data('bootstrap-switch');\n            }).each(function () {\n              return $(this).bootstrapSwitch('state', this.checked);\n            });\n          }, 1);\n        }).data('bootstrap-switch', true);\n      }\n    }, {\n      key: '_getClass',\n      value: function _getClass(name) {\n        return this.options.baseClass + '-' + name;\n      }\n    }, {\n      key: '_getClasses',\n      value: function _getClasses(classes) {\n        if (!$.isArray(classes)) {\n          return [this._getClass(classes)];\n        }\n        return classes.map(this._getClass.bind(this));\n      }\n    }]);\n\n    return BootstrapSwitch;\n  }();\n\n  $.fn.bootstrapSwitch = function (option) {\n    for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      args[_key2 - 1] = arguments[_key2];\n    }\n\n    function reducer(ret, next) {\n      var $this = $(next);\n      var existingData = $this.data('bootstrap-switch');\n      var data = existingData || new BootstrapSwitch(next, option);\n      if (!existingData) {\n        $this.data('bootstrap-switch', data);\n      }\n      if (typeof option === 'string') {\n        return data[option].apply(data, args);\n      }\n      return ret;\n    }\n    return Array.prototype.reduce.call(this, reducer, this);\n  };\n  $.fn.bootstrapSwitch.Constructor = BootstrapSwitch;\n  $.fn.bootstrapSwitch.defaults = {\n    state: true,\n    size: null,\n    animate: true,\n    disabled: false,\n    readonly: false,\n    indeterminate: false,\n    inverse: false,\n    radioAllOff: false,\n    onColor: 'primary',\n    offColor: 'default',\n    onText: 'ON',\n    offText: 'OFF',\n    labelText: '&nbsp',\n    handleWidth: 'auto',\n    labelWidth: 'auto',\n    baseClass: 'bootstrap-switch',\n    wrapperClass: 'wrapper',\n    onInit: function onInit() {},\n    onSwitchChange: function onSwitchChange() {}\n  };\n});\n","/**\n * angular-bootstrap-switch\n * @version v0.5.2 - 2017-04-19\n * @author Francesco Pontillo (francescopontillo@gmail.com)\n * @link https://github.com/frapontillo/angular-bootstrap-switch\n * @license Apache License 2.0(http://www.apache.org/licenses/LICENSE-2.0.html)\n**/\n\n(function() {\n'use strict';\n\n// Source: common/module.js\nangular.module('frapontillo.bootstrap-switch', []);\n\n// Source: dist/.temp/directives/bsSwitch.js\nangular.module('frapontillo.bootstrap-switch')\n  .directive('bsSwitch', [\"$parse\", \"$timeout\", function ($parse, $timeout) {\n    return {\n      restrict: 'A',\n      require: 'ngModel',\n      link: function link(scope, element, attrs, controller) {\n        var isInit = false;\n\n        /**\n         * Return the true value for this specific checkbox.\n         * @returns {Object} representing the true view value; if undefined, returns true.\n         */\n        var getTrueValue = function() {\n          if (attrs.type === 'radio') {\n            return attrs.value || $parse(attrs.ngValue)(scope) || true;\n          }\n          var trueValue = ($parse(attrs.ngTrueValue)(scope));\n          if (angular.isUndefined(trueValue)) {\n            trueValue = true;\n          }\n          return trueValue;\n        };\n\n        /**\n         * Get a boolean value from a boolean-like string, evaluating it on the current scope.\n         * @param value The input object\n         * @returns {boolean} A boolean value\n         */\n        var getBooleanFromString = function(value) {\n          return scope.$eval(value) === true;\n        };\n\n        /**\n         * Get a boolean value from a boolean-like string, defaulting to true if undefined.\n         * @param value The input object\n         * @returns {boolean} A boolean value\n         */\n        var getBooleanFromStringDefTrue = function(value) {\n          return (value === true || value === 'true' || !value);\n        };\n\n        /**\n         * Returns the value if it is truthy, or undefined.\n         *\n         * @param value The value to check.\n         * @returns the original value if it is truthy, {@link undefined} otherwise.\n         */\n        var getValueOrUndefined = function (value) {\n          return (value ? value : undefined);\n        };\n\n        /**\n         * Returns a function that executes the provided expression\n         *\n         * @param value The string expression\n         * @return a function that evaluates the expression\n         */\n        var getExprFromString = function (value) {\n          if (angular.isUndefined(value)) {\n            return angular.noop;\n          }\n          return function () {\n            scope.$evalAsync(value);\n          };\n        };\n\n        /**\n         * Get the value of the angular-bound attribute, given its name.\n         * The returned value may or may not equal the attribute value, as it may be transformed by a function.\n         *\n         * @param attrName  The angular-bound attribute name to get the value for\n         * @returns {*}     The attribute value\n         */\n        var getSwitchAttrValue = function(attrName) {\n          var map = {\n            'switchRadioOff': getBooleanFromStringDefTrue,\n            'switchActive': function(value) {\n              return !getBooleanFromStringDefTrue(value);\n            },\n            'switchAnimate': getBooleanFromStringDefTrue,\n            'switchLabel': function(value) {\n              return value ? value : '&nbsp;';\n            },\n            'switchIcon': function(value) {\n              if (value) {\n                return '<span class=\\'' + value + '\\'></span>';\n              }\n            },\n            'switchWrapper': function(value) {\n              return value || 'wrapper';\n            },\n            'switchInverse': getBooleanFromString,\n            'switchReadonly': getBooleanFromString,\n            'switchChange': getExprFromString\n          };\n          var transFn = map[attrName] || getValueOrUndefined;\n          return transFn(attrs[attrName]);\n        };\n\n        /**\n         * Set a bootstrapSwitch parameter according to the angular-bound attribute.\n         * The parameter will be changed only if the switch has already been initialized\n         * (to avoid creating it before the model is ready).\n         *\n         * @param element   The switch to apply the parameter modification to\n         * @param attr      The name of the switch parameter\n         * @param modelAttr The name of the angular-bound parameter\n         */\n        var setSwitchParamMaybe = function(element, attr, modelAttr) {\n          if (!isInit) {\n            return;\n          }\n          var newValue = getSwitchAttrValue(modelAttr);\n          element.bootstrapSwitch(attr, newValue);\n        };\n\n        var setActive = function() {\n          setSwitchParamMaybe(element, 'disabled', 'switchActive');\n        };\n\n        /**\n         * If the directive has not been initialized yet, do so.\n         */\n        var initMaybe = function() {\n          // if it's the first initialization\n          if (!isInit) {\n            var viewValue = (controller.$modelValue === getTrueValue());\n            isInit = !isInit;\n            // Bootstrap the switch plugin\n            element.bootstrapSwitch({\n              radioAllOff: getSwitchAttrValue('switchRadioOff'),\n              disabled: getSwitchAttrValue('switchActive'),\n              state: viewValue,\n              onText: getSwitchAttrValue('switchOnText'),\n              offText: getSwitchAttrValue('switchOffText'),\n              onColor: getSwitchAttrValue('switchOnColor'),\n              offColor: getSwitchAttrValue('switchOffColor'),\n              animate: getSwitchAttrValue('switchAnimate'),\n              size: getSwitchAttrValue('switchSize'),\n              labelText: attrs.switchLabel ? getSwitchAttrValue('switchLabel') : getSwitchAttrValue('switchIcon'),\n              wrapperClass: getSwitchAttrValue('switchWrapper'),\n              handleWidth: getSwitchAttrValue('switchHandleWidth'),\n              labelWidth: getSwitchAttrValue('switchLabelWidth'),\n              inverse: getSwitchAttrValue('switchInverse'),\n              readonly: getSwitchAttrValue('switchReadonly')\n            });\n            if (attrs.type === 'radio') {\n              controller.$setViewValue(controller.$modelValue);\n            } else {\n              controller.$setViewValue(viewValue);\n            }\n          }\n        };\n\n        var switchChange = getSwitchAttrValue('switchChange');\n\n        /**\n         * Listen to model changes.\n         */\n        var listenToModel = function () {\n\n          attrs.$observe('switchActive', function (newValue) {\n\n            var active = getBooleanFromStringDefTrue(newValue);\n            // if we are disabling the switch, delay the deactivation so that the toggle can be switched\n            if (!active) {\n              $timeout(setActive);\n            } else {\n              // if we are enabling the switch, set active right away\n              setActive();\n            }\n          });\n\n          // When the model changes\n          controller.$render = function () {\n            initMaybe();\n            var newValue = controller.$modelValue;\n            if (newValue !== undefined && newValue !== null) {\n              element.bootstrapSwitch('state', newValue === getTrueValue(), true);\n            } else {\n              element.bootstrapSwitch('indeterminate', true, true);\n              controller.$setViewValue(undefined);\n            }\n            switchChange();\n          };\n\n          // angular attribute to switch property bindings\n          var bindings = {\n            'switchRadioOff': 'radioAllOff',\n            'switchOnText': 'onText',\n            'switchOffText': 'offText',\n            'switchOnColor': 'onColor',\n            'switchOffColor': 'offColor',\n            'switchAnimate': 'animate',\n            'switchSize': 'size',\n            'switchLabel': 'labelText',\n            'switchIcon': 'labelText',\n            'switchWrapper': 'wrapperClass',\n            'switchHandleWidth': 'handleWidth',\n            'switchLabelWidth': 'labelWidth',\n            'switchInverse': 'inverse',\n            'switchReadonly': 'readonly'\n          };\n\n          var observeProp = function(prop, bindings) {\n            return function() {\n              attrs.$observe(prop, function () {\n                setSwitchParamMaybe(element, bindings[prop], prop);\n              });\n            };\n          };\n\n          // for every angular-bound attribute, observe it and trigger the appropriate switch function\n          for (var prop in bindings) {\n            attrs.$observe(prop, observeProp(prop, bindings));\n          }\n        };\n\n        /**\n         * Listen to view changes.\n         */\n        var listenToView = function () {\n\n          if (attrs.type === 'radio') {\n            // when the switch is clicked\n            element.on('change.bootstrapSwitch', function (e) {\n              // discard not real change events\n              if ((controller.$modelValue === controller.$viewValue) && (e.target.checked !== $(e.target).bootstrapSwitch('state'))) {\n                // $setViewValue --> $viewValue --> $parsers --> $modelValue\n                // if the switch is indeed selected\n                if (e.target.checked) {\n                  // set its value into the view\n                  controller.$setViewValue(getTrueValue());\n                } else if (getTrueValue() === controller.$viewValue) {\n                  // otherwise if it's been deselected, delete the view value\n                  controller.$setViewValue(undefined);\n                }\n                switchChange();\n              }\n            });\n          } else {\n            // When the checkbox switch is clicked, set its value into the ngModel\n            element.on('switchChange.bootstrapSwitch', function (e) {\n              // $setViewValue --> $viewValue --> $parsers --> $modelValue\n              controller.$setViewValue(e.target.checked);\n              switchChange();\n            });\n          }\n        };\n\n        // Listen and respond to view changes\n        listenToView();\n\n        // Listen and respond to model changes\n        listenToModel();\n\n        // On destroy, collect ya garbage\n        scope.$on('$destroy', function () {\n          element.bootstrapSwitch('destroy');\n        });\n      }\n    };\n  }])\n  .directive('bsSwitch', function () {\n    return {\n      restrict: 'E',\n      require: 'ngModel',\n      template: '<input bs-switch>',\n      replace: true\n    };\n  });\n\n// Source: bsSwitch.suffix\n})();","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Phylocanvas\"] = factory();\n\telse\n\t\troot[\"Phylocanvas\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/dist/\";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.utils = exports.nodeRenderers = exports.treeTypes = exports.Parser = exports.Tooltip = exports.Prerenderer = exports.Branch = exports.Tree = undefined;\n\n\tvar _Tree = __webpack_require__(1);\n\n\tvar _Tree2 = _interopRequireDefault(_Tree);\n\n\tvar _Branch = __webpack_require__(7);\n\n\tvar _Branch2 = _interopRequireDefault(_Branch);\n\n\tvar _Prerenderer = __webpack_require__(11);\n\n\tvar _Prerenderer2 = _interopRequireDefault(_Prerenderer);\n\n\tvar _Tooltip = __webpack_require__(27);\n\n\tvar _Tooltip2 = _interopRequireDefault(_Tooltip);\n\n\tvar _Parser = __webpack_require__(29);\n\n\tvar _Parser2 = _interopRequireDefault(_Parser);\n\n\tvar _treeTypes = __webpack_require__(8);\n\n\tvar _treeTypes2 = _interopRequireDefault(_treeTypes);\n\n\tvar _nodeRenderers = __webpack_require__(26);\n\n\tvar _nodeRenderers2 = _interopRequireDefault(_nodeRenderers);\n\n\tvar _utils = __webpack_require__(2);\n\n\tvar utils = _interopRequireWildcard(_utils);\n\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n\tfunction decorate(object, fnName, fn) {\n\t  var target = object[fnName] ? object : object.prototype;\n\t  var originalFn = target[fnName];\n\n\t  target[fnName] = function () {\n\t    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t      args[_key] = arguments[_key];\n\t    }\n\n\t    return fn.call(this, originalFn, args);\n\t  };\n\t}\n\n\t/**\n\t * The publicly exported module. Exports the following methods by default, and\n\t * contains named exports of internal classes, types, and utils.\n\t *\n\t * @module Phylocanvas\n\t */\n\n\texports.Tree = _Tree2.default;\n\texports.Branch = _Branch2.default;\n\texports.Prerenderer = _Prerenderer2.default;\n\texports.Tooltip = _Tooltip2.default;\n\texports.Parser = _Parser2.default;\n\texports.treeTypes = _treeTypes2.default;\n\texports.nodeRenderers = _nodeRenderers2.default;\n\texports.utils = utils;\n\n\t/**\n\t * Register a plugin.\n\t *\n\t * @param {function} pluginFn - Imported plugin module.\n\t */\n\n\tfunction plugin(pluginFn) {\n\t  pluginFn.call(this, decorate);\n\t}\n\n\t/**\n\t * A factory function for Phylocanvas instances to enable decoration by plugins.\n\t *\n\t * @param {string|HTMLElement} element - ID or element within which to place Phylocanvas instance.\n\t * @param {Object} config - Configuration object, properties are copied into the {@link Tree} object.\n\t *\n\t * @return An instance of {@link Tree}.\n\t */\n\tfunction createTree(element) {\n\t  var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\t  return new _Tree2.default(element, config);\n\t}\n\n\texports.default = { plugin: plugin, createTree: createTree };\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n\tvar _utils = __webpack_require__(2);\n\n\tvar _Branch = __webpack_require__(7);\n\n\tvar _Branch2 = _interopRequireDefault(_Branch);\n\n\tvar _Tooltip = __webpack_require__(27);\n\n\tvar _treeTypes = __webpack_require__(8);\n\n\tvar _treeTypes2 = _interopRequireDefault(_treeTypes);\n\n\tvar _parsers = __webpack_require__(28);\n\n\tvar _parsers2 = _interopRequireDefault(_parsers);\n\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\tvar addClass = _utils.dom.addClass,\n\t    setCursorDrag = _utils.dom.setCursorDrag,\n\t    setCursorDragging = _utils.dom.setCursorDragging;\n\tvar fireEvent = _utils.events.fireEvent,\n\t    addEvent = _utils.events.addEvent,\n\t    removeEvent = _utils.events.removeEvent;\n\tvar getPixelRatio = _utils.canvas.getPixelRatio,\n\t    translateClick = _utils.canvas.translateClick;\n\tvar Predicates = _utils.constants.Predicates;\n\n\t/**\n\t * A Phylocanvas instance.\n\t *\n\t * @class\n\t * @see module:Phylocanvas~createTree\n\t */\n\n\tvar Tree = function () {\n\t  /**\n\t   * @constructor\n\t   * @param {string|HTMLElement} element\n\t   * @param {Object} config\n\t   */\n\t  function Tree(element) {\n\t    var _this = this;\n\n\t    var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\t    _classCallCheck(this, Tree);\n\n\t    this._point = { x: 0, y: 0 };\n\n\t    /**\n\t     * Places the instance in the DOM. Events are triggered from here.\n\t     *\n\t     * @type HTMLElement\n\t     */\n\t    this.containerElement = typeof element === 'string' ? document.getElementById(element) : element;\n\n\t    addClass(this.containerElement, 'pc-container');\n\n\t    /**\n\t     * Dictionary of {@link Branch} objects indexed by ID.\n\t     *\n\t     * @type {Object.<string, Branch>}\n\t     */\n\t    this.branches = {};\n\n\t    /**\n\t     * List of leaves.\n\t     *\n\t     * @type Array.<Branch>\n\t     */\n\t    this.leaves = [];\n\n\t    /**\n\t     * The root node of the tree\n\t     * (not neccesarily a root in the Phylogenetic sense)\n\t     *\n\t     * @type Branch\n\t     */\n\t    this.root = false;\n\n\t    /**\n\t     * Stores the unparsed tree.\n\t     *\n\t     * @type string\n\t     */\n\t    this.stringRepresentation = '';\n\n\t    /**\n\t     * Colour the branches of the tree based on the colour of the tips.\n\t     *\n\t     * @type boolean\n\t     */\n\t    this.backColour = false;\n\n\t    /**\n\t     * Stores the state of the tree after parsing.\n\t     *\n\t     * @type Object\n\t     */\n\t    this.originalTree = {};\n\n\t    // Set up the element and canvas\n\t    if (window.getComputedStyle(this.containerElement).position === 'static') {\n\t      this.containerElement.style.position = 'relative';\n\t    }\n\t    this.containerElement.style.boxSizing = 'border-box';\n\n\t    var canvasElement = document.createElement('canvas');\n\t    canvasElement.id = (this.containerElement.id || '') + '__canvas';\n\t    canvasElement.className = 'phylocanvas';\n\t    canvasElement.style.position = 'relative';\n\t    canvasElement.height = element.offsetHeight || 400;\n\t    canvasElement.width = element.offsetWidth || 400;\n\t    canvasElement.style.zIndex = '1';\n\t    this.containerElement.appendChild(canvasElement);\n\n\t    /**\n\t     * Canvas drawing context.\n\t     *\n\t     * @type CanvasRenderingContext2D\n\t     */\n\t    this.canvas = canvasElement.getContext('2d');\n\t    this.canvas.canvas.onselectstart = function () {\n\t      return false;\n\t    };\n\t    this.canvas.fillStyle = '#000000';\n\t    this.canvas.strokeStyle = '#000000';\n\t    this.canvas.save();\n\n\t    /**\n\t     * Colour for collapsed sections of the tree.\n\t     *\n\t     * @type string\n\t     */\n\t    this.collapsedColour = 'rgba(0, 0, 0, 0.5)';\n\n\t    /**\n\t     * A minimum and maximum number of child branches within which to\n\t     * automatically collapse branches on the first draw.\n\t     *\n\t     * @type object\n\t     * @property {number} min\n\t     * @property {number} max\n\t     */\n\t    this.defaultCollapsed = {};\n\n\t    /**\n\t     * The default tooltip showing number of child branches.\n\t     *\n\t     * @type Tooltip\n\t     */\n\t    this.tooltip = new _Tooltip.ChildNodesTooltip(this);\n\n\t    /**\n\t     * Has Tree been drawn already, true after first draw.\n\t     *\n\t     * @type boolean\n\t     */\n\t    this.drawn = false;\n\n\t    /**\n\t     * Stores highlighting functions used during drawing.\n\t     *\n\t     * @type Array.<Function>\n\t     */\n\t    this.highlighters = [];\n\n\t    /**\n\t     * The current level of zoom.\n\t     *\n\t     * @type number\n\t     */\n\t    this.zoom = 1;\n\n\t    /**\n\t     * Controls the speed of zooming. Recommended values are between 1 and 5.\n\t     *\n\t     * @type number\n\t     * @default\n\t     */\n\t    this.zoomFactor = 3;\n\n\t    /**\n\t     * @type boolean\n\t     * @default\n\t     */\n\t    this.disableZoom = false;\n\n\t    /**\n\t     * Force rectangular and hierarchical trees to use the canvas dimensions\n\t     * instead of the number of leaves for proportion at the prerender stage.\n\t     *\n\t     * @type boolean\n\t     */\n\t    this.fillCanvas = false;\n\n\t    /**\n\t     * Enable branch scaling.\n\t     *\n\t     * @type boolean\n\t     * @default\n\t     */\n\t    this.branchScaling = true;\n\n\t    /**\n\t     * The current branch scale.\n\t     *\n\t     * @type number\n\t     */\n\t    this.currentBranchScale = 1;\n\n\t    /**\n\t     * The ratio at which branches scale.\n\t     *\n\t     * @type number\n\t     */\n\t    this.branchScalingStep = 1.2;\n\n\t    /**\n\t     * Whether a click has been detected.\n\t     *\n\t     * @type boolean\n\t     */\n\t    this.pickedup = false;\n\n\t    /**\n\t     * Whether the user is dragging.\n\t     *\n\t     * @type boolean\n\t     */\n\t    this.dragging = false;\n\n\t    /**\n\t     * The starting x coordinate of a drag.\n\t     *\n\t     * @type number\n\t     */\n\t    this.startx = null;\n\t    /**\n\t     * The starting y coordinate of a drag.\n\t     *\n\t     * @type number\n\t     */\n\t    this.starty = null;\n\n\t    /**\n\t     * Factor with which to scale the radius of a leaf.\n\t     *\n\t     * @type number\n\t     * @default\n\t     */\n\t    this.baseNodeSize = 1;\n\n\t    /**\n\t     * Caches the offsetx when a click is detected.\n\t     *\n\t     * @type number\n\t     */\n\t    this.origx = null;\n\t    /**\n\t     * Caches the offsety when a click is detected.\n\t     *\n\t     * @type number\n\t     */\n\t    this.origy = null;\n\n\t    /**\n\t     * The x coordinate from which to begin drawing from.\n\t     *\n\t     * @type number\n\t     */\n\t    this.offsetx = this.canvas.canvas.width / 2;\n\t    /**\n\t     * The y coordinate from which to begin drawing from.\n\t     *\n\t     * @type number\n\t     */\n\t    this.offsety = this.canvas.canvas.height / 2;\n\n\t    /**\n\t     * The colour to apply to a selected branch.\n\t     *\n\t     * @type string\n\t     * @default\n\t     */\n\t    this.selectedColour = 'rgba(49,151,245,1)';\n\n\t    /**\n\t     * The colour to apply to a hihglighted branch.\n\t     *\n\t     * @type string\n\t     * @default\n\t     */\n\t    this.highlightColour = 'rgba(49,151,245,1)';\n\n\t    /**\n\t     * The line width of the halo on a highlighted branch.\n\t     *\n\t     * @type number\n\t     * @default\n\t     */\n\t    this.highlightWidth = 4;\n\n\t    /**\n\t     * Scale factor for the size of the the halo on a highlighted branch.\n\t     *\n\t     * @type number\n\t     * @default\n\t     */\n\t    this.highlightSize = 2;\n\n\t    /**\n\t     * Global branch colour,\n\t     *\n\t     * @type string\n\t     * @default\n\t     */\n\t    this.branchColour = 'rgba(0,0,0,1)';\n\n\t    /**\n\t     * Scale factor applied to branch lengths defined in the serialised\n\t     * representation of the tree.\n\t     *\n\t     * @type number\n\t     */\n\t    this.branchScalar = 1.0;\n\n\t    /**\n\t     * Space to add to bounds when fitting the tree to the canvas.\n\t     *\n\t     * @type number\n\t     * @default\n\t     */\n\t    this.padding = 50;\n\n\t    /**\n\t     * Space between a leaf and its label.\n\t     *\n\t     * @type number\n\t     * @default\n\t     */\n\t    this.labelPadding = 5;\n\n\t    /**\n\t     * Enable/disable shift-click multi-selection.\n\t     *\n\t     * @type boolean\n\t     * @default\n\t     */\n\t    this.multiSelect = true;\n\n\t    /**\n\t     * Flag to change on branch when clicked.\n\t     *\n\t     * @type string\n\t     * @default\n\t     */\n\t    this.clickFlag = 'selected';\n\n\t    /**\n\t     * Decide if a branch should be affected when clicked.\n\t     *\n\t     * @type function\n\t     *\n\t     * @param {Branch} branch\n\t     * @param {string} property\n\t     * @param {} value\n\t     *\n\t     * @return boolean\n\t     * @default A function returning true.\n\t     */\n\t    this.clickFlagPredicate = Predicates.tautology;\n\n\t    /**\n\t     * Show labels when hovering over node.\n\t     *\n\t     * @type boolean\n\t     * @default\n\t     */\n\t    this.hoverLabel = false;\n\n\t    /**\n\t     * @type boolean\n\t     * @default\n\t     */\n\t    this.internalNodesSelectable = true;\n\n\t    /**\n\t     * @type boolean\n\t     * @default\n\t     */\n\t    this.showLabels = true;\n\n\t    /**\n\t     * Global show/hide branch-length labels.\n\t     *\n\t     * @type boolean\n\t     * @default\n\t     */\n\t    this.showBranchLengthLabels = false;\n\t    /**\n\t     * Conditionally display branch-length labels when enabled.\n\t     *\n\t     * @type function\n\t     * @param {Branch} node\n\t     * @default\n\t     */\n\t    this.branchLengthLabelPredicate = Predicates.tautology;\n\n\t    /**\n\t     * @type boolean\n\t     * @default\n\t     */\n\t    this.showInternalNodeLabels = false;\n\n\t    /**\n\t     * Global style for internal labels on branches.\n\t     *\n\t     * @type object\n\t     * @property {string} colour\n\t     * @property {number} textSize\n\t     * @property {string} font\n\t     * @property {string} format - e.g. bold, italic\n\t     */\n\t    this.internalLabelStyle = {\n\t      colour: this.branchColour,\n\t      textSize: this.textSize,\n\t      font: this.font,\n\t      format: ''\n\t    };\n\n\t    this.setTreeType('radial');\n\n\t    /**\n\t     * Stores the length of the longest branch on the tree.\n\t     *\n\t     * @type number\n\t     */\n\t    this.maxBranchLength = 0;\n\n\t    /**\n\t     * The visible width of the branches.\n\t     *\n\t     * @type number\n\t     * @default\n\t     */\n\t    this.lineWidth = 1.0;\n\n\t    /**\n\t     * The size of the labels, scaled to the size of the tree on first draw.\n\t     *\n\t     * @type number\n\t     */\n\t    this.textSize = 7;\n\n\t    /**\n\t     * The font of the labels.\n\t     *\n\t     * @type string\n\t     */\n\t    this.font = 'sans-serif';\n\n\t    /**\n\t     * @type boolean\n\t     * @default\n\t     */\n\t    this.unselectOnClickAway = true;\n\n\t    /**\n\t     * X coordinate of node that is furthest from the root.\n\t     *\n\t     * @type number\n\t     */\n\t    this.farthestNodeFromRootX = 0;\n\t    /**\n\t     * Y coordinate of node that is furthest from the root.\n\t     *\n\t     * @type number\n\t     */\n\t    this.farthestNodeFromRootY = 0;\n\n\t    /**\n\t     * Require the 'shift' key to be depressed to allow dragging\n\t     */\n\t    this.shiftKeyDrag = false;\n\n\t    /**\n\t     * Maximum length of label for each tree type.\n\t     *\n\t     * @type Object.<string, number>\n\t     */\n\t    this.maxLabelLength = {};\n\n\t    // Override properties from config\n\t    Object.assign(this, config);\n\n\t    this.resizeToContainer();\n\n\t    /**\n\t     * Event listener cache.\n\t     *\n\t     * @type object\n\t     */\n\t    this.eventListeners = {};\n\n\t    /**\n\t     * Default event listeners. Listeners passed in `config.eventListeners` will\n\t     * overwrite the listener of the same type.\n\t     */\n\t    var eventListeners = Object.assign({\n\t      click: { listener: this.clicked.bind(this) },\n\t      mousedown: { listener: this.pickup.bind(this) },\n\t      mouseup: { listener: this.drop.bind(this) },\n\t      mouseout: { listener: this.drop.bind(this) },\n\t      mousemove: {\n\t        target: this.canvas.canvas,\n\t        listener: this.drag.bind(this)\n\t      },\n\t      mousewheel: {\n\t        target: this.canvas.canvas,\n\t        listener: this.scroll.bind(this)\n\t      },\n\t      DOMMouseScroll: {\n\t        target: this.canvas.canvas,\n\t        listener: this.scroll.bind(this)\n\t      },\n\t      resize: {\n\t        target: window,\n\t        listener: function listener() {\n\t          _this.resizeToContainer();\n\t          _this.draw();\n\t        }\n\t      }\n\t    }, config.eventListeners || {});\n\n\t    var _iteratorNormalCompletion = true;\n\t    var _didIteratorError = false;\n\t    var _iteratorError = undefined;\n\n\t    try {\n\t      for (var _iterator = Object.keys(eventListeners)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t        var event = _step.value;\n\t        var _eventListeners$event = eventListeners[event],\n\t            listener = _eventListeners$event.listener,\n\t            target = _eventListeners$event.target;\n\n\t        this.addListener(event, listener, target);\n\t      }\n\t    } catch (err) {\n\t      _didIteratorError = true;\n\t      _iteratorError = err;\n\t    } finally {\n\t      try {\n\t        if (!_iteratorNormalCompletion && _iterator.return) {\n\t          _iterator.return();\n\t        }\n\t      } finally {\n\t        if (_didIteratorError) {\n\t          throw _iteratorError;\n\t        }\n\t      }\n\t    }\n\t  }\n\n\t  /**\n\t   * Removes events defined in this.eventListeners. Useful for cleaning up.\n\t   */\n\n\n\t  _createClass(Tree, [{\n\t    key: 'removeEventListeners',\n\t    value: function removeEventListeners() {\n\t      var _iteratorNormalCompletion2 = true;\n\t      var _didIteratorError2 = false;\n\t      var _iteratorError2 = undefined;\n\n\t      try {\n\t        for (var _iterator2 = Object.keys(this.eventListeners)[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t          var event = _step2.value;\n\t          var _iteratorNormalCompletion3 = true;\n\t          var _didIteratorError3 = false;\n\t          var _iteratorError3 = undefined;\n\n\t          try {\n\t            for (var _iterator3 = this.eventListeners[event][Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n\t              var def = _step3.value;\n\t              var target = def.target,\n\t                  listener = def.listener;\n\n\t              removeEvent(target || this.containerElement, event, listener);\n\t            }\n\t          } catch (err) {\n\t            _didIteratorError3 = true;\n\t            _iteratorError3 = err;\n\t          } finally {\n\t            try {\n\t              if (!_iteratorNormalCompletion3 && _iterator3.return) {\n\t                _iterator3.return();\n\t              }\n\t            } finally {\n\t              if (_didIteratorError3) {\n\t                throw _iteratorError3;\n\t              }\n\t            }\n\t          }\n\t        }\n\t      } catch (err) {\n\t        _didIteratorError2 = true;\n\t        _iteratorError2 = err;\n\t      } finally {\n\t        try {\n\t          if (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t            _iterator2.return();\n\t          }\n\t        } finally {\n\t          if (_didIteratorError2) {\n\t            throw _iteratorError2;\n\t          }\n\t        }\n\t      }\n\t    }\n\n\t    /**\n\t     * Set/get if labels are currently aligned.\n\t     *\n\t     * @type boolean\n\t     */\n\n\t  }, {\n\t    key: 'setInitialCollapsedBranches',\n\n\n\t    /**\n\t     * Collapses branches based on {@link Tree#defaultCollapsed}.\n\t     *\n\t     * @param {Branch} [node=this.root]\n\t     */\n\t    value: function setInitialCollapsedBranches() {\n\t      var node = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.root;\n\n\t      var childIds;\n\t      var i;\n\n\t      childIds = node.getChildProperties('id');\n\t      if (childIds && childIds.length > this.defaultCollapsed.min && childIds.length < this.defaultCollapsed.max) {\n\t        node.collapsed = true;\n\t        return;\n\t      }\n\n\t      for (i = 0; i < node.children.length; i++) {\n\t        this.setInitialCollapsedBranches(node.children[i]);\n\t      }\n\t    }\n\n\t    /**\n\t     * @param {MouseEvent} event\n\t     * @returns {Branch}\n\t     */\n\n\t  }, {\n\t    key: 'getNodeAtMousePosition',\n\t    value: function getNodeAtMousePosition(event) {\n\t      var _root;\n\n\t      return (_root = this.root).clicked.apply(_root, _toConsumableArray(translateClick(event, this)));\n\t    }\n\n\t    /**\n\t     * @returns {Branch[]} Selected leaves\n\t     */\n\n\t  }, {\n\t    key: 'getSelectedNodeIds',\n\t    value: function getSelectedNodeIds() {\n\t      return this.getNodeIdsWithFlag('selected');\n\t    }\n\n\t    /**\n\t     * @param {string} flag - A boolean property of the branch\n\t     * @param {boolean} [value=true]\n\t     * @returns {Branch[]}\n\t     */\n\n\t  }, {\n\t    key: 'getNodeIdsWithFlag',\n\t    value: function getNodeIdsWithFlag(flag) {\n\t      var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n\t      return this.leaves.reduce(function (memo, leaf) {\n\t        if (leaf[flag] === value) {\n\t          memo.push(leaf.id);\n\t        }\n\t        return memo;\n\t      }, []);\n\t    }\n\n\t    /**\n\t     * Event listener for click events.\n\t     *\n\t     * @param {MouseEvent} e\n\t     */\n\n\t  }, {\n\t    key: 'clicked',\n\t    value: function clicked(e) {\n\t      var node;\n\t      if (e.button === 0) {\n\t        var nodeIds = [];\n\t        // if this is triggered by the release after a drag then the click\n\t        // shouldn't be triggered.\n\t        if (this.dragging) {\n\t          this.dragging = false;\n\t          return;\n\t        }\n\n\t        if (!this.root) return false;\n\t        node = this.getNodeAtMousePosition(e);\n\t        var isMultiSelectActive = this.multiSelect && (e.metaKey || e.ctrlKey);\n\t        if (node && node.interactive) {\n\t          if (isMultiSelectActive) {\n\t            if (node.leaf) {\n\t              node[this.clickFlag] = !node[this.clickFlag];\n\t            } else if (this.internalNodesSelectable) {\n\t              var someUnflagged = node.getChildProperties(this.clickFlag).some(function (prop) {\n\t                return prop === false;\n\t              });\n\t              node.cascadeFlag(this.clickFlag, someUnflagged, this.clickFlagPredicate);\n\t            }\n\t            nodeIds = this.getNodeIdsWithFlag(this.clickFlag);\n\t            this.draw();\n\t          } else {\n\t            this.root.cascadeFlag(this.clickFlag, false, this.clickFlagPredicate);\n\t            if (this.internalNodesSelectable || node.leaf) {\n\t              node.cascadeFlag(this.clickFlag, true, this.clickFlagPredicate);\n\t              nodeIds = node.getChildProperties('id');\n\t            }\n\t            this.draw();\n\t          }\n\t        } else if (this.unselectOnClickAway && !this.dragging && !isMultiSelectActive) {\n\t          this.root.cascadeFlag(this.clickFlag, false, this.clickFlagPredicate);\n\t          this.draw();\n\t        }\n\n\t        if (!this.pickedup) {\n\t          this.dragging = false;\n\t        }\n\n\t        this.nodesUpdated(nodeIds, this.clickFlag);\n\t      }\n\t    }\n\n\t    /**\n\t     * Handles dragging and hovering.\n\t     *\n\t     * @param {MouseEvent} event\n\t     */\n\n\t  }, {\n\t    key: 'drag',\n\t    value: function drag(event) {\n\t      // get window ratio\n\t      var ratio = getPixelRatio(this.canvas);\n\n\t      if (!this.drawn) return false;\n\n\t      if (this.pickedup) {\n\t        var xmove = (event.clientX - this.startx) * ratio;\n\t        var ymove = (event.clientY - this.starty) * ratio;\n\t        if (Math.abs(xmove) + Math.abs(ymove) > 5) {\n\t          this.dragging = true;\n\t          this.offsetx = this.origx + xmove;\n\t          this.offsety = this.origy + ymove;\n\t          this.draw();\n\t        }\n\t      } else {\n\t        // hover\n\t        var e = event;\n\t        var nd = this.getNodeAtMousePosition(e);\n\n\t        if (nd && nd.interactive && (this.internalNodesSelectable || nd.leaf)) {\n\t          this.root.cascadeFlag('hovered', false);\n\t          nd.hovered = true;\n\t          // For mouseover tooltip to show no. of children on the internal nodes\n\t          if (!nd.leaf && !nd.hasCollapsedAncestor()) {\n\t            this.tooltip.open(e.clientX, e.clientY, nd);\n\t          }\n\t          this.containerElement.style.cursor = 'pointer';\n\t        } else {\n\t          this.tooltip.close();\n\t          this.root.cascadeFlag('hovered', false);\n\t          if (this.shiftKeyDrag && e.shiftKey) {\n\t            setCursorDrag(this.containerElement);\n\t          } else {\n\t            this.containerElement.style.cursor = 'auto';\n\t          }\n\t        }\n\t        this.draw();\n\t      }\n\t    }\n\n\t    /**\n\t     * Draws the frame.\n\t     *\n\t     * @param {boolean} forceRedraw - Also run the prerenderer.\n\t     */\n\n\t  }, {\n\t    key: 'draw',\n\t    value: function draw(forceRedraw) {\n\t      this.highlighters.length = 0;\n\n\t      if (this.maxBranchLength === 0) {\n\t        this.loadError(new Error('All branches in the tree are identical.'));\n\t        return;\n\t      }\n\n\t      this.canvas.clearRect(0, 0, this.canvas.canvas.width, this.canvas.canvas.height);\n\t      this.canvas.lineCap = 'round';\n\t      this.canvas.lineJoin = 'round';\n\n\t      this.canvas.strokeStyle = this.branchColour;\n\t      this.canvas.save();\n\n\t      if (!this.drawn || forceRedraw) {\n\t        this.prerenderer.run(this);\n\t        if (!forceRedraw) {\n\t          this.fitInPanel();\n\t        }\n\t      }\n\t      var pixelRatio = getPixelRatio(this.canvas);\n\t      this.canvas.lineWidth = this.lineWidth / this.zoom;\n\t      this.canvas.translate(this.offsetx * pixelRatio, this.offsety * pixelRatio);\n\t      this.canvas.scale(this.zoom, this.zoom);\n\t      this.branchRenderer.render(this, this.root);\n\n\t      this.highlighters.forEach(function (render) {\n\t        return render();\n\t      });\n\n\t      this.drawn = true;\n\n\t      this.canvas.restore();\n\t    }\n\n\t    /**\n\t     * Mousedown event listener\n\t     *\n\t     * @param {MouseEvent} event\n\t     */\n\n\t  }, {\n\t    key: 'pickup',\n\t    value: function pickup(event) {\n\t      if (!this.shiftKeyDrag || event.shiftKey) {\n\t        if (!this.drawn) return false;\n\t        this.origx = this.offsetx;\n\t        this.origy = this.offsety;\n\n\t        if (event.button === 0) {\n\t          this.pickedup = true;\n\t          setCursorDragging(this.containerElement);\n\t        }\n\n\t        this.startx = event.clientX;\n\t        this.starty = event.clientY;\n\t      }\n\t    }\n\n\t    /**\n\t     * mouseup event listener.\n\t     */\n\n\t  }, {\n\t    key: 'drop',\n\t    value: function drop(event) {\n\t      if (!this.drawn) return false;\n\t      this.pickedup = false;\n\t      if (this.shiftKeyDrag && event.shiftKey) {\n\t        setCursorDrag(this.containerElement);\n\t      } else {\n\t        this.containerElement.style.cursor = 'auto';\n\t      }\n\t    }\n\n\t    /**\n\t     * Mousewheel event listener.\n\t     *\n\t     * @param event\n\t     */\n\n\t  }, {\n\t    key: 'scroll',\n\t    value: function scroll(event) {\n\t      if (this.disableZoom || 'wheelDelta' in event && event.wheelDelta === 0) {\n\t        return;\n\t      }\n\n\t      event.preventDefault();\n\n\t      this._point.x = event.offsetX;\n\t      this._point.y = event.offsetY;\n\t      var sign = event.detail < 0 || event.wheelDelta > 0 ? 1 : -1;\n\t      if (this.branchScaling && (event.metaKey || event.ctrlKey)) {\n\t        this.currentBranchScale *= Math.pow(this.branchScalingStep, sign);\n\t        this.setBranchScale(this.currentBranchScale, this._point);\n\t      } else {\n\t        this.smoothZoom(sign, this._point);\n\t      }\n\t    }\n\n\t    /**\n\t     * @param {RegExp} pattern\n\t     * @param {string} [searchProperty=id].\n\t     * @return {Branch[]}\n\t     */\n\n\t  }, {\n\t    key: 'findLeaves',\n\t    value: function findLeaves(pattern) {\n\t      var searchProperty = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'id';\n\n\t      var foundLeaves = [];\n\n\t      var _iteratorNormalCompletion4 = true;\n\t      var _didIteratorError4 = false;\n\t      var _iteratorError4 = undefined;\n\n\t      try {\n\t        for (var _iterator4 = this.leaves[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n\t          var leaf = _step4.value;\n\n\t          if (leaf[searchProperty] && leaf[searchProperty].match(pattern)) {\n\t            foundLeaves.push(leaf);\n\t          }\n\t        }\n\t      } catch (err) {\n\t        _didIteratorError4 = true;\n\t        _iteratorError4 = err;\n\t      } finally {\n\t        try {\n\t          if (!_iteratorNormalCompletion4 && _iterator4.return) {\n\t            _iterator4.return();\n\t          }\n\t        } finally {\n\t          if (_didIteratorError4) {\n\t            throw _iteratorError4;\n\t          }\n\t        }\n\t      }\n\n\t      return foundLeaves;\n\t    }\n\n\t    /**\n\t     * @param {Branch[]} leaves\n\t     * @param {string} property\n\t     * @param {} value\n\t     *\n\t     * @fires Tree#updated\n\t     */\n\n\t  }, {\n\t    key: 'updateLeaves',\n\t    value: function updateLeaves(leaves, property, value) {\n\t      var _iteratorNormalCompletion5 = true;\n\t      var _didIteratorError5 = false;\n\t      var _iteratorError5 = undefined;\n\n\t      try {\n\t        for (var _iterator5 = this.leaves[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n\t          var leaf = _step5.value;\n\n\t          leaf[property] = !value;\n\t        }\n\t      } catch (err) {\n\t        _didIteratorError5 = true;\n\t        _iteratorError5 = err;\n\t      } finally {\n\t        try {\n\t          if (!_iteratorNormalCompletion5 && _iterator5.return) {\n\t            _iterator5.return();\n\t          }\n\t        } finally {\n\t          if (_didIteratorError5) {\n\t            throw _iteratorError5;\n\t          }\n\t        }\n\t      }\n\n\t      var _iteratorNormalCompletion6 = true;\n\t      var _didIteratorError6 = false;\n\t      var _iteratorError6 = undefined;\n\n\t      try {\n\t        for (var _iterator6 = leaves[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n\t          var _leaf = _step6.value;\n\n\t          _leaf[property] = value;\n\t        }\n\t      } catch (err) {\n\t        _didIteratorError6 = true;\n\t        _iteratorError6 = err;\n\t      } finally {\n\t        try {\n\t          if (!_iteratorNormalCompletion6 && _iterator6.return) {\n\t            _iterator6.return();\n\t          }\n\t        } finally {\n\t          if (_didIteratorError6) {\n\t            throw _iteratorError6;\n\t          }\n\t        }\n\t      }\n\n\t      this.nodesUpdated(leaves.map(function (_) {\n\t        return _.id;\n\t      }), property);\n\t    }\n\n\t    /**\n\t     * Deselects all branches, implicitly calls {@link Tree#draw}.\n\t     */\n\n\t  }, {\n\t    key: 'clearSelect',\n\t    value: function clearSelect() {\n\t      this.root.cascadeFlag('selected', false);\n\t      this.draw();\n\t    }\n\n\t    /**\n\t     * @returns {string} Base64-encoded data uri of canvas\n\t     */\n\n\t  }, {\n\t    key: 'getPngUrl',\n\t    value: function getPngUrl() {\n\t      return this.canvas.canvas.toDataURL();\n\t    }\n\n\t    /**\n\t     * Loads a serialised representation of a tree, using the first registered\n\t     * parser that validates the input unless a format is specified.\n\t     *\n\t     * @param {string} inputString\n\t     * @param {Object} [options] - also passed on to the parser.\n\t     * @param {string} [options.format] - specify the parser to use.\n\t     * @param {function} [callback] - Called synchronously *after* the first draw.\n\t     *\n\t     * @fires Tree#error\n\t     *\n\t     * @see Tree#build\n\t     */\n\n\t  }, {\n\t    key: 'load',\n\t    value: function load(inputString) {\n\t      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t      var callback = arguments[2];\n\n\t      var buildOptions = options;\n\t      var buildCallback = callback;\n\n\t      // allows passing callback as second param\n\t      if (typeof options === 'function') {\n\t        buildCallback = options;\n\t        buildOptions = {};\n\t      }\n\n\t      if (buildCallback) {\n\t        buildOptions.callback = buildCallback;\n\t      }\n\n\t      if (buildOptions.format) {\n\t        this.build(inputString, _parsers2.default[buildOptions.format], buildOptions);\n\t        return;\n\t      }\n\n\t      var _iteratorNormalCompletion7 = true;\n\t      var _didIteratorError7 = false;\n\t      var _iteratorError7 = undefined;\n\n\t      try {\n\t        for (var _iterator7 = Object.keys(_parsers2.default)[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n\t          var parserName = _step7.value;\n\n\t          var parser = _parsers2.default[parserName];\n\n\t          if (inputString.match(parser.fileExtension) || inputString.match(parser.validator)) {\n\t            this.build(inputString, parser, buildOptions);\n\t            return;\n\t          }\n\t        }\n\t      } catch (err) {\n\t        _didIteratorError7 = true;\n\t        _iteratorError7 = err;\n\t      } finally {\n\t        try {\n\t          if (!_iteratorNormalCompletion7 && _iterator7.return) {\n\t            _iterator7.return();\n\t          }\n\t        } finally {\n\t          if (_didIteratorError7) {\n\t            throw _iteratorError7;\n\t          }\n\t        }\n\t      }\n\n\t      var error = new Error('String not recognised as a file or a parseable format string');\n\t      if (buildCallback) {\n\t        buildCallback(error);\n\t      }\n\t      this.loadError(error);\n\t    }\n\n\t    /**\n\t     * Builds the {@link Tree#originalTree} object.\n\t     */\n\n\t  }, {\n\t    key: 'saveOriginalTree',\n\t    value: function saveOriginalTree() {\n\t      this.originalTree.branches = this.branches;\n\t      this.originalTree.leaves = this.leaves;\n\t      this.originalTree.root = this.root;\n\t      this.originalTree.branchLengths = {};\n\t      this.originalTree.parents = {};\n\t    }\n\n\t    /**\n\t     * Clears the branches and leaves of the instance.\n\t     */\n\n\t  }, {\n\t    key: 'clearState',\n\t    value: function clearState() {\n\t      this.root = false;\n\t      this.leaves = [];\n\t      this.branches = {};\n\t      this.drawn = false;\n\t    }\n\n\t    /**\n\t     * Build {@link Tree#branches} and {@link Tree#leaves} properties.\n\t     */\n\n\t  }, {\n\t    key: 'extractNestedBranches',\n\t    value: function extractNestedBranches() {\n\t      this.branches = {};\n\t      this.leaves = [];\n\n\t      this.storeNode(this.root);\n\t      this.root.extractChildren();\n\t    }\n\n\t    /**\n\t     * High-level API to organising branches and leaves.\n\t     *\n\t     * @fires Tree#error\n\t     */\n\n\t  }, {\n\t    key: 'saveState',\n\t    value: function saveState() {\n\t      this.extractNestedBranches();\n\n\t      this.root.branchLength = 0;\n\t      this.maxBranchLength = 0;\n\t      this.root.setTotalLength();\n\n\t      if (this.maxBranchLength === 0) {\n\t        this.loadError(new Error('All branches in the tree are identical.'));\n\t        return;\n\t      }\n\t    }\n\n\t    /**\n\t     * Builds the object model of a tree.\n\t     *\n\t     * @param {string} formatString\n\t     * @param {Parser} parser\n\t     * @param {Object} options\n\t     *\n\t     * @fires Tree#error\n\t     * @fires Tree#beforeFirstDraw\n\t     * @fires Tree#loadCompleted\n\t     */\n\n\t  }, {\n\t    key: 'build',\n\t    value: function build(formatString, parser, options) {\n\t      var _this2 = this;\n\n\t      this.originalTree = {};\n\t      this.clearState();\n\t      _Branch2.default.lastId = 0;\n\n\t      var root = new _Branch2.default();\n\t      root.id = 'root';\n\t      this.branches.root = root;\n\t      this.setRoot(root);\n\n\t      parser.parse({ formatString: formatString, root: root, options: options }, function (error) {\n\t        if (error) {\n\t          if (options.callback) {\n\t            options.callback(error);\n\t          }\n\t          _this2.loadError(error);\n\t          return;\n\t        }\n\t        _this2.stringRepresentation = formatString;\n\t        _this2.saveState();\n\t        _this2.setInitialCollapsedBranches();\n\t        _this2.beforeFirstDraw();\n\t        _this2.draw();\n\t        _this2.saveOriginalTree();\n\t        if (options.callback) {\n\t          options.callback();\n\t        }\n\n\t        _this2.loadCompleted();\n\t      });\n\t    }\n\n\t    /**\n\t     * Draw a subtree.\n\t     *\n\t     * @param {Branch} node - the new root of the tree.\n\t     *\n\t     * @fires Tree#subtree\n\t     */\n\n\t  }, {\n\t    key: 'redrawFromBranch',\n\t    value: function redrawFromBranch(node) {\n\t      this.clearState();\n\t      this.resetTree();\n\n\t      this.originalTree.branchLengths[node.id] = node.branchLength;\n\t      this.originalTree.parents[node.id] = node.parent;\n\n\t      this.root = node;\n\t      this.root.parent = false;\n\n\t      this.saveState();\n\n\t      this.draw();\n\t      this.subtreeDrawn(node.id);\n\t    }\n\n\t    /**\n\t     * Reload the serialised version of the tree.\n\t     */\n\n\t  }, {\n\t    key: 'redrawOriginalTree',\n\t    value: function redrawOriginalTree() {\n\t      this.load(this.stringRepresentation);\n\t    }\n\n\t    /**\n\t     * Traverse the tree, generating ids and filing away objects.\n\t     *\n\t     * @param {Branch} node - starting point.\n\t     */\n\n\t  }, {\n\t    key: 'storeNode',\n\t    value: function storeNode(node) {\n\t      if (!node.id || node.id === '') {\n\t        node.id = _Branch2.default.generateId();\n\t      }\n\n\t      if (this.branches[node.id]) {\n\t        if (node !== this.branches[node.id]) {\n\t          if (!node.leaf) {\n\t            node.id = _Branch2.default.generateId();\n\t          } else {\n\t            throw new Error('Two nodes on this tree share the id ' + node.id);\n\t          }\n\t        }\n\t      }\n\n\t      this.branches[node.id] = node;\n\n\t      if (node.leaf) {\n\t        this.leaves.push(node);\n\t      }\n\t    }\n\n\t    /**\n\t     * @param {number} size\n\t     */\n\n\t  }, {\n\t    key: 'setNodeSize',\n\t    value: function setNodeSize(size) {\n\t      this.baseNodeSize = Number(size);\n\t      this.draw();\n\t    }\n\n\t    /**\n\t     * @param {Branch} node\n\t     */\n\n\t  }, {\n\t    key: 'setRoot',\n\t    value: function setRoot(node) {\n\t      node.tree = this;\n\t      this.root = node;\n\t    }\n\n\t    /**\n\t     * @param {number|string} size\n\t     */\n\n\t  }, {\n\t    key: 'setTextSize',\n\t    value: function setTextSize(size) {\n\t      this.textSize = Number(size);\n\t      this.draw();\n\t    }\n\n\t    /**\n\t     * Sets an appropriate font size for the proportions of the tree.\n\t     *\n\t     * @param {number} ystep - the space between leaves.\n\t     */\n\n\t  }, {\n\t    key: 'setFontSize',\n\t    value: function setFontSize(ystep) {\n\t      this.textSize = this.calculateFontSize ? this.calculateFontSize(ystep) : Math.min(ystep / 2, 15);\n\t      this.canvas.font = this.textSize + 'pt ' + this.font;\n\t    }\n\n\t    /**\n\t     * @param {string} type - The name of a registered tree type.\n\t     * @param {boolean} [quiet] - Do not broadcast.\n\t     *\n\t     * @fires Tree#typechanged\n\t     */\n\n\t  }, {\n\t    key: 'setTreeType',\n\t    value: function setTreeType(type, quiet) {\n\t      if (!(type in _treeTypes2.default)) {\n\t        return fireEvent(this.containerElement, 'error', { error: new Error('\"' + type + '\" is not a known tree-type.') });\n\t      }\n\n\t      var oldType = this.treeType;\n\t      this.treeType = type;\n\t      this.type = _treeTypes2.default[type];\n\n\t      this.branchRenderer = _treeTypes2.default[type].branchRenderer;\n\t      this.prerenderer = _treeTypes2.default[type].prerenderer;\n\t      this.labelAlign = _treeTypes2.default[type].labelAlign;\n\t      this.calculateFontSize = _treeTypes2.default[type].calculateFontSize;\n\n\t      if (this.drawn) {\n\t        this.drawn = false;\n\t        this.draw();\n\t      }\n\n\t      if (!quiet) {\n\t        this.treeTypeChanged(oldType, type);\n\t      }\n\t    }\n\n\t    /**\n\t     * Resizes the canvas element.\n\t     *\n\t     * @param {number} width\n\t     * @param {number} height\n\t     */\n\n\t  }, {\n\t    key: 'setSize',\n\t    value: function setSize(width, height) {\n\t      this.canvas.canvas.width = width;\n\t      this.canvas.canvas.height = height;\n\t      if (this.navigator) {\n\t        this.navigator.resize();\n\t      }\n\t      this.adjustForPixelRatio();\n\t    }\n\n\t    /**\n\t     * Scale the size of the canvas element to the pixel ratio\n\t     */\n\n\t  }, {\n\t    key: 'adjustForPixelRatio',\n\t    value: function adjustForPixelRatio() {\n\t      var ratio = getPixelRatio(this.canvas);\n\n\t      this.canvas.canvas.style.height = this.canvas.canvas.height + 'px';\n\t      this.canvas.canvas.style.width = this.canvas.canvas.width + 'px';\n\n\t      if (ratio > 1) {\n\t        this.canvas.canvas.width *= ratio;\n\t        this.canvas.canvas.height *= ratio;\n\t      }\n\t    }\n\n\t    /**\n\t     * @returns {{ x: number, y: number }} point w/ x and y coordinates\n\t     */\n\n\t  }, {\n\t    key: 'getCentrePoint',\n\t    value: function getCentrePoint() {\n\t      var pixelRatio = getPixelRatio(this.canvas);\n\t      return {\n\t        x: this.canvas.canvas.width / 2 / pixelRatio,\n\t        y: this.canvas.canvas.height / 2 / pixelRatio\n\t      };\n\t    }\n\n\t    /**\n\t     * Zoom to a specific level over a specific point.\n\t     *\n\t     * @param {number} zoom\n\t     * @param {{ x: number, y: number }} [point=Tree#getCentrePoint]\n\t     */\n\n\t  }, {\n\t    key: 'setZoom',\n\t    value: function setZoom(zoom) {\n\t      var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.getCentrePoint(),\n\t          x = _ref.x,\n\t          y = _ref.y;\n\n\t      if (zoom > 0) {\n\t        var oldZoom = this.zoom;\n\t        this.zoom = zoom;\n\t        this.offsetx = this.calculateZoomedOffset(this.offsetx, x, oldZoom, zoom);\n\t        this.offsety = this.calculateZoomedOffset(this.offsety, y, oldZoom, zoom);\n\t        this.draw();\n\t      }\n\t    }\n\n\t    /**\n\t     * Zoom in or out from the current zoom level towards a point.\n\t     *\n\t     * @param {number} steps - positive to zoom in, negative to zoom out.\n\t     * @param {{ x: number, y: number }} point\n\t     */\n\n\t  }, {\n\t    key: 'smoothZoom',\n\t    value: function smoothZoom(steps, point) {\n\t      this.setZoom(Math.pow(10, Math.log(this.zoom) / Math.log(10) + steps * this.zoomFactor * 0.01), point);\n\t    }\n\n\t    /**\n\t     * Magic to enable zooming to a point.\n\t     *\n\t     * @author Khalil Abudahab\n\t     * @param {number} offset\n\t     * @param {number} coord\n\t     * @param {number} oldZoom\n\t     * @param {number} newZoom\n\t     */\n\n\t  }, {\n\t    key: 'calculateZoomedOffset',\n\t    value: function calculateZoomedOffset(offset, coord, oldZoom, newZoom) {\n\t      return -1 * ((-1 * offset + coord) / oldZoom * newZoom - coord);\n\t    }\n\n\t    /**\n\t     * Scale branches horizontally\n\t     *\n\t     * @param {number} scale\n\t     * @param {Object} point\n\t     */\n\n\t  }, {\n\t    key: 'setBranchScale',\n\t    value: function setBranchScale() {\n\t      var scale = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n\t      var point = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : { x: this.canvas.canvas.width / 2, y: this.canvas.canvas.height / 2 };\n\n\t      var treeType = _treeTypes2.default[this.treeType];\n\t      if (!treeType.branchScalingAxis || scale < 0) {\n\t        return;\n\t      }\n\n\t      var previoudBranchLength = this.branchScalar;\n\t      this.branchScalar = this.initialBranchScalar * scale;\n\t      var scaleRatio = this.branchScalar / previoudBranchLength;\n\t      var offset = this['offset' + treeType.branchScalingAxis];\n\t      var oldPosition = point[treeType.branchScalingAxis];\n\t      var newPosition = (point[treeType.branchScalingAxis] - offset) * scaleRatio + offset;\n\t      this['offset' + treeType.branchScalingAxis] += oldPosition - newPosition;\n\t      this.draw();\n\t    }\n\n\t    /**\n\t     * @method\n\t     */\n\n\t  }, {\n\t    key: 'toggleLabels',\n\t    value: function toggleLabels() {\n\t      this.showLabels = !this.showLabels;\n\t      this.draw();\n\t    }\n\n\t    /**\n\t     * @method\n\t     */\n\n\t  }, {\n\t    key: 'setMaxLabelLength',\n\t    value: function setMaxLabelLength() {\n\t      var dimensions;\n\t      if (this.maxLabelLength[this.treeType] === undefined) {\n\t        this.maxLabelLength[this.treeType] = 0;\n\t      }\n\n\t      for (var i = 0; i < this.leaves.length; i++) {\n\t        dimensions = this.canvas.measureText(this.leaves[i].id);\n\t        // finding the maximum label length\n\t        if (dimensions.width > this.maxLabelLength[this.treeType]) {\n\t          this.maxLabelLength[this.treeType] = dimensions.width;\n\t        }\n\t      }\n\t    }\n\n\t    /**\n\t     * @event Tree#loading\n\t     */\n\n\t  }, {\n\t    key: 'loadStarted',\n\t    value: function loadStarted() {\n\t      fireEvent(this.containerElement, 'loading');\n\t    }\n\n\t    /**\n\t     * @event Tree#beforeFirstDraw\n\t     */\n\n\t  }, {\n\t    key: 'beforeFirstDraw',\n\t    value: function beforeFirstDraw() {\n\t      fireEvent(this.containerElement, 'beforeFirstDraw');\n\t    }\n\n\t    /**\n\t     * @event Tree#loaded\n\t     */\n\n\t  }, {\n\t    key: 'loadCompleted',\n\t    value: function loadCompleted() {\n\t      fireEvent(this.containerElement, 'loaded');\n\t    }\n\n\t    /**\n\t     * @event Tree#error\n\t     * @property {Error} error\n\t     */\n\n\t  }, {\n\t    key: 'loadError',\n\t    value: function loadError(error) {\n\t      fireEvent(this.containerElement, 'error', { error: error });\n\t    }\n\n\t    /**\n\t     * @event Tree#subtree\n\t     * @property {Branch} node\n\t     */\n\n\t  }, {\n\t    key: 'subtreeDrawn',\n\t    value: function subtreeDrawn(node) {\n\t      fireEvent(this.containerElement, 'subtree', { node: node });\n\t    }\n\n\t    /**\n\t     * @event Tree#updated\n\t     * @property {string[]} nodeIds\n\t     * @property {string} property\n\t     * @property {boolean} append\n\t     */\n\n\t  }, {\n\t    key: 'nodesUpdated',\n\t    value: function nodesUpdated(nodeIds, property) {\n\t      var append = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n\t      fireEvent(this.containerElement, 'updated', { nodeIds: nodeIds, property: property, append: append });\n\t    }\n\n\t    /**\n\t     * @event Tree#typechanged\n\t     * @property {string} oldType\n\t     * @property {string} newType\n\t     */\n\n\t  }, {\n\t    key: 'treeTypeChanged',\n\t    value: function treeTypeChanged(oldType, newType) {\n\t      fireEvent(this.containerElement, 'typechanged', { oldType: oldType, newType: newType });\n\t    }\n\n\t    /**\n\t     * @param {string}\n\t     * @param {function}\n\t     */\n\n\t  }, {\n\t    key: 'addListener',\n\t    value: function addListener(event, listener, target) {\n\t      if (!this.eventListeners[event]) this.eventListeners[event] = [];\n\t      this.eventListeners[event].push({ listener: listener, target: target });\n\t      addEvent(target || this.containerElement, event, listener);\n\t    }\n\n\t    /**\n\t     * @param {string}\n\t     * @param {function}\n\t     */\n\n\t  }, {\n\t    key: 'removeListener',\n\t    value: function removeListener(event, listener, target) {\n\t      removeEvent(target || this.containerElement, event, listener);\n\t    }\n\n\t    /**\n\t     * @param {Array.<Branch>} [leaves=this.leaves]\n\t     *\n\t     * @returns {Array.<Array.<number>>} bounds - Minimum x and y coordinates in\n\t     * the first array, maximum x and y coordinates in the second.\n\t     *\n\t     * @example const [ [ minx, miny ], [ maxx, maxy ] ] = tree.getBounds()\n\t     */\n\n\t  }, {\n\t    key: 'getBounds',\n\t    value: function getBounds() {\n\t      var leaves = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.leaves;\n\n\t      // this.leaves assumes bounds of whole tree, start from root\n\t      var initialBounds = leaves === this.leaves ? this.root : leaves[0];\n\t      var minx = initialBounds.startx;\n\t      var maxx = initialBounds.startx;\n\t      var miny = initialBounds.starty;\n\t      var maxy = initialBounds.starty;\n\n\t      var _iteratorNormalCompletion8 = true;\n\t      var _didIteratorError8 = false;\n\t      var _iteratorError8 = undefined;\n\n\t      try {\n\t        for (var _iterator8 = leaves[Symbol.iterator](), _step8; !(_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done); _iteratorNormalCompletion8 = true) {\n\t          var leaf = _step8.value;\n\n\t          var bounds = leaf.getBounds();\n\t          minx = Math.min(minx, bounds.minx);\n\t          maxx = Math.max(maxx, bounds.maxx);\n\t          miny = Math.min(miny, bounds.miny);\n\t          maxy = Math.max(maxy, bounds.maxy);\n\t        }\n\t      } catch (err) {\n\t        _didIteratorError8 = true;\n\t        _iteratorError8 = err;\n\t      } finally {\n\t        try {\n\t          if (!_iteratorNormalCompletion8 && _iterator8.return) {\n\t            _iterator8.return();\n\t          }\n\t        } finally {\n\t          if (_didIteratorError8) {\n\t            throw _iteratorError8;\n\t          }\n\t        }\n\t      }\n\n\t      return [[minx, miny], [maxx, maxy]];\n\t    }\n\n\t    /**\n\t     * Zoom to the provided leaves.\n\t     *\n\t     * @param {Array.<Branch>}\n\t     */\n\n\t  }, {\n\t    key: 'fitInPanel',\n\t    value: function fitInPanel(leaves) {\n\t      this.zoom = 1; // calculates consistent bounds\n\t      var bounds = this.getBounds(leaves);\n\t      var canvasSize = [this.canvas.canvas.width - this.padding * 2, this.canvas.canvas.height - this.padding * 2];\n\t      var treeSize = [bounds[1][0] - bounds[0][0], bounds[1][1] - bounds[0][1]];\n\t      var pixelRatio = getPixelRatio(this.canvas);\n\t      var xZoomRatio = canvasSize[0] / treeSize[0];\n\t      var yZoomRatio = canvasSize[1] / treeSize[1];\n\t      this.zoom = Math.min(xZoomRatio, yZoomRatio);\n\t      this.offsetx = -1 * bounds[0][0] * this.zoom;\n\t      this.offsety = -1 * bounds[0][1] * this.zoom;\n\t      if (xZoomRatio > yZoomRatio) {\n\t        this.offsetx += this.padding + (canvasSize[0] - treeSize[0] * this.zoom) / 2;\n\t        this.offsety += this.padding;\n\t      } else {\n\t        this.offsetx += this.padding;\n\t        this.offsety += this.padding + (canvasSize[1] - treeSize[1] * this.zoom) / 2;\n\t      }\n\t      this.offsetx = this.offsetx / pixelRatio;\n\t      this.offsety = this.offsety / pixelRatio;\n\t    }\n\n\t    /**\n\t     * Reapply data in {@link Tree#originalTree}.\n\t     */\n\n\t  }, {\n\t    key: 'resetTree',\n\t    value: function resetTree() {\n\t      if (!this.originalTree.branches) return;\n\n\t      this.branches = this.originalTree.branches;\n\t      var _iteratorNormalCompletion9 = true;\n\t      var _didIteratorError9 = false;\n\t      var _iteratorError9 = undefined;\n\n\t      try {\n\t        for (var _iterator9 = Object.keys(this.originalTree.branchLengths)[Symbol.iterator](), _step9; !(_iteratorNormalCompletion9 = (_step9 = _iterator9.next()).done); _iteratorNormalCompletion9 = true) {\n\t          var n = _step9.value;\n\n\t          this.branches[n].branchLength = this.originalTree.branchLengths[n];\n\t          this.branches[n].parent = this.originalTree.parents[n];\n\t        }\n\t      } catch (err) {\n\t        _didIteratorError9 = true;\n\t        _iteratorError9 = err;\n\t      } finally {\n\t        try {\n\t          if (!_iteratorNormalCompletion9 && _iterator9.return) {\n\t            _iterator9.return();\n\t          }\n\t        } finally {\n\t          if (_didIteratorError9) {\n\t            throw _iteratorError9;\n\t          }\n\t        }\n\t      }\n\n\t      this.leaves = this.originalTree.leaves;\n\t      this.root = this.originalTree.root;\n\t    }\n\n\t    /**\n\t     * @param {Branch}\n\t     */\n\n\t  }, {\n\t    key: 'rotateBranch',\n\t    value: function rotateBranch(branch) {\n\t      this.branches[branch.id].rotate();\n\t    }\n\n\t    /**\n\t     * @returns {string} Newick representation of current object model.\n\t     */\n\n\t  }, {\n\t    key: 'exportNwk',\n\t    value: function exportNwk() {\n\t      var nwk = this.root.getNwk();\n\t      return nwk.substr(0, nwk.lastIndexOf(')') + 1) + ';';\n\t    }\n\n\t    /**\n\t     * Resize canvas element to container.\n\t     */\n\n\t  }, {\n\t    key: 'resizeToContainer',\n\t    value: function resizeToContainer() {\n\t      this.setSize(this.containerElement.offsetWidth, this.containerElement.offsetHeight);\n\t    }\n\n\t    /**\n\t     * Removes tracked event listeners and provides a hook for plugins to clean up\n\t     * after themselves.\n\t     */\n\n\t  }, {\n\t    key: 'cleanup',\n\t    value: function cleanup() {\n\t      this.removeEventListeners();\n\t    }\n\t  }, {\n\t    key: 'alignLabels',\n\t    get: function get() {\n\t      return this.showLabels && this.labelAlign && this.labelAlignEnabled;\n\t    },\n\t    set: function set(value) {\n\t      this.labelAlignEnabled = value;\n\t    }\n\t  }]);\n\n\t  return Tree;\n\t}();\n\n\t/**\n\t * @memberof Tree\n\t * @method\n\t * @see Tree#addListener\n\t */\n\n\n\tTree.prototype.on = Tree.prototype.addListener;\n\n\t/**\n\t * @memberof Tree\n\t * @method\n\t * @see Tree#removeListener\n\t */\n\tTree.prototype.off = Tree.prototype.removeListener;\n\n\texports.default = Tree;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.events = exports.dom = exports.constants = exports.canvas = undefined;\n\n\tvar _canvas2 = __webpack_require__(3);\n\n\tvar _canvas = _interopRequireWildcard(_canvas2);\n\n\tvar _constants2 = __webpack_require__(6);\n\n\tvar _constants = _interopRequireWildcard(_constants2);\n\n\tvar _dom2 = __webpack_require__(4);\n\n\tvar _dom = _interopRequireWildcard(_dom2);\n\n\tvar _events2 = __webpack_require__(5);\n\n\tvar _events = _interopRequireWildcard(_events2);\n\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n\texports.canvas = _canvas;\n\texports.constants = _constants;\n\texports.dom = _dom;\n\texports.events = _events;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.getBackingStorePixelRatio = getBackingStorePixelRatio;\n\texports.getPixelRatio = getPixelRatio;\n\texports.translateClick = translateClick;\n\texports.translatePoint = translatePoint;\n\texports.undoPointTranslation = undoPointTranslation;\n\n\tvar _dom = __webpack_require__(4);\n\n\t/**\n\t * Return backing store pixel ratio of context.\n\t *\n\t * @param context - The rendering context of HTMl5 canvas.\n\t *\n\t */\n\tfunction getBackingStorePixelRatio(context) {\n\t  return context.backingStorePixelRatio || context.webkitBackingStorePixelRatio || context.mozBackingStorePixelRatio || context.msBackingStorePixelRatio || context.oBackingStorePixelRatio || 1;\n\t}\n\n\tfunction getPixelRatio(canvas) {\n\t  return (window.devicePixelRatio || 1) / getBackingStorePixelRatio(canvas);\n\t}\n\n\tfunction translateClick(event, tree) {\n\t  var pixelRatio = getPixelRatio(tree.canvas);\n\t  return [(event.offsetX - tree.offsetx) / tree.zoom * pixelRatio, (event.offsetY - tree.offsety) / tree.zoom * pixelRatio];\n\t}\n\n\tfunction translatePoint() {\n\t  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : { x: 0, y: 0 },\n\t      x = _ref.x,\n\t      y = _ref.y;\n\n\t  var phylocanvas = arguments[1];\n\n\t  var pixelRatio = getPixelRatio(phylocanvas.canvas);\n\t  return {\n\t    x: (x - phylocanvas.offsetx) / phylocanvas.zoom * pixelRatio,\n\t    y: (y - phylocanvas.offsety) / phylocanvas.zoom * pixelRatio\n\t  };\n\t}\n\n\tfunction undoPointTranslation() {\n\t  var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : { x: 0, y: 0 },\n\t      x = _ref2.x,\n\t      y = _ref2.y;\n\n\t  var phylocanvas = arguments[1];\n\n\t  var pixelRatio = getPixelRatio(phylocanvas.canvas);\n\t  return {\n\t    x: x / pixelRatio * phylocanvas.zoom + phylocanvas.offsetx,\n\t    y: y / pixelRatio * phylocanvas.zoom + phylocanvas.offsety\n\t  };\n\t}\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.createBlobUrl = createBlobUrl;\n\texports.setupDownloadLink = setupDownloadLink;\n\texports.getX = getX;\n\texports.getY = getY;\n\texports.addClass = addClass;\n\texports.removeClass = removeClass;\n\texports.hasClass = hasClass;\n\texports.setCursorDragging = setCursorDragging;\n\texports.setCursorDrag = setCursorDrag;\n\n\tvar _events = __webpack_require__(5);\n\n\tvar windowURL = window.URL || window.webkitURL;\n\n\tfunction createBlobUrl(data) {\n\t  var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'text/plain;charset=utf-8';\n\n\t  var blob = new Blob([data], { type: type });\n\t  return windowURL.createObjectURL(blob);\n\t}\n\n\tfunction setupDownloadLink(url, filename) {\n\t  var anchor = document.createElement('a');\n\t  var isDownloadSupported = typeof anchor.download !== 'undefined';\n\n\t  anchor.href = url;\n\t  anchor.target = '_blank';\n\t  if (isDownloadSupported) {\n\t    anchor.download = filename;\n\t  }\n\t  (0, _events.fireEvent)(anchor, 'click');\n\t  if (isDownloadSupported) {\n\t    windowURL.revokeObjectURL(anchor.href);\n\t  }\n\t}\n\n\t/**\n\t * Get the x coordinate of oElement\n\t *\n\t * @param domElement - The element to get the X position of.\n\t *\n\t */\n\tfunction getX(domElement) {\n\t  var xValue = 0;\n\t  while (domElement) {\n\t    xValue += domElement.offsetLeft;\n\t    domElement = domElement.offsetParent;\n\t  }\n\t  return xValue;\n\t}\n\n\t/**\n\t * Get the y coordinate of oElement\n\t *\n\t * @param domElement - The element to get the Y position of.\n\t *\n\t */\n\tfunction getY(domElement) {\n\t  var yValue = 0;\n\t  while (domElement) {\n\t    yValue += domElement.offsetTop;\n\t    domElement = domElement.offsetParent;\n\t  }\n\t  return yValue;\n\t}\n\n\tfunction addClass(element, className) {\n\t  var classes = element.className.split(' ');\n\t  if (classes.indexOf(className) === -1) {\n\t    classes.push(className);\n\t    element.className = classes.join(' ');\n\t  }\n\t}\n\n\tfunction removeClass(element, className) {\n\t  var classes = element.className.split(' ');\n\t  var index = classes.indexOf(className);\n\n\t  if (index !== -1) {\n\t    classes.splice(index, 1);\n\t    element.className = classes.join(' ');\n\t  }\n\t}\n\n\tfunction hasClass(element, className) {\n\t  var classes = element.className.split(' ');\n\t  var index = classes.indexOf(className);\n\n\t  return index !== -1;\n\t}\n\n\t/**\n\t * Setting the cursor to dragging required vendor prefixes.\n\t * @param domElement\n\t */\n\tfunction setCursorDragging(domElement) {\n\t  domElement.style.cursor = \"-webkit-grabbing\";\n\t  domElement.style.cursor = \"-moz-grabbing\";\n\t  domElement.style.cursor = \"grabbing\";\n\t}\n\n\t/**\n\t * Setting the cursor to drag required vendor prefixes.\n\t * @param domElement\n\t */\n\tfunction setCursorDrag(domElement) {\n\t  domElement.style.cursor = \"-webkit-grab\";\n\t  domElement.style.cursor = \"-moz-grab\";\n\t  domElement.style.cursor = \"grab\";\n\t}\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n\texports.preventDefault = preventDefault;\n\texports.fireEvent = fireEvent;\n\texports.addEvent = addEvent;\n\texports.removeEvent = removeEvent;\n\texports.killEvent = killEvent;\n\texports.createHandler = createHandler;\n\tfunction preventDefault(event) {\n\t  event.preventDefault();\n\t  return false;\n\t}\n\n\tfunction fireEvent(element, type) {\n\t  var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n\t  var event; // The custom event that will be created\n\t  var param;\n\n\t  if (document.createEvent) {\n\t    event = document.createEvent('HTMLEvents');\n\t    event.initEvent(type, true, true);\n\t  } else {\n\t    event = document.createEventObject();\n\t    event.eventType = type;\n\t  }\n\n\t  event.eventName = type;\n\n\t  for (param in params) {\n\t    if (params.hasOwnProperty(param)) {\n\t      event[param] = params[param];\n\t    }\n\t  }\n\n\t  if (document.createEvent) {\n\t    element.dispatchEvent(event);\n\t  } else {\n\t    element.fireEvent('on' + event.eventType, event);\n\t  }\n\t}\n\n\tfunction addEvent(elem, event, fn) {\n\t  if (elem.addEventListener) {\n\t    elem.addEventListener(event, fn, false);\n\t  } else {\n\t    elem.attachEvent('on' + event, function () {\n\t      // set the this pointer same as addEventListener when fn is called\n\t      return fn.call(elem, window.event);\n\t    });\n\t  }\n\t}\n\n\tfunction removeEvent(elem, event, fn) {\n\t  if (elem.removeEventListener) {\n\t    elem.removeEventListener(event, fn, false);\n\t  } else {\n\t    console.warn('[Phylocanvas] Unable to remove event, removeEventListener not supported');\n\t  }\n\t}\n\n\tfunction killEvent(e) {\n\t  e.stopPropagation();\n\t  e.preventDefault();\n\t}\n\n\t/**\n\t * Creates a function which can be called from an event handler independent of\n\t * scope.\n\t *\n\t * @param {Object} obj the object the function will be called on\n\t * @param {String} func the name of the function to be called\n\t * @retuns {function}\n\t */\n\tfunction createHandler(obj, func) {\n\t  var handler;\n\n\t  if ((typeof func === 'undefined' ? 'undefined' : _typeof(func)) === _typeof('aaa')) {\n\t    handler = function handler(e) {\n\t      if (obj[func]) {\n\t        return obj[func](e);\n\t      }\n\t    };\n\t  } else {\n\t    handler = function handler() {\n\t      return func(obj);\n\t    };\n\t  }\n\t  return handler;\n\t}\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t/**\n\t * An enumeration of certain pre-defined angles to enable faster drawing of\n\t * trees. There are FORTYFIVE, QUARTER, HALF and FULL. Values are all radians.\n\t *\n\t * @enum\n\t * @memberof PhyloCanvas\n\t * @constant\n\t */\n\tvar Angles = exports.Angles = {\n\t  /**\n\t   * @constant\n\t   * @type double\n\t   * @description PI / 4\n\t   */\n\t  FORTYFIVE: Math.PI / 4,\n\t  /**\n\t   * @constant\n\t   * @type double\n\t   * @description PI / 2\n\t   */\n\t  QUARTER: Math.PI / 2,\n\t  /**\n\t   * @constant\n\t   * @type double\n\t   * @description PI\n\t   */\n\t  HALF: Math.PI,\n\t  /**\n\t   * @constant\n\t   * @type double\n\t   * @description PI * 2\n\t   */\n\t  FULL: 2 * Math.PI\n\t};\n\n\t/**\n\t * dictionary to translate newick annotations to branch renderer ids\n\t *\n\t * @enum\n\t * @memberof PhyloCanvas\n\t * @constant\n\t */\n\tvar Shapes = exports.Shapes = {\n\t  x: 'star',\n\t  s: 'square',\n\t  o: 'circle',\n\t  t: 'triangle'\n\t};\n\n\t/**\n\t * Standard set of predicates.\n\t *\n\t * @enum\n\t * @constant\n\t */\n\tvar Predicates = exports.Predicates = {\n\t  tautology: function tautology() {\n\t    return true;\n\t  },\n\t  contradiction: function contradiction() {\n\t    return false;\n\t  },\n\t  leafOnly: function leafOnly(node) {\n\t    return node.leaf;\n\t  },\n\t  nonLeaf: function nonLeaf(node) {\n\t    return !node.leaf;\n\t  }\n\t};\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n\tvar _utils = __webpack_require__(2);\n\n\tvar _treeTypes = __webpack_require__(8);\n\n\tvar _treeTypes2 = _interopRequireDefault(_treeTypes);\n\n\tvar _nodeRenderers = __webpack_require__(26);\n\n\tvar _nodeRenderers2 = _interopRequireDefault(_nodeRenderers);\n\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\tvar Angles = _utils.constants.Angles,\n\t    Shapes = _utils.constants.Shapes;\n\n\t// Caching object to reduce garbage\n\n\tvar _bounds = {\n\t  minx: 0,\n\t  maxx: 0,\n\t  miny: 0,\n\t  maxy: 0\n\t};\n\n\tvar _leafStyle = {\n\t  lineWidth: null,\n\t  strokeStyle: null,\n\t  fillStyle: null\n\t};\n\n\t/**\n\t * A branch of the tree.\n\t *\n\t * @class\n\t */\n\n\tvar Branch = function () {\n\t  function Branch() {\n\t    _classCallCheck(this, Branch);\n\n\t    /**\n\t     * The branch's angle clockwise from horizontal in radians (used paricularly\n\t     * for circular and radial trees).\n\t     *\n\t     * @type number\n\t     */\n\t    this.angle = 0;\n\n\t    /**\n\t     * The length of the branch.\n\t     *\n\t     * @type number\n\t     */\n\t    this.branchLength = 0;\n\n\t    /**\n\t     * The center of the end of the node on the x axis.\n\t     *\n\t     * @type number\n\t     */\n\t    this.centerx = 0;\n\n\t    /**\n\t     * The center of the end of the node on the y axis.\n\t     *\n\t     * @type number\n\t     */\n\t    this.centery = 0;\n\n\t    /**\n\t     * The branches that stem from this branch.\n\t     *\n\t     * @type Branch[]\n\t     */\n\t    this.children = [];\n\n\t    /**\n\t     * True if the node has been collapsed.\n\t     *\n\t     * @type boolean\n\t     * @default\n\t     */\n\t    this.collapsed = false;\n\n\t    /**\n\t     * Custom colour for branch, initialised as null to use tree-level default.\n\t     *\n\t     * @type string\n\t     */\n\t    this.colour = null;\n\n\t    /**\n\t     * Holds custom data for this node.\n\t     *\n\t     * @type object\n\t     */\n\t    this.data = {};\n\n\t    /**\n\t     * This node's highlight status.\n\t     *\n\t     * @type boolean\n\t     * @default\n\t     */\n\t    this.highlighted = false;\n\n\t    /**\n\t     * Whether the user is hovering over the node.\n\t     *\n\t     * @type boolean\n\t     */\n\t    this.hovered = false;\n\n\t    /**\n\t     * This node's unique ID.\n\t     *\n\t     * @type string\n\t     */\n\t    this.id = '';\n\n\t    /**\n\t     * The text label for this node.\n\t     *\n\t     * @type string\n\t     */\n\t    this.label = null;\n\n\t    /**\n\t     * If true, this node has no children.\n\t     *\n\t     * @type boolean\n\t     * @default\n\t     */\n\t    this.leaf = true;\n\n\t    /**\n\t     * The angle that the last child of this brach 'splays' at, used for\n\t     * circular trees.\n\t     *\n\t     * @type number\n\t     * @default\n\t     */\n\t    this.maxChildAngle = 0;\n\n\t    /**\n\t     * The angle that the last child of this brach 'splays' at, used for\n\t     * circular trees.\n\t     *\n\t     * @type number\n\t     * @default\n\t     */\n\t    this.minChildAngle = Angles.FULL;\n\n\t    /**\n\t     * What kind of teminal should be drawn on this node.\n\t     *\n\t     * @type string\n\t     * @default\n\t     */\n\t    this.nodeShape = 'circle';\n\n\t    /**\n\t     * The parent branch of this branch.\n\t     *\n\t     * @type Branch\n\t     */\n\t    this.parent = null;\n\n\t    /**\n\t     * The relative size of the terminal of this node.\n\t     *\n\t     * @type number\n\t     * @default\n\t     */\n\t    this.radius = 1.0;\n\n\t    /**\n\t     * True if this branch is currently selected.\n\t     *\n\t     * @type boolean\n\t     */\n\t    this.selected = false;\n\n\t    /**\n\t     * The x position of the start of the branch.\n\t     *\n\t     * @type number\n\t     */\n\t    this.startx = 0;\n\n\t    /**\n\t     * The y position of the start of the branch.\n\t     *\n\t     * @type number\n\t     */\n\t    this.starty = 0;\n\n\t    /**\n\t     * The length from the root of the tree to the tip of this branch.\n\t     *\n\t     * @type number\n\t     */\n\t    this.totalBranchLength = 0;\n\n\t    /**\n\t     * The tree object that this branch is part of.\n\t     *\n\t     * @type Tree\n\t     */\n\t    this.tree = null;\n\n\t    /**\n\t     * If true, this branch is not rendered.\n\t     *\n\t     * @type boolean\n\t     * @default\n\t     */\n\t    this.pruned = false;\n\n\t    /**\n\t     * Allows label to be individually styled.\n\t     *\n\t     * @type object\n\t     * @property {string} colour\n\t     * @property {number} textSize\n\t     * @property {string} font\n\t     * @property {string} format - e.g. bold, italic\n\t     */\n\t    this.labelStyle = {};\n\n\t    /**\n\t     * Allows label to be individually styled.\n\t     *\n\t     * @type object\n\t     * @property {string} colour\n\t     * @property {number} textSize\n\t     * @property {string} font\n\t     * @property {string} format - e.g. bold, italic\n\t     */\n\t    this.internalLabelStyle = null;\n\n\t    /**\n\t     * If false, branch does not respond to mouse events.\n\t     *\n\t     * @type boolean\n\t     * @default\n\t     */\n\t    this.interactive = true;\n\n\t    /**\n\t     * Defines leaf style for this branch.\n\t     *\n\t     * @type object\n\t     * @property {number} lineWidth\n\t     * @property {string} strokeStyle\n\t     * @property {string} fillStyle\n\t     *\n\t     * @example\n\t     * branch.leafStyle = {\n\t     *   lineWidth: 2,\n\t     *   strokeStyle: '#ff0000',\n\t     *   fillStyle: 'blue'\n\t     * };\n\t     */\n\t    this.leafStyle = {};\n\n\t    /**\n\t     * Minimum x coordintate.\n\t     *\n\t     * @type number\n\t     */\n\t    this.minx = 0;\n\n\t    /**\n\t     * Minimum y coordintate.\n\t     *\n\t     * @type number\n\t     */\n\t    this.miny = 0;\n\n\t    /**\n\t     * Maximum x coordintate.\n\t     *\n\t     * @type number\n\t     */\n\t    this.maxx = 0;\n\n\t    /**\n\t     * Maximum y coordintate.\n\t     *\n\t     * @type number\n\t     */\n\t    this.maxy = 0;\n\t  }\n\n\t  /**\n\t   * For branches without a label.\n\t   *\n\t   * @returns {string} new ID\n\t   */\n\n\n\t  _createClass(Branch, [{\n\t    key: 'clicked',\n\n\n\t    /**\n\t     * Determines if this branch has been clicked.\n\t     *\n\t     * @param {number}\n\t     * @param {number}\n\t     * @returns {Branch}\n\t     */\n\t    value: function clicked(x, y) {\n\t      if (this.dragging || this.hasCollapsedAncestor()) {\n\t        return null;\n\t      }\n\t      if (x < this.maxx && x > this.minx && y < this.maxy && y > this.miny) {\n\t        return this;\n\t      }\n\n\t      for (var i = this.children.length - 1; i >= 0; i--) {\n\t        var child = this.children[i].clicked(x, y);\n\t        if (child) {\n\t          return child;\n\t        }\n\t      }\n\t    }\n\n\t    /**\n\t     * @method\n\t     */\n\n\t  }, {\n\t    key: 'drawLabel',\n\t    value: function drawLabel() {\n\t      var fSize = this.getTextSize();\n\t      var label = this.getLabel();\n\n\t      this.canvas.font = this.getFontString();\n\t      this.labelWidth = this.canvas.measureText(label).width;\n\n\t      // finding the maximum label length\n\t      if (this.tree.maxLabelLength[this.tree.treeType] === undefined) {\n\t        this.tree.maxLabelLength[this.tree.treeType] = 0;\n\t      }\n\t      if (this.labelWidth > this.tree.maxLabelLength[this.tree.treeType]) {\n\t        this.tree.maxLabelLength[this.tree.treeType] = this.labelWidth;\n\t      }\n\n\t      var tx = this.getLabelStartX();\n\n\t      if (this.tree.alignLabels) {\n\t        tx += Math.abs(this.tree.labelAlign.getLabelOffset(this));\n\t      }\n\n\t      if (this.angle > Angles.QUARTER && this.angle < Angles.HALF + Angles.QUARTER) {\n\t        this.canvas.rotate(Angles.HALF);\n\t        // Angles.Half text position changes\n\t        tx = -tx - this.labelWidth * 1;\n\t      }\n\n\t      this.canvas.beginPath();\n\t      this.canvas.fillStyle = this.getTextColour();\n\t      this.canvas.fillText(label, tx, fSize / 2);\n\t      this.canvas.closePath();\n\n\t      // Rotate canvas back to original position\n\t      if (this.angle > Angles.QUARTER && this.angle < Angles.HALF + Angles.QUARTER) {\n\t        this.canvas.rotate(Angles.HALF);\n\t      }\n\t    }\n\n\t    /**\n\t     * Sets the minimum and maximum coordinates of the branch.\n\t     *\n\t     * @param {number}\n\t     * @param {number}\n\t     * @param {number}\n\t     */\n\n\t  }, {\n\t    key: 'setNodeDimensions',\n\t    value: function setNodeDimensions(centerX, centerY, radius) {\n\t      var boundedRadius = radius;\n\n\t      if (radius * this.tree.zoom < 5 || !this.leaf) {\n\t        boundedRadius = 5 / this.tree.zoom;\n\t      }\n\n\t      this.minx = centerX - boundedRadius;\n\t      this.maxx = centerX + boundedRadius;\n\t      this.miny = centerY - boundedRadius;\n\t      this.maxy = centerY + boundedRadius;\n\t    }\n\t  }, {\n\t    key: 'getNumberOfLeaves',\n\t    value: function getNumberOfLeaves() {\n\t      var numberOfLeaves = 0;\n\t      var queue = [this];\n\t      while (queue.length) {\n\t        var node = queue.pop();\n\t        if (node.leaf) {\n\t          numberOfLeaves++;\n\t        } else {\n\t          var _iteratorNormalCompletion = true;\n\t          var _didIteratorError = false;\n\t          var _iteratorError = undefined;\n\n\t          try {\n\t            for (var _iterator = node.children[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t              var child = _step.value;\n\n\t              queue.push(child);\n\t            }\n\t          } catch (err) {\n\t            _didIteratorError = true;\n\t            _iteratorError = err;\n\t          } finally {\n\t            try {\n\t              if (!_iteratorNormalCompletion && _iterator.return) {\n\t                _iterator.return();\n\t              }\n\t            } finally {\n\t              if (_didIteratorError) {\n\t                throw _iteratorError;\n\t              }\n\t            }\n\t          }\n\t        }\n\t      }\n\t      return numberOfLeaves;\n\t    }\n\n\t    /**\n\t     * Draws the \"collapsed tip\".\n\t     *\n\t     * @param {number}\n\t     * @param {number}\n\t     */\n\n\t  }, {\n\t    key: 'drawCollapsed',\n\t    value: function drawCollapsed(centerX, centerY) {\n\t      var getCollapsedMeasurements = _treeTypes2.default[this.tree.treeType].getCollapsedMeasurements;\n\n\n\t      this.canvas.beginPath();\n\n\t      var _getCollapsedMeasurem = getCollapsedMeasurements(this),\n\t          angle = _getCollapsedMeasurem.angle,\n\t          radius = _getCollapsedMeasurem.radius;\n\n\t      var startAngle = this.angle - angle / 2;\n\t      var endAngle = this.angle + angle / 2;\n\n\t      this.canvas.moveTo(centerX, centerY);\n\t      this.canvas.arc(centerX, centerY, radius, startAngle, endAngle, false);\n\n\t      var gradient = this.canvas.createRadialGradient(centerX, centerY, radius, centerX, centerY, 0.2 * radius);\n\t      gradient.addColorStop(0, 'rgba(255, 255, 255, 0)');\n\t      gradient.addColorStop(1, this.tree.collapsedColour || this.getColour());\n\t      this.canvas.fillStyle = gradient;\n\n\t      this.canvas.fill();\n\n\t      this.canvas.closePath();\n\t    }\n\n\t    /**\n\t     * For aligned labels.\n\t     *\n\t     * @method\n\t     */\n\n\t  }, {\n\t    key: 'drawLabelConnector',\n\t    value: function drawLabelConnector() {\n\t      var _tree = this.tree,\n\t          highlightColour = _tree.highlightColour,\n\t          labelAlign = _tree.labelAlign;\n\n\t      this.canvas.save();\n\n\t      this.canvas.lineWidth = this.canvas.lineWidth / 4;\n\t      this.canvas.strokeStyle = this.isHighlighted ? highlightColour : this.getColour();\n\n\t      this.canvas.beginPath();\n\t      this.canvas.moveTo(this.getRadius(), 0);\n\t      this.canvas.lineTo(labelAlign.getLabelOffset(this) + this.getDiameter(), 0);\n\t      this.canvas.stroke();\n\t      this.canvas.closePath();\n\n\t      this.canvas.restore();\n\t    }\n\n\t    /**\n\t     * @method\n\t     */\n\n\t  }, {\n\t    key: 'drawLeaf',\n\t    value: function drawLeaf() {\n\t      var _tree2 = this.tree,\n\t          alignLabels = _tree2.alignLabels,\n\t          canvas = _tree2.canvas;\n\n\n\t      if (alignLabels) {\n\t        this.drawLabelConnector();\n\t      }\n\n\t      canvas.save();\n\n\t      _nodeRenderers2.default[this.nodeShape](canvas, this.getRadius(), this.getLeafStyle());\n\n\t      canvas.restore();\n\n\t      if (this.tree.showLabels || this.tree.hoverLabel && this.isHighlighted) {\n\t        this.drawLabel();\n\t      }\n\t    }\n\n\t    /**\n\t     * @param {number}\n\t     * @param {number}\n\t     */\n\n\t  }, {\n\t    key: 'drawHighlight',\n\t    value: function drawHighlight(centerX, centerY) {\n\t      this.canvas.save();\n\t      this.canvas.beginPath();\n\n\t      this.canvas.strokeStyle = this.tree.highlightColour;\n\t      this.canvas.lineWidth = this.getHighlightLineWidth();\n\t      var radius = this.getHighlightRadius();\n\t      this.canvas.arc(centerX, centerY, radius, 0, Angles.FULL, false);\n\n\t      this.canvas.stroke();\n\n\t      this.canvas.closePath();\n\t      this.canvas.restore();\n\t    }\n\n\t    /**\n\t     * @method\n\t     */\n\n\t  }, {\n\t    key: 'drawBranchLabels',\n\t    value: function drawBranchLabels() {\n\t      this.canvas.save();\n\t      var labelStyle = this.internalLabelStyle || this.tree.internalLabelStyle;\n\t      this.canvas.fillStyle = labelStyle.colour;\n\t      this.canvas.font = labelStyle.format + ' ' + labelStyle.textSize + 'pt ' + labelStyle.font;\n\t      this.canvas.textBaseline = 'middle';\n\t      this.canvas.textAlign = 'center';\n\t      var em = this.canvas.measureText('M').width * 2 / 3;\n\n\t      var x = this.tree.type.branchScalingAxis === 'y' ? this.centerx : (this.startx + this.centerx) / 2;\n\t      var y = this.tree.type.branchScalingAxis === 'x' ? this.centery : (this.starty + this.centery) / 2;\n\n\t      if (this.tree.showBranchLengthLabels && this.tree.branchLengthLabelPredicate(this)) {\n\t        this.canvas.fillText(this.branchLength.toFixed(2), x, y + em);\n\t      }\n\n\t      if (this.tree.showInternalNodeLabels && !this.leaf && this.label) {\n\t        this.canvas.fillText(this.label, x, y - em);\n\t      }\n\n\t      this.canvas.restore();\n\t    }\n\n\t    /**\n\t     * Draws the line of the branch.\n\t     */\n\n\t  }, {\n\t    key: 'drawNode',\n\t    value: function drawNode() {\n\t      var nodeRadius = this.getRadius();\n\t      /**\n\t       * theta = translation to center of node... ensures that the node edge is\n\t       * at the end of the branch so the branches don't look shorter than  they\n\t       * should\n\t       */\n\t      var theta = nodeRadius;\n\n\t      var centerX = this.leaf ? theta * Math.cos(this.angle) + this.centerx : this.centerx;\n\t      var centerY = this.leaf ? theta * Math.sin(this.angle) + this.centery : this.centery;\n\n\t      this.setNodeDimensions(centerX, centerY, nodeRadius);\n\n\t      if (this.collapsed) {\n\t        this.drawCollapsed(centerX, centerY);\n\t      } else if (this.leaf) {\n\t        this.canvas.save();\n\t        this.canvas.translate(this.centerx, this.centery);\n\t        this.canvas.rotate(this.angle);\n\n\t        this.drawLeaf();\n\n\t        this.canvas.restore();\n\t      }\n\n\t      if (this.isHighlighted) {\n\t        this.tree.highlighters.push(this.drawHighlight.bind(this, centerX, centerY));\n\t      }\n\n\t      if (this.tree.root !== this && this.tree.showBranchLengthLabels || this.tree.showInternalNodeLabels) {\n\t        this.drawBranchLabels();\n\t      }\n\t    }\n\n\t    /**\n\t     * Get property values of leaves under this branch.\n\t     *\n\t     * @param {string} - property name\n\t     * @returns {string[]}\n\t     */\n\n\t  }, {\n\t    key: 'getChildProperties',\n\t    value: function getChildProperties(property) {\n\t      if (this.leaf) {\n\t        // Fix for Issue #68\n\t        // Returning array, as expected\n\t        return [this[property]];\n\t      }\n\n\t      var children = [];\n\t      for (var x = 0; x < this.children.length; x++) {\n\t        children = children.concat(this.children[x].getChildProperties(property));\n\t      }\n\t      return children;\n\t    }\n\n\t    /**\n\t     * @returns {number}\n\t     */\n\n\t  }, {\n\t    key: 'getChildCount',\n\t    value: function getChildCount() {\n\t      if (this.leaf) return 1;\n\n\t      var children = 0;\n\t      for (var x = 0; x < this.children.length; x++) {\n\t        children += this.children[x].getChildCount();\n\t      }\n\t      return children;\n\t    }\n\n\t    /**\n\t     * @returns {number}\n\t     */\n\n\t  }, {\n\t    key: 'getChildYTotal',\n\t    value: function getChildYTotal() {\n\t      if (this.leaf) return this.centery;\n\n\t      var y = 0;\n\t      for (var i = 0; i < this.children.length; i++) {\n\t        y += this.children[i].getChildYTotal();\n\t      }\n\t      return y;\n\t    }\n\n\t    /**\n\t     * Set a boolean property of this branch and its descendants.\n\t     *\n\t     * @param {string}\n\t     * @param {boolean}\n\t     * @param {function=}\n\t     */\n\n\t  }, {\n\t    key: 'cascadeFlag',\n\t    value: function cascadeFlag(property, value, predicate) {\n\t      if (typeof this[property] === 'undefined') {\n\t        throw new Error('Unknown property: ' + property);\n\t      }\n\t      if (typeof predicate === 'undefined' || predicate(this, property, value)) {\n\t        this[property] = value;\n\t      }\n\t      var _iteratorNormalCompletion2 = true;\n\t      var _didIteratorError2 = false;\n\t      var _iteratorError2 = undefined;\n\n\t      try {\n\t        for (var _iterator2 = this.children[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t          var child = _step2.value;\n\n\t          child.cascadeFlag(property, value, predicate);\n\t        }\n\t      } catch (err) {\n\t        _didIteratorError2 = true;\n\t        _iteratorError2 = err;\n\t      } finally {\n\t        try {\n\t          if (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t            _iterator2.return();\n\t          }\n\t        } finally {\n\t          if (_didIteratorError2) {\n\t            throw _iteratorError2;\n\t          }\n\t        }\n\t      }\n\t    }\n\n\t    /**\n\t     * Resets the coordinates and angle of this branch and its descendants.\n\t     */\n\n\t  }, {\n\t    key: 'reset',\n\t    value: function reset() {\n\t      var child;\n\t      var i;\n\n\t      this.startx = 0;\n\t      this.starty = 0;\n\t      this.centerx = 0;\n\t      this.centery = 0;\n\t      this.angle = null;\n\t      // this.totalBranchLength = 0;\n\t      this.minChildAngle = Angles.FULL;\n\t      this.maxChildAngle = 0;\n\t      for (i = 0; i < this.children.length; i++) {\n\t        try {\n\t          this.children[child].reset();\n\t        } catch (e) {\n\t          return e;\n\t        }\n\t      }\n\t    }\n\n\t    /**\n\t     * Set this branch to be the root.\n\t     */\n\n\t  }, {\n\t    key: 'redrawTreeFromBranch',\n\t    value: function redrawTreeFromBranch() {\n\t      if (this.collapsed) {\n\t        this.expand();\n\t      }\n\t      this.tree.redrawFromBranch(this);\n\t    }\n\n\t    /**\n\t     * Store this branch's children.\n\t     */\n\n\t  }, {\n\t    key: 'extractChildren',\n\t    value: function extractChildren() {\n\t      var _iteratorNormalCompletion3 = true;\n\t      var _didIteratorError3 = false;\n\t      var _iteratorError3 = undefined;\n\n\t      try {\n\t        for (var _iterator3 = this.children[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n\t          var child = _step3.value;\n\n\t          this.tree.storeNode(child);\n\t          child.extractChildren();\n\t        }\n\t      } catch (err) {\n\t        _didIteratorError3 = true;\n\t        _iteratorError3 = err;\n\t      } finally {\n\t        try {\n\t          if (!_iteratorNormalCompletion3 && _iterator3.return) {\n\t            _iterator3.return();\n\t          }\n\t        } finally {\n\t          if (_didIteratorError3) {\n\t            throw _iteratorError3;\n\t          }\n\t        }\n\t      }\n\t    }\n\n\t    /**\n\t     * Walks up the tree looking for a collapsed branch.\n\t     *\n\t     * @returns {boolean}\n\t     */\n\n\t  }, {\n\t    key: 'hasCollapsedAncestor',\n\t    value: function hasCollapsedAncestor() {\n\t      if (this.parent) {\n\t        return this.parent.collapsed || this.parent.hasCollapsedAncestor();\n\t      }\n\t      return false;\n\t    }\n\n\t    /**\n\t     * @method\n\t     */\n\n\t  }, {\n\t    key: 'collapse',\n\t    value: function collapse() {\n\t      // don't collapse the node if it is a leaf... that would be silly!\n\t      this.collapsed = this.leaf === false;\n\t    }\n\n\t    /**\n\t     * @method\n\t     */\n\n\t  }, {\n\t    key: 'expand',\n\t    value: function expand() {\n\t      this.collapsed = false;\n\t    }\n\n\t    /**\n\t     * @method\n\t     */\n\n\t  }, {\n\t    key: 'toggleCollapsed',\n\t    value: function toggleCollapsed() {\n\t      if (this.collapsed) {\n\t        this.expand();\n\t      } else {\n\t        this.collapse();\n\t      }\n\t    }\n\n\t    /**\n\t     * Sums the length of all branches from this one back to the root.\n\t     */\n\n\t  }, {\n\t    key: 'setTotalLength',\n\t    value: function setTotalLength() {\n\t      var c;\n\n\t      if (this.parent) {\n\t        this.totalBranchLength = this.parent.totalBranchLength + this.branchLength;\n\t        if (this.totalBranchLength > this.tree.maxBranchLength) {\n\t          this.tree.maxBranchLength = this.totalBranchLength;\n\t        }\n\t      } else {\n\t        this.totalBranchLength = this.branchLength;\n\t        this.tree.maxBranchLength = this.totalBranchLength;\n\t      }\n\t      for (c = 0; c < this.children.length; c++) {\n\t        this.children[c].setTotalLength();\n\t      }\n\t    }\n\n\t    /**\n\t     * Add a child branch to this branch.\n\t     *\n\t     * @param node {Branch} the node to add as a child\n\t     */\n\n\t  }, {\n\t    key: 'addChild',\n\t    value: function addChild(node) {\n\t      node.parent = this;\n\t      node.tree = this.tree;\n\t      this.leaf = false;\n\t      this.children.push(node);\n\t    }\n\n\t    /**\n\t     * Return the node colour of all the nodes that are children of this one.\n\t     *\n\t     * @returns {string[]}\n\t     */\n\n\t  }, {\n\t    key: 'getChildColours',\n\t    value: function getChildColours() {\n\t      var colours = [];\n\n\t      this.children.forEach(function (branch) {\n\t        var colour = branch.children.length === 0 ? branch.colour : branch.getColour();\n\t        // only add each colour once.\n\t        if (colours.indexOf(colour) === -1) {\n\t          colours.push(colour);\n\t        }\n\t      });\n\n\t      return colours;\n\t    }\n\n\t    /**\n\t     * Get the colour(s) of the branch itself.\n\t     *\n\t     * @returns {string}\n\t     */\n\n\t  }, {\n\t    key: 'getColour',\n\t    value: function getColour(specifiedColour) {\n\t      if (this.selected) {\n\t        return this.tree.selectedColour;\n\t      }\n\n\t      return specifiedColour || this.colour || this.tree.branchColour;\n\t    }\n\n\t    /**\n\t     * Create a newick representation of this branch.\n\t     *\n\t     * @returns {string}\n\t     */\n\n\t  }, {\n\t    key: 'getNwk',\n\t    value: function getNwk() {\n\t      var isRoot = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n\t      if (this.leaf) {\n\t        return this.label + ':' + this.branchLength;\n\t      }\n\n\t      var childNwks = this.children.map(function (child) {\n\t        return child.getNwk(false);\n\t      });\n\t      return '(' + childNwks.join(',') + '):' + this.branchLength + (isRoot ? ';' : '');\n\t    }\n\n\t    /**\n\t     * @returns {string}\n\t     */\n\n\t  }, {\n\t    key: 'getTextColour',\n\t    value: function getTextColour() {\n\t      if (this.selected) {\n\t        return this.tree.selectedColour;\n\t      }\n\n\t      if (this.isHighlighted) {\n\t        return this.tree.highlightColour;\n\t      }\n\n\t      if (this.tree.backColour && this.children.length) {\n\t        var childColours = this.getChildColours();\n\t        if (childColours.length === 1) {\n\t          return childColours[0];\n\t        }\n\t      }\n\t      return this.labelStyle.colour || this.colour || this.tree.branchColour;\n\t    }\n\n\t    /**\n\t     * Ensures the return value is always a string.\n\t     *\n\t     * @returns {string}\n\t     */\n\n\t  }, {\n\t    key: 'getLabel',\n\t    value: function getLabel() {\n\t      return this.label !== undefined && this.label !== null ? this.label : '';\n\t    }\n\n\t    /**\n\t     * @returns {number}\n\t     */\n\n\t  }, {\n\t    key: 'getTextSize',\n\t    value: function getTextSize() {\n\t      return this.labelStyle.textSize || this.tree.textSize;\n\t    }\n\n\t    /**\n\t     * @returns {string}\n\t     */\n\n\t  }, {\n\t    key: 'getFontString',\n\t    value: function getFontString() {\n\t      var font = this.labelStyle.font || this.tree.font;\n\t      return (this.labelStyle.format || '') + ' ' + this.getTextSize() + 'pt ' + font;\n\t    }\n\n\t    /**\n\t     * @returns {number} length of label in pixels\n\t     */\n\n\t  }, {\n\t    key: 'getLabelSize',\n\t    value: function getLabelSize() {\n\t      this.canvas.font = this.getFontString();\n\t      return this.canvas.measureText(this.getLabel()).width;\n\t    }\n\n\t    /**\n\t     * @returns {number}\n\t     */\n\n\t  }, {\n\t    key: 'getRadius',\n\t    value: function getRadius() {\n\t      var baseNodeSize = this.tree.baseNodeSize;\n\n\t      if (this.leaf) {\n\t        return baseNodeSize * this.radius;\n\t      }\n\t      return baseNodeSize / this.radius;\n\t    }\n\n\t    /**\n\t     * @returns {number}\n\t     */\n\n\t  }, {\n\t    key: 'getDiameter',\n\t    value: function getDiameter() {\n\t      return this.getRadius() * 2;\n\t    }\n\n\t    /**\n\t     * @returns {boolean}\n\t     */\n\n\t  }, {\n\t    key: 'hasLabelConnector',\n\t    value: function hasLabelConnector() {\n\t      if (!this.tree.alignLabels) {\n\t        return false;\n\t      }\n\t      return this.tree.labelAlign.getLabelOffset(this) > this.getDiameter();\n\t    }\n\n\t    /**\n\t     * Calculates label start position\n\t     * offset + aesthetic padding\n\t     *\n\t     * @return {number} x coordinate\n\t     */\n\n\t  }, {\n\t    key: 'getLabelStartX',\n\t    value: function getLabelStartX() {\n\t      var _getLeafStyle = this.getLeafStyle(),\n\t          lineWidth = _getLeafStyle.lineWidth;\n\n\t      var hasLabelConnector = this.hasLabelConnector();\n\n\t      var offset = this.getDiameter();\n\n\t      if (this.isHighlighted && !hasLabelConnector) {\n\t        offset += this.getHighlightSize() - this.getRadius();\n\t      }\n\n\t      return offset + Math.min(this.tree.labelPadding, this.tree.labelPadding / this.tree.zoom);\n\t    }\n\n\t    /**\n\t     * @returns {number}\n\t     */\n\n\t  }, {\n\t    key: 'getHighlightLineWidth',\n\t    value: function getHighlightLineWidth() {\n\t      return this.tree.highlightWidth / this.tree.zoom;\n\t    }\n\n\t    /**\n\t     * @returns {number}\n\t     */\n\n\t  }, {\n\t    key: 'getHighlightRadius',\n\t    value: function getHighlightRadius() {\n\t      var offset = this.getHighlightLineWidth() * this.tree.highlightSize;\n\n\t      offset += this.getLeafStyle().lineWidth / this.tree.highlightSize;\n\n\t      return this.leaf ? this.getRadius() + offset : offset * 0.666;\n\t    }\n\n\t    /**\n\t     * Combination of radius and line width\n\t     *\n\t     * @returns {number}\n\t     */\n\n\t  }, {\n\t    key: 'getHighlightSize',\n\t    value: function getHighlightSize() {\n\t      return this.getHighlightRadius() + this.getHighlightLineWidth();\n\t    }\n\n\t    /**\n\t     * Reverses the order of the children. Runs the prerenderer again.\n\t     *\n\t     * @method\n\t     */\n\n\t  }, {\n\t    key: 'rotate',\n\t    value: function rotate() {\n\t      var newChildren = [];\n\n\t      for (var i = this.children.length; i--;) {\n\t        newChildren.push(this.children[i]);\n\t      }\n\n\t      this.children = newChildren;\n\n\t      this.tree.extractNestedBranches();\n\t      this.tree.draw(true);\n\t    }\n\n\t    /**\n\t     * @returns {number} index of this branch in its parent's array.\n\t     */\n\n\t  }, {\n\t    key: 'getChildNo',\n\t    value: function getChildNo() {\n\t      return this.parent.children.indexOf(this);\n\t    }\n\n\t    /**\n\t     * @param {Object} options\n\t     * @param {string} options.colour\n\t     * @param {string} options.shape\n\t     * @param {number} options.size\n\t     * @param {Object} options.leafStyle See {@link Branch#leafStyle}\n\t     * @param {Object} options.labelStyle See {@link Branch#labelStyle}\n\t     */\n\n\t  }, {\n\t    key: 'setDisplay',\n\t    value: function setDisplay(_ref) {\n\t      var colour = _ref.colour,\n\t          shape = _ref.shape,\n\t          size = _ref.size,\n\t          leafStyle = _ref.leafStyle,\n\t          labelStyle = _ref.labelStyle;\n\n\t      if (colour) {\n\t        this.colour = colour;\n\t      }\n\t      if (shape) {\n\t        this.nodeShape = Shapes[shape] ? Shapes[shape] : shape;\n\t      }\n\t      if (size) {\n\t        this.radius = size;\n\t      }\n\t      if (leafStyle) {\n\t        this.leafStyle = leafStyle;\n\t      }\n\t      if (labelStyle) {\n\t        this.labelStyle = labelStyle;\n\t      }\n\t    }\n\n\t    /**\n\t     * @returns {number} the node radius plus label length if labels are shown\n\t     */\n\n\t  }, {\n\t    key: 'getTotalLength',\n\t    value: function getTotalLength() {\n\t      var length = this.getRadius();\n\n\t      if (this.tree.showLabels || this.tree.hoverLabel && this.isHighlighted) {\n\t        length += this.getLabelStartX() + this.getLabelSize();\n\t      }\n\n\t      return length;\n\t    }\n\n\t    /**\n\t     * @returns {Object} bounds\n\t     * @property {number} minx\n\t     * @property {number} miny\n\t     * @property {number} maxx\n\t     * @property {number} maxy\n\t     */\n\n\t  }, {\n\t    key: 'getBounds',\n\t    value: function getBounds() {\n\t      var tree = this.tree;\n\n\t      var x = tree.alignLabels ? tree.labelAlign.getX(this) : this.centerx;\n\t      var y = tree.alignLabels ? tree.labelAlign.getY(this) : this.centery;\n\t      var nodeSize = this.getRadius();\n\t      var totalLength = this.getTotalLength();\n\n\t      var minx = void 0;\n\t      var maxx = void 0;\n\t      var miny = void 0;\n\t      var maxy = void 0;\n\t      if (this.angle > Angles.QUARTER && this.angle < Angles.HALF + Angles.QUARTER) {\n\t        minx = x + totalLength * Math.cos(this.angle);\n\t        miny = y + totalLength * Math.sin(this.angle);\n\t        maxx = x - nodeSize;\n\t        maxy = y - nodeSize;\n\t      } else {\n\t        minx = x - nodeSize;\n\t        miny = y - nodeSize;\n\t        maxx = x + totalLength * Math.cos(this.angle);\n\t        maxy = y + totalLength * Math.sin(this.angle);\n\t      }\n\n\t      // uses a caching object to reduce garbage\n\t      var step = tree.prerenderer.getStep(tree) / 2;\n\t      _bounds.minx = Math.min(minx, maxx, x - step);\n\t      _bounds.miny = Math.min(miny, maxy, y - step);\n\t      _bounds.maxx = Math.max(minx, maxx, x + step);\n\t      _bounds.maxy = Math.max(miny, maxy, y + step);\n\n\t      return _bounds;\n\t    }\n\n\t    /**\n\t     * Merges global and local styles together.\n\t     *\n\t     * @returns {Object}\n\t     * @see Branch#leafStyle\n\t     */\n\n\t  }, {\n\t    key: 'getLeafStyle',\n\t    value: function getLeafStyle() {\n\t      var _leafStyle2 = this.leafStyle,\n\t          strokeStyle = _leafStyle2.strokeStyle,\n\t          fillStyle = _leafStyle2.fillStyle;\n\t      var zoom = this.tree.zoom;\n\n\t      // uses a caching object to reduce garbage\n\n\t      _leafStyle.strokeStyle = this.getColour(strokeStyle);\n\t      _leafStyle.fillStyle = this.getColour(fillStyle);\n\n\t      var lineWidth = typeof this.leafStyle.lineWidth !== 'undefined' ? this.leafStyle.lineWidth : this.tree.lineWidth;\n\n\t      _leafStyle.lineWidth = lineWidth / zoom;\n\n\t      return _leafStyle;\n\t    }\n\t  }, {\n\t    key: 'isHighlighted',\n\n\n\t    /**\n\t     * True if the branch is highlighted or hovered.\n\t     *\n\t     * @type boolean\n\t     */\n\t    get: function get() {\n\t      return this.highlighted || this.hovered;\n\t    }\n\n\t    /**\n\t     * The canvas {@link https://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D drawing context} of the parent tree.\n\t     *\n\t     * @type CanvasRenderingContext2D\n\t     */\n\n\t  }, {\n\t    key: 'canvas',\n\t    get: function get() {\n\t      return this.tree.canvas;\n\t    }\n\t  }], [{\n\t    key: 'generateId',\n\t    value: function generateId() {\n\t      return 'pcn' + this.lastId++;\n\t    }\n\t  }]);\n\n\t  return Branch;\n\t}();\n\n\t/**\n\t * Static counter for generated ids.\n\t *\n\t * @static\n\t * @memberof Branch\n\t * @type number\n\t */\n\n\n\tBranch.lastId = 0;\n\n\texports.default = Branch;\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\n\tvar _rectangular = __webpack_require__(9);\n\n\tvar _rectangular2 = _interopRequireDefault(_rectangular);\n\n\tvar _circular = __webpack_require__(14);\n\n\tvar _circular2 = _interopRequireDefault(_circular);\n\n\tvar _radial = __webpack_require__(17);\n\n\tvar _radial2 = _interopRequireDefault(_radial);\n\n\tvar _diagonal = __webpack_require__(20);\n\n\tvar _diagonal2 = _interopRequireDefault(_diagonal);\n\n\tvar _hierarchical = __webpack_require__(23);\n\n\tvar _hierarchical2 = _interopRequireDefault(_hierarchical);\n\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n\texports.default = {\n\t  rectangular: _rectangular2.default,\n\t  circular: _circular2.default,\n\t  radial: _radial2.default,\n\t  diagonal: _diagonal2.default,\n\t  hierarchical: _hierarchical2.default\n\t};\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\n\tvar _BranchRenderer = __webpack_require__(10);\n\n\tvar _BranchRenderer2 = _interopRequireDefault(_BranchRenderer);\n\n\tvar _Prerenderer = __webpack_require__(11);\n\n\tvar _Prerenderer2 = _interopRequireDefault(_Prerenderer);\n\n\tvar _branchRenderer = __webpack_require__(12);\n\n\tvar _branchRenderer2 = _interopRequireDefault(_branchRenderer);\n\n\tvar _prerenderer = __webpack_require__(13);\n\n\tvar _prerenderer2 = _interopRequireDefault(_prerenderer);\n\n\tvar _constants = __webpack_require__(6);\n\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n\tvar labelAlign = {\n\t  getX: function getX(node) {\n\t    return node.tree.farthestNodeFromRootX * node.tree.currentBranchScale;\n\t  },\n\t  getY: function getY(node) {\n\t    return node.centery;\n\t  },\n\t  getLabelOffset: function getLabelOffset(node) {\n\t    return node.tree.farthestNodeFromRootX * node.tree.currentBranchScale - node.centerx;\n\t  }\n\t};\n\n\texports.default = {\n\t  branchRenderer: new _BranchRenderer2.default(_branchRenderer2.default),\n\t  prerenderer: new _Prerenderer2.default(_prerenderer2.default),\n\t  labelAlign: labelAlign,\n\t  branchScalingAxis: 'x',\n\t  getCollapsedMeasurements: function getCollapsedMeasurements(branch) {\n\t    return {\n\t      angle: _constants.Angles.QUARTER,\n\t      radius: branch.tree.step * branch.getNumberOfLeaves()\n\t    };\n\t  }\n\t};\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\t/**\n\t * Draws a branch.\n\t *\n\t * @class\n\t */\n\tvar BranchRenderer = function () {\n\n\t  /**\n\t   * @constructor\n\t   * @param {Object} options\n\t   * @param {function} options.draw\n\t   * @param {function} [options.prepareChild]\n\t   */\n\t  function BranchRenderer(options) {\n\t    _classCallCheck(this, BranchRenderer);\n\n\t    if (!options || !options.draw) {\n\t      throw new Error('`draw` function is required for branch renderers');\n\t    }\n\n\t    this.draw = options.draw;\n\t    this.prepareChild = options.prepareChild;\n\t  }\n\n\t  /**\n\t   * @param {Tree}\n\t   * @param {Branch}\n\t   * @param {boolean=} - if true, rendering skipped.\n\t   */\n\n\n\t  _createClass(BranchRenderer, [{\n\t    key: 'render',\n\t    value: function render(tree, branch, collapse) {\n\t      var i;\n\t      if (collapse || !branch) return;\n\n\t      if (branch.selected) {\n\t        branch.canvas.fillStyle = tree.selectedColour;\n\t      } else {\n\t        branch.canvas.fillStyle = branch.colour;\n\t      }\n\t      branch.canvas.strokeStyle = branch.getColour();\n\n\t      this.draw(tree, branch);\n\n\t      if (branch.pruned) {\n\t        return;\n\t      }\n\n\t      branch.drawNode();\n\n\t      for (i = 0; i < branch.children.length; i++) {\n\t        if (this.prepareChild) {\n\t          this.prepareChild(branch, branch.children[i]);\n\t        }\n\t        this.render(tree, branch.children[i], branch.collapsed || collapse);\n\t      }\n\t    }\n\t  }]);\n\n\t  return BranchRenderer;\n\t}();\n\n\texports.default = BranchRenderer;\n\n/***/ },\n/* 11 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\t/**\n\t * Calculates the tree dimensions before the first draw.\n\t *\n\t * @class\n\t */\n\tvar Prerenderer = function () {\n\n\t  /**\n\t   * @constructor\n\t   * @param {Object} options\n\t   * @param {function} options.getStep - should return the space between each branch.\n\t   * @param {function} options.calculate\n\t   */\n\t  function Prerenderer(options) {\n\t    _classCallCheck(this, Prerenderer);\n\n\t    this.getStep = options.getStep;\n\t    this.calculate = options.calculate;\n\t  }\n\n\t  /**\n\t   * @param {Tree}\n\t   */\n\n\n\t  _createClass(Prerenderer, [{\n\t    key: \"run\",\n\t    value: function run(tree) {\n\t      var step = this.getStep(tree);\n\n\t      tree.root.startx = 0;\n\t      tree.root.starty = 0;\n\t      tree.root.centerx = 0;\n\t      tree.root.centery = 0;\n\t      tree.farthestNodeFromRootX = 0;\n\t      tree.farthestNodeFromRootY = 0;\n\t      tree.currentBranchScale = 1;\n\t      tree.step = step;\n\n\t      this.calculate(tree, step);\n\n\t      tree.initialBranchScalar = tree.branchScalar;\n\n\t      // Assign root startx and starty\n\t      tree.root.startx = tree.root.centerx;\n\t      tree.root.starty = tree.root.centery;\n\t      // Set font size for tree and its branches\n\t      tree.setFontSize(step);\n\t      tree.setMaxLabelLength();\n\t    }\n\t  }]);\n\n\t  return Prerenderer;\n\t}();\n\n\texports.default = Prerenderer;\n\n/***/ },\n/* 12 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = {\n\t  draw: function draw(tree, node) {\n\t    var branchLength = node.branchLength * tree.branchScalar;\n\n\t    node.angle = 0;\n\t    if (node.parent) {\n\t      node.centerx = node.startx + branchLength;\n\t    }\n\n\t    node.canvas.beginPath();\n\t    node.canvas.moveTo(node.startx, node.starty);\n\t    node.canvas.lineTo(node.startx, node.centery);\n\t    node.canvas.lineTo(node.centerx, node.centery);\n\t    node.canvas.stroke();\n\t    node.canvas.closePath();\n\t  },\n\t  prepareChild: function prepareChild(node, child) {\n\t    child.startx = node.centerx;\n\t    child.starty = node.centery;\n\t  }\n\t};\n\n/***/ },\n/* 13 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = {\n\t  getStep: function getStep(tree) {\n\t    return tree.fillCanvas ? tree.canvas.canvas.height / tree.leaves.length : Math.max(tree.canvas.canvas.height / tree.leaves.length, tree.leaves[0].getDiameter() + tree.labelPadding);\n\t  },\n\t  calculate: function calculate(tree, ystep) {\n\t    // Calculate branchScalar based on canvas width and total branch length\n\t    // This is used to transform the X coordinate based on the canvas width and no. of branches\n\t    tree.branchScalar = tree.canvas.canvas.width / tree.maxBranchLength;\n\n\t    // set initial positons of the branches\n\t    for (var i = 0; i < tree.leaves.length; i++) {\n\t      tree.leaves[i].angle = 0; // for rectangle\n\t      // Calculate and assign y coordinate for all the leaves\n\t      tree.leaves[i].centery = i > 0 ? tree.leaves[i - 1].centery + ystep : 0;\n\t      tree.leaves[i].centerx = tree.leaves[i].totalBranchLength * tree.branchScalar;\n\n\t      // Assign x,y position of the farthest node from the root\n\t      if (tree.leaves[i].centerx > tree.farthestNodeFromRootX) {\n\t        tree.farthestNodeFromRootX = tree.leaves[i].centerx;\n\t      }\n\t      if (tree.leaves[i].centery > tree.farthestNodeFromRootY) {\n\t        tree.farthestNodeFromRootY = tree.leaves[i].centery;\n\t      }\n\n\t      // Calculate and assign y coordinate for all the parent branches\n\t      for (var branch = tree.leaves[i]; branch.parent; branch = branch.parent) {\n\t        // Get all the children of a parent\n\t        var childrenArray = branch.parent.children;\n\t        // Assign parent's y coordinate\n\t        // Logic: Total ystep of all the children of this parent / 2\n\t        branch.parent.centery = (childrenArray[0].centery + childrenArray[childrenArray.length - 1].centery) / 2;\n\t      }\n\t    }\n\t  }\n\t};\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\n\tvar _BranchRenderer = __webpack_require__(10);\n\n\tvar _BranchRenderer2 = _interopRequireDefault(_BranchRenderer);\n\n\tvar _Prerenderer = __webpack_require__(11);\n\n\tvar _Prerenderer2 = _interopRequireDefault(_Prerenderer);\n\n\tvar _branchRenderer = __webpack_require__(15);\n\n\tvar _branchRenderer2 = _interopRequireDefault(_branchRenderer);\n\n\tvar _prerenderer = __webpack_require__(16);\n\n\tvar _prerenderer2 = _interopRequireDefault(_prerenderer);\n\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n\tvar labelAlign = {\n\t  getX: function getX(node) {\n\t    return node.centerx + node.labelOffsetX + node.getDiameter() * Math.cos(node.angle);\n\t  },\n\t  getY: function getY(node) {\n\t    return node.centery + node.labelOffsetY + node.getDiameter() * Math.sin(node.angle);\n\t  },\n\t  getLabelOffset: function getLabelOffset(node) {\n\t    return node.labelOffsetX / Math.cos(node.angle);\n\t  }\n\t};\n\n\texports.default = {\n\t  branchRenderer: new _BranchRenderer2.default(_branchRenderer2.default),\n\t  prerenderer: new _Prerenderer2.default(_prerenderer2.default),\n\t  labelAlign: labelAlign,\n\t  getCollapsedMeasurements: function getCollapsedMeasurements(branch) {\n\t    var _branch$tree = branch.tree,\n\t        maxBranchLength = _branch$tree.maxBranchLength,\n\t        branchScalar = _branch$tree.branchScalar,\n\t        step = _branch$tree.step;\n\n\t    return {\n\t      angle: branch.getNumberOfLeaves() * step,\n\t      radius: (maxBranchLength - branch.totalBranchLength) * branchScalar\n\t    };\n\t  },\n\t  calculateFontSize: function calculateFontSize(ystep) {\n\t    return Math.min(ystep * 10 + 4, 40);\n\t  }\n\t};\n\n/***/ },\n/* 15 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = {\n\t  draw: function draw(tree, node) {\n\t    var branchLength = node.totalBranchLength * tree.branchScalar;\n\n\t    node.canvas.beginPath();\n\t    node.canvas.moveTo(node.startx, node.starty);\n\t    node.canvas.lineTo(node.centerx, node.centery);\n\t    node.canvas.stroke();\n\t    node.canvas.closePath();\n\n\t    node.canvas.strokeStyle = node.getColour();\n\n\t    if (node.children.length > 1 && !node.collapsed) {\n\t      node.canvas.beginPath();\n\t      node.canvas.arc(0, 0, branchLength, node.minChildAngle, node.maxChildAngle, node.maxChildAngle < node.minChildAngle);\n\t      node.canvas.stroke();\n\t      node.canvas.closePath();\n\t    }\n\t  }\n\t};\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\n\tvar _utils = __webpack_require__(2);\n\n\tvar Angles = _utils.constants.Angles;\n\texports.default = {\n\t  getStep: function getStep(tree) {\n\t    return Angles.FULL / tree.leaves.length;\n\t  },\n\t  calculate: function calculate(tree, step) {\n\t    tree.branchScalar = Math.min(tree.canvas.canvas.width, tree.canvas.canvas.height) / tree.maxBranchLength;\n\t    // work out radius of tree and the make branch scalar proportinal to the\n\t    var r = tree.leaves.length * tree.leaves[0].getDiameter() / Angles.FULL;\n\t    if (tree.branchScalar * tree.maxBranchLength > r) {\n\t      r = tree.branchScalar * tree.maxBranchLength;\n\t    } else {\n\t      tree.branchScalar = r / tree.maxBranchLength;\n\t    }\n\n\t    for (var i = 0; i < tree.leaves.length; i++) {\n\t      var node = tree.leaves[i];\n\n\t      node.angle = step * i;\n\t      node.startx = node.parent.totalBranchLength * tree.branchScalar * Math.cos(node.angle);\n\t      node.starty = node.parent.totalBranchLength * tree.branchScalar * Math.sin(node.angle);\n\t      node.centerx = node.totalBranchLength * tree.branchScalar * Math.cos(node.angle);\n\t      node.centery = node.totalBranchLength * tree.branchScalar * Math.sin(node.angle);\n\t      node.labelOffsetX = r * Math.cos(node.angle) - node.centerx;\n\t      node.labelOffsetY = r * Math.sin(node.angle) - node.centery;\n\n\t      for (; node.parent; node = node.parent) {\n\t        if (node.getChildNo() === 0) {\n\t          node.parent.angle = node.angle;\n\t          node.parent.minChildAngle = node.angle;\n\t        }\n\t        if (node.getChildNo() === node.parent.children.length - 1) {\n\t          node.parent.maxChildAngle = node.angle;\n\t          node.parent.angle = (node.parent.minChildAngle + node.parent.maxChildAngle) / 2;\n\t          node.parent.startx = (node.parent.totalBranchLength - node.parent.branchLength) * tree.branchScalar * Math.cos(node.parent.angle);\n\t          node.parent.starty = (node.parent.totalBranchLength - node.parent.branchLength) * tree.branchScalar * Math.sin(node.parent.angle);\n\t          node.parent.centerx = node.parent.totalBranchLength * tree.branchScalar * Math.cos(node.parent.angle);\n\t          node.parent.centery = node.parent.totalBranchLength * tree.branchScalar * Math.sin(node.parent.angle);\n\t        } else {\n\t          break;\n\t        }\n\t      }\n\t    }\n\t  }\n\t};\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\n\tvar _BranchRenderer = __webpack_require__(10);\n\n\tvar _BranchRenderer2 = _interopRequireDefault(_BranchRenderer);\n\n\tvar _Prerenderer = __webpack_require__(11);\n\n\tvar _Prerenderer2 = _interopRequireDefault(_Prerenderer);\n\n\tvar _branchRenderer = __webpack_require__(18);\n\n\tvar _branchRenderer2 = _interopRequireDefault(_branchRenderer);\n\n\tvar _prerenderer = __webpack_require__(19);\n\n\tvar _prerenderer2 = _interopRequireDefault(_prerenderer);\n\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n\texports.default = {\n\t  branchRenderer: new _BranchRenderer2.default(_branchRenderer2.default),\n\t  prerenderer: new _Prerenderer2.default(_prerenderer2.default),\n\t  getCollapsedMeasurements: function getCollapsedMeasurements(branch) {\n\t    var _branch$tree = branch.tree,\n\t        maxBranchLength = _branch$tree.maxBranchLength,\n\t        branchScalar = _branch$tree.branchScalar,\n\t        step = _branch$tree.step;\n\n\t    return {\n\t      angle: branch.getNumberOfLeaves() * step,\n\t      radius: (maxBranchLength - branch.totalBranchLength) * branchScalar\n\t    };\n\t  },\n\t  calculateFontSize: function calculateFontSize(ystep) {\n\t    return Math.min(ystep * 50 + 5, 15);\n\t  }\n\t};\n\n/***/ },\n/* 18 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = {\n\t  draw: function draw(tree, node) {\n\t    node.canvas.beginPath();\n\t    node.canvas.moveTo(node.startx, node.starty);\n\t    node.canvas.lineTo(node.centerx, node.centery);\n\t    node.canvas.stroke();\n\t    node.canvas.closePath();\n\t  }\n\t};\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\n\tvar _utils = __webpack_require__(2);\n\n\tvar Angles = _utils.constants.Angles;\n\n\n\tfunction prerenderNodes(tree, node) {\n\t  if (node.parent) {\n\t    node.startx = node.parent.centerx;\n\t    node.starty = node.parent.centery;\n\t  } else {\n\t    node.startx = 0;\n\t    node.starty = 0;\n\t  }\n\t  node.centerx = node.startx + node.branchLength * tree.branchScalar * Math.cos(node.angle);\n\t  node.centery = node.starty + node.branchLength * tree.branchScalar * Math.sin(node.angle);\n\n\t  for (var i = 0; i < node.children.length; i++) {\n\t    prerenderNodes(tree, node.children[i]);\n\t  }\n\t}\n\n\texports.default = {\n\t  getStep: function getStep(tree) {\n\t    return Angles.FULL / tree.leaves.length;\n\t  },\n\t  calculate: function calculate(tree, step) {\n\t    tree.branchScalar = Math.min(tree.canvas.canvas.width, tree.canvas.canvas.height) / tree.maxBranchLength;\n\n\t    for (var i = 0.0; i < tree.leaves.length; i += 1.0) {\n\t      tree.leaves[i].angle = step * i;\n\t      tree.leaves[i].centerx = tree.leaves[i].totalBranchLength * tree.branchScalar * Math.cos(tree.leaves[i].angle);\n\t      tree.leaves[i].centery = tree.leaves[i].totalBranchLength * tree.branchScalar * Math.sin(tree.leaves[i].angle);\n\n\t      for (var node = tree.leaves[i]; node.parent; node = node.parent) {\n\t        if (node.getChildNo() === 0) {\n\t          node.parent.angle = 0;\n\t        }\n\t        node.parent.angle += node.angle * node.getChildCount();\n\t        if (node.getChildNo() === node.parent.children.length - 1) {\n\t          node.parent.angle = node.parent.angle / node.parent.getChildCount();\n\t        } else {\n\t          break;\n\t        }\n\t      }\n\t    }\n\n\t    prerenderNodes(tree, tree.root);\n\t  }\n\t};\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\n\tvar _BranchRenderer = __webpack_require__(10);\n\n\tvar _BranchRenderer2 = _interopRequireDefault(_BranchRenderer);\n\n\tvar _Prerenderer = __webpack_require__(11);\n\n\tvar _Prerenderer2 = _interopRequireDefault(_Prerenderer);\n\n\tvar _branchRenderer = __webpack_require__(21);\n\n\tvar _branchRenderer2 = _interopRequireDefault(_branchRenderer);\n\n\tvar _prerenderer = __webpack_require__(22);\n\n\tvar _prerenderer2 = _interopRequireDefault(_prerenderer);\n\n\tvar _constants = __webpack_require__(6);\n\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n\texports.default = {\n\t  branchRenderer: new _BranchRenderer2.default(_branchRenderer2.default),\n\t  prerenderer: new _Prerenderer2.default(_prerenderer2.default),\n\t  calculateFontSize: function calculateFontSize(ystep) {\n\t    return Math.min(ystep / 2, 10);\n\t  },\n\t  getCollapsedMeasurements: function getCollapsedMeasurements(branch) {\n\t    return {\n\t      angle: _constants.Angles.QUARTER,\n\t      radius: branch.tree.step * branch.getNumberOfLeaves()\n\t    };\n\t  }\n\t};\n\n/***/ },\n/* 21 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = {\n\t  draw: function draw(tree, node) {\n\t    node.angle = 0;\n\t    node.canvas.beginPath();\n\n\t    node.canvas.moveTo(node.startx, node.starty);\n\t    node.canvas.lineTo(node.centerx, node.centery);\n\t    node.canvas.stroke();\n\n\t    node.canvas.closePath();\n\t  },\n\t  prepareChild: function prepareChild(node, child) {\n\t    child.startx = node.centerx;\n\t    child.starty = node.centery;\n\t  }\n\t};\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\n\tvar _utils = __webpack_require__(2);\n\n\tvar Angles = _utils.constants.Angles;\n\texports.default = {\n\t  getStep: function getStep(tree) {\n\t    return Math.max(tree.canvas.canvas.height / tree.leaves.length, tree.leaves[0].getDiameter() + tree.labelPadding);\n\t  },\n\t  calculate: function calculate(tree, ystep) {\n\t    for (var i = 0; i < tree.leaves.length; i++) {\n\t      tree.leaves[i].centerx = 0;\n\t      tree.leaves[i].centery = i > 0 ? tree.leaves[i - 1].centery + ystep : 0;\n\t      tree.leaves[i].angle = 0;\n\n\t      for (var node = tree.leaves[i]; node.parent; node = node.parent) {\n\t        if (node.getChildNo() === node.parent.children.length - 1) {\n\t          node.parent.centery = node.parent.getChildYTotal() / node.parent.getChildCount(); // (node.parent.children.length - 1);\n\t          node.parent.centerx = node.parent.children[0].centerx + (node.parent.children[0].centery - node.parent.centery) * Math.tan(Angles.FORTYFIVE);\n\t          for (var j = 0; j < node.parent.children.length; j++) {\n\t            node.parent.children[j].startx = node.parent.centerx;\n\t            node.parent.children[j].starty = node.parent.centery;\n\t          }\n\t        } else {\n\t          break;\n\t        }\n\t      }\n\t    }\n\t  }\n\t};\n\n/***/ },\n/* 23 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\n\tvar _BranchRenderer = __webpack_require__(10);\n\n\tvar _BranchRenderer2 = _interopRequireDefault(_BranchRenderer);\n\n\tvar _Prerenderer = __webpack_require__(11);\n\n\tvar _Prerenderer2 = _interopRequireDefault(_Prerenderer);\n\n\tvar _branchRenderer = __webpack_require__(24);\n\n\tvar _branchRenderer2 = _interopRequireDefault(_branchRenderer);\n\n\tvar _prerenderer = __webpack_require__(25);\n\n\tvar _prerenderer2 = _interopRequireDefault(_prerenderer);\n\n\tvar _constants = __webpack_require__(6);\n\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n\tvar labelAlign = {\n\t  getX: function getX(node) {\n\t    return node.centerx;\n\t  },\n\t  getY: function getY(node) {\n\t    return node.tree.farthestNodeFromRootY * node.tree.currentBranchScale;\n\t  },\n\t  getLabelOffset: function getLabelOffset(node) {\n\t    return node.tree.farthestNodeFromRootY * node.tree.currentBranchScale - node.centery;\n\t  }\n\t};\n\n\texports.default = {\n\t  branchRenderer: new _BranchRenderer2.default(_branchRenderer2.default),\n\t  prerenderer: new _Prerenderer2.default(_prerenderer2.default),\n\t  labelAlign: labelAlign,\n\t  branchScalingAxis: 'y',\n\t  getCollapsedMeasurements: function getCollapsedMeasurements(branch) {\n\t    return {\n\t      angle: _constants.Angles.QUARTER,\n\t      radius: branch.tree.step * branch.getNumberOfLeaves()\n\t    };\n\t  }\n\t};\n\n/***/ },\n/* 24 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = {\n\t  draw: function draw(tree, node) {\n\t    var branchLength = node.branchLength * tree.branchScalar;\n\n\t    if (node.parent) {\n\t      node.centery = node.starty + branchLength;\n\t    }\n\n\t    node.canvas.beginPath();\n\n\t    if (node !== node.tree.root) {\n\t      node.canvas.moveTo(node.startx, node.starty);\n\t      node.canvas.lineTo(node.centerx, node.starty);\n\t    }\n\n\t    node.canvas.lineTo(node.centerx, node.centery);\n\t    node.canvas.stroke();\n\n\t    node.canvas.closePath();\n\t  },\n\t  prepareChild: function prepareChild(node, child) {\n\t    child.startx = node.centerx;\n\t    child.starty = node.centery;\n\t  }\n\t};\n\n/***/ },\n/* 25 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\n\tvar _utils = __webpack_require__(2);\n\n\tvar Angles = _utils.constants.Angles;\n\texports.default = {\n\t  getStep: function getStep(tree) {\n\t    return tree.fillCanvas ? tree.canvas.canvas.width / tree.leaves.length : Math.max(tree.canvas.canvas.width / tree.leaves.length, tree.leaves[0].getDiameter() + tree.labelPadding);\n\t  },\n\t  calculate: function calculate(tree, xstep) {\n\t    tree.branchScalar = tree.canvas.canvas.height / tree.maxBranchLength;\n\n\t    for (var i = 0; i < tree.leaves.length; i++) {\n\t      tree.leaves[i].angle = Angles.QUARTER;\n\t      tree.leaves[i].centerx = i > 0 ? tree.leaves[i - 1].centerx + xstep : 0;\n\t      tree.leaves[i].centery = tree.leaves[i].totalBranchLength * tree.branchScalar;\n\n\t      for (var node = tree.leaves[i]; node.parent; node = node.parent) {\n\t        if (node.getChildNo() === 0) {\n\t          node.parent.centerx = node.centerx;\n\t        }\n\n\t        if (node.getChildNo() === node.parent.children.length - 1) {\n\t          node.parent.angle = Angles.QUARTER;\n\t          node.parent.centerx = (node.parent.centerx + node.centerx) / 2;\n\t          node.parent.centery = node.parent.totalBranchLength * tree.branchScalar;\n\t          for (var j = 0; j < node.parent.children.length; j++) {\n\t            node.parent.children[j].startx = node.parent.centerx;\n\t            node.parent.children[j].starty = node.parent.centery;\n\t          }\n\t        } else {\n\t          break;\n\t        }\n\t      }\n\t      // Assign x,y position of the farthest node from the root\n\t      if (tree.leaves[i].centerx > tree.farthestNodeFromRootX) {\n\t        tree.farthestNodeFromRootX = tree.leaves[i].centerx;\n\t      }\n\t      if (tree.leaves[i].centery > tree.farthestNodeFromRootY) {\n\t        tree.farthestNodeFromRootY = tree.leaves[i].centery;\n\t      }\n\t    }\n\t  }\n\t};\n\n/***/ },\n/* 26 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\n\tvar _utils = __webpack_require__(2);\n\n\tvar Angles = _utils.constants.Angles;\n\n\n\tfunction drawConnector(canvas, connectingOffset) {\n\t  canvas.beginPath();\n\t  canvas.moveTo(0, 0);\n\t  canvas.lineTo(connectingOffset, 0);\n\t  canvas.stroke();\n\t  canvas.closePath();\n\t}\n\n\tfunction commitPath(canvas, _ref) {\n\t  var lineWidth = _ref.lineWidth,\n\t      strokeStyle = _ref.strokeStyle,\n\t      fillStyle = _ref.fillStyle;\n\n\t  canvas.lineWidth = lineWidth;\n\t  canvas.strokeStyle = strokeStyle;\n\t  canvas.fillStyle = fillStyle;\n\n\t  canvas.fill();\n\t  if (lineWidth > 0 && strokeStyle !== fillStyle) {\n\t    canvas.stroke();\n\t  }\n\t}\n\n\tvar lengthOfSquareSide = function lengthOfSquareSide(radius) {\n\t  return radius * Math.sqrt(2);\n\t};\n\n\t/**\n\t * @function nodeRenderer\n\t * @description A pure function to render a leaf.\n\t *\n\t * @param {CanvasRenderingContext2D} canvas - See {@link Tree#canvas}\n\t * @param {number} radius - See {@link Branch#radius}\n\t * @param {Object} style - See {@link Branch#leafStyle}\n\t */\n\n\texports.default = {\n\t  circle: function circle(canvas, radius, style) {\n\t    // circle takes same area as square inside given radius\n\t    var scaledArea = Math.pow(lengthOfSquareSide(radius), 2);\n\t    var scaledRadius = Math.sqrt(scaledArea / Math.PI);\n\n\t    drawConnector(canvas, radius - scaledRadius);\n\n\t    canvas.beginPath();\n\t    canvas.arc(radius, 0, scaledRadius, 0, Angles.FULL, false);\n\t    canvas.closePath();\n\n\t    commitPath(canvas, style);\n\t  },\n\t  square: function square(canvas, radius, style) {\n\t    var lengthOfSide = lengthOfSquareSide(radius);\n\t    var startX = radius - lengthOfSide / 2;\n\n\t    drawConnector(canvas, startX);\n\n\t    canvas.beginPath();\n\t    canvas.moveTo(startX, 0);\n\t    canvas.lineTo(startX, lengthOfSide / 2);\n\t    canvas.lineTo(startX + lengthOfSide, lengthOfSide / 2);\n\t    canvas.lineTo(startX + lengthOfSide, -lengthOfSide / 2);\n\t    canvas.lineTo(startX, -lengthOfSide / 2);\n\t    canvas.lineTo(startX, 0);\n\t    canvas.closePath();\n\n\t    commitPath(canvas, style);\n\t  },\n\t  star: function star(canvas, radius, style) {\n\t    var cx = radius;\n\t    var cy = 0;\n\t    var spikes = 5;\n\t    var outerRadius = radius;\n\t    var innerRadius = outerRadius * 0.5;\n\t    var step = Math.PI / spikes;\n\n\t    drawConnector(canvas, outerRadius - innerRadius);\n\n\t    var rot = Math.PI / 2 * 3;\n\n\t    canvas.beginPath();\n\t    canvas.moveTo(cx, cy - outerRadius);\n\t    for (var i = 0; i < spikes; i++) {\n\t      var x = cx + Math.cos(rot) * outerRadius;\n\t      var y = cy + Math.sin(rot) * outerRadius;\n\t      canvas.lineTo(x, y);\n\t      rot += step;\n\n\t      x = cx + Math.cos(rot) * innerRadius;\n\t      y = cy + Math.sin(rot) * innerRadius;\n\t      canvas.lineTo(x, y);\n\t      rot += step;\n\t    }\n\t    canvas.lineTo(cx, cy - outerRadius);\n\t    canvas.closePath();\n\n\t    commitPath(canvas, style);\n\t  },\n\t  triangle: function triangle(canvas, radius, style) {\n\t    var lengthOfSide = 2 * radius * Math.cos(30 * Math.PI / 180);\n\t    var height = Math.sqrt(3) / 2 * lengthOfSide;\n\t    var midpoint = 1 / Math.sqrt(3) * (lengthOfSide / 2);\n\n\t    drawConnector(canvas, radius - midpoint);\n\n\t    canvas.beginPath();\n\t    canvas.moveTo(radius, midpoint);\n\t    canvas.lineTo(radius + lengthOfSide / 2, midpoint);\n\t    canvas.lineTo(radius, -(height - midpoint));\n\t    canvas.lineTo(radius - lengthOfSide / 2, midpoint);\n\t    canvas.lineTo(radius, midpoint);\n\t    canvas.closePath();\n\n\t    commitPath(canvas, style);\n\t  }\n\t};\n\n/***/ },\n/* 27 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\t/**\n\t * Tooltip base class\n\t *\n\t * @class\n\t */\n\tvar Tooltip = function () {\n\t  /**\n\t   * @constructor\n\t   * @param {Tree} tree instance\n\t   * @param {Object} [options]\n\t   * @param {string} [options.className=phylocanvas-tooltip]\n\t   * @param {HTMLElement} [options.element=document.createElement('div')]\n\t   * @param {number} [options.zIndex=2000]\n\t   * @param {HTMLElement} [options.parent=tree.containerElement]\n\t   */\n\t  function Tooltip(tree) {\n\t    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n\t        _ref$className = _ref.className,\n\t        className = _ref$className === undefined ? 'phylocanvas-tooltip' : _ref$className,\n\t        _ref$element = _ref.element,\n\t        element = _ref$element === undefined ? document.createElement('div') : _ref$element,\n\t        _ref$zIndex = _ref.zIndex,\n\t        zIndex = _ref$zIndex === undefined ? 2000 : _ref$zIndex,\n\t        _ref$parent = _ref.parent,\n\t        parent = _ref$parent === undefined ? tree.containerElement : _ref$parent;\n\n\t    _classCallCheck(this, Tooltip);\n\n\t    this.tree = tree;\n\t    this.element = element;\n\t    this.element.className = className;\n\t    this.element.style.display = 'none';\n\t    this.element.style.position = 'fixed';\n\t    this.element.style.zIndex = zIndex;\n\t    this.closed = true;\n\n\t    parent.appendChild(this.element);\n\t  }\n\n\t  /**\n\t   * @method\n\t   */\n\n\n\t  _createClass(Tooltip, [{\n\t    key: 'close',\n\t    value: function close() {\n\t      this.element.style.display = 'none';\n\t      this.closed = true;\n\t    }\n\n\t    /**\n\t     * @param {number} [x=100]\n\t     * @param {number} [y=100]\n\t     * @param {Branch} [node]\n\t     */\n\n\t  }, {\n\t    key: 'open',\n\t    value: function open() {\n\t      var x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 100;\n\t      var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100;\n\t      var node = arguments[2];\n\n\t      while (this.element.hasChildNodes()) {\n\t        this.element.removeChild(this.element.firstChild);\n\t      }\n\n\t      this.createContent(node);\n\n\t      this.element.style.top = y + 'px';\n\t      this.element.style.left = x + 'px';\n\n\t      this.element.style.display = 'block';\n\n\t      this.closed = false;\n\t    }\n\n\t    /**\n\t     * @throws an error if not overridden by a subclass.\n\t     */\n\n\t  }, {\n\t    key: 'createContent',\n\t    value: function createContent() {\n\t      throw new Error('Not implemented');\n\t    }\n\t  }]);\n\n\t  return Tooltip;\n\t}();\n\n\texports.default = Tooltip;\n\n\t// named export cannot have a doclet\n\t// @extends not working well\n\n\tvar ChildNodesTooltip = exports.ChildNodesTooltip = function (_Tooltip) {\n\t  _inherits(ChildNodesTooltip, _Tooltip);\n\n\t  /**\n\t   * Tooltip displaying number of child nodes.\n\t   *\n\t   * @constructor\n\t   * @param {Tree} tree instance\n\t   * @param {Object} [options]\n\t   * @see Tooltip\n\t   */\n\t  function ChildNodesTooltip(tree, options) {\n\t    _classCallCheck(this, ChildNodesTooltip);\n\n\t    var _this = _possibleConstructorReturn(this, (ChildNodesTooltip.__proto__ || Object.getPrototypeOf(ChildNodesTooltip)).call(this, tree, options));\n\n\t    _this.element.style.background = 'rgba(97, 97, 97, 0.9)';\n\t    _this.element.style.color = '#fff';\n\t    _this.element.style.cursor = 'pointer';\n\t    _this.element.style.padding = '8px';\n\t    _this.element.style.marginTop = '16px';\n\t    _this.element.style.borderRadius = '2px';\n\t    _this.element.style.textAlign = 'center';\n\t    _this.element.style.fontFamily = _this.tree.font || 'sans-serif';\n\t    _this.element.style.fontSize = '10px';\n\t    _this.element.style.fontWeight = '500';\n\t    return _this;\n\t  }\n\n\t  /**\n\t   * Adds a text node containing the number of children.\n\t   * @override\n\t   */\n\n\n\t  _createClass(ChildNodesTooltip, [{\n\t    key: 'createContent',\n\t    value: function createContent(node) {\n\t      var textNode = document.createTextNode(node.getChildProperties('id').length);\n\t      this.element.appendChild(textNode);\n\t    }\n\t  }]);\n\n\t  return ChildNodesTooltip;\n\t}(Tooltip);\n\n/***/ },\n/* 28 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\n\tvar _Parser = __webpack_require__(29);\n\n\tvar _Parser2 = _interopRequireDefault(_Parser);\n\n\tvar _newick = __webpack_require__(30);\n\n\tvar _newick2 = _interopRequireDefault(_newick);\n\n\tvar _nexus = __webpack_require__(31);\n\n\tvar _nexus2 = _interopRequireDefault(_nexus);\n\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n\texports.default = {\n\t  nexus: new _Parser2.default(_nexus2.default),\n\t  newick: new _Parser2.default(_newick2.default)\n\t};\n\n/***/ },\n/* 29 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\tvar Parser = function () {\n\t  function Parser(_ref) {\n\t    var format = _ref.format,\n\t        parseFn = _ref.parseFn,\n\t        fileExtension = _ref.fileExtension,\n\t        validator = _ref.validator;\n\n\t    _classCallCheck(this, Parser);\n\n\t    this.format = format;\n\t    this.parseFn = parseFn;\n\t    this.fileExtension = fileExtension;\n\t    this.validator = validator;\n\t  }\n\n\t  _createClass(Parser, [{\n\t    key: \"parse\",\n\t    value: function parse(_ref2, callback) {\n\t      var formatString = _ref2.formatString,\n\t          root = _ref2.root,\n\t          _ref2$options = _ref2.options,\n\t          options = _ref2$options === undefined ? { validate: true } : _ref2$options;\n\n\t      if (formatString.match(this.validator) || options.validate === false) {\n\t        return this.parseFn({ string: formatString, root: root, options: options }, callback);\n\t      }\n\t      return callback(new Error(\"Format string does not validate as \\\"\" + this.format + \"\\\"\"));\n\t    }\n\t  }]);\n\n\t  return Parser;\n\t}();\n\n\texports.default = Parser;\n\n/***/ },\n/* 30 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\n\tvar _Branch = __webpack_require__(7);\n\n\tvar _Branch2 = _interopRequireDefault(_Branch);\n\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n\tvar format = 'newick';\n\tvar fileExtension = /\\.nwk$/;\n\tvar validator = /^[\\w\\W\\.\\*\\:(\\),-\\/]+;?\\s*$/gi;\n\n\tfunction isTerminatingChar(terminatingChar) {\n\t  return this === terminatingChar;\n\t}\n\n\tvar labelTerminatingChars = [':', ',', ')', ';'];\n\n\tfunction parseLabel(string) {\n\t  var label = '';\n\t  var _iteratorNormalCompletion = true;\n\t  var _didIteratorError = false;\n\t  var _iteratorError = undefined;\n\n\t  try {\n\t    for (var _iterator = string[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t      var char = _step.value;\n\n\t      if (labelTerminatingChars.some(isTerminatingChar.bind(char))) {\n\t        break;\n\t      }\n\t      label += char;\n\t    }\n\t  } catch (err) {\n\t    _didIteratorError = true;\n\t    _iteratorError = err;\n\t  } finally {\n\t    try {\n\t      if (!_iteratorNormalCompletion && _iterator.return) {\n\t        _iterator.return();\n\t      }\n\t    } finally {\n\t      if (_didIteratorError) {\n\t        throw _iteratorError;\n\t      }\n\t    }\n\t  }\n\n\t  return label;\n\t}\n\n\tfunction parseAnnotations(label, branch) {\n\t  var segments = label.split('**');\n\t  var displayOptions = {};\n\t  branch.id = segments[0];\n\t  if (segments.length === 1) return;\n\t  segments = segments[1].split('*');\n\n\t  for (var b = 0; b < segments.length; b += 2) {\n\t    var value = segments[b + 1];\n\t    switch (segments[b]) {\n\t      case 'nsz':\n\t        displayOptions.size = window.parseInt(value);\n\t        break;\n\t      case 'nsh':\n\t        displayOptions.shape = value;\n\t        break;\n\t      case 'ncol':\n\t        displayOptions.colour = value;\n\t        break;\n\t      default:\n\t        break;\n\t    }\n\t  }\n\t  branch.setDisplay(displayOptions);\n\t}\n\n\tvar nodeTerminatingChars = [')', ',', ';'];\n\n\tfunction parseBranchLength(string) {\n\t  var nodeLength = '';\n\t  var _iteratorNormalCompletion2 = true;\n\t  var _didIteratorError2 = false;\n\t  var _iteratorError2 = undefined;\n\n\t  try {\n\t    for (var _iterator2 = string[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t      var char = _step2.value;\n\n\t      if (nodeTerminatingChars.some(isTerminatingChar.bind(char))) {\n\t        break;\n\t      }\n\t      nodeLength += char;\n\t    }\n\t  } catch (err) {\n\t    _didIteratorError2 = true;\n\t    _iteratorError2 = err;\n\t  } finally {\n\t    try {\n\t      if (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t        _iterator2.return();\n\t      }\n\t    } finally {\n\t      if (_didIteratorError2) {\n\t        throw _iteratorError2;\n\t      }\n\t    }\n\t  }\n\n\t  return nodeLength;\n\t}\n\n\tfunction parseBranch(branch, string, index) {\n\t  var label = parseLabel(string.slice(index));\n\t  var postLabelIndex = index + label.length;\n\t  var branchLengthStr = '';\n\t  if (label.match(/\\*/)) {\n\t    parseAnnotations(label, branch);\n\t  }\n\n\t  if (string[postLabelIndex] === ':') {\n\t    branchLengthStr = parseBranchLength(string.slice(postLabelIndex + 1));\n\t    branch.branchLength = Math.max(parseFloat(branchLengthStr), 0);\n\t  } else {\n\t    branch.branchLength = 0;\n\t  }\n\n\t  if (label) {\n\t    branch.label = label;\n\t  }\n\t  branch.id = label || _Branch2.default.generateId();\n\t  return postLabelIndex + branchLengthStr.length;\n\t}\n\n\tfunction parseFn(_ref, callback) {\n\t  var string = _ref.string,\n\t      root = _ref.root;\n\n\t  var cleanString = string.replace(/(\\r|\\n)/g, '');\n\t  var currentNode = root;\n\n\t  for (var i = 0; i < cleanString.length; i++) {\n\t    var node = void 0;\n\t    switch (cleanString[i]) {\n\t      case '(':\n\t        // new Child\n\t        node = new _Branch2.default();\n\t        currentNode.addChild(node);\n\t        currentNode = node;\n\t        break;\n\t      case ')':\n\t        // return to parent\n\t        currentNode = currentNode.parent;\n\t        break;\n\t      case ',':\n\t        // new sibling\n\t        node = new _Branch2.default();\n\t        currentNode.parent.addChild(node);\n\t        currentNode = node;\n\t        break;\n\t      case ';':\n\t        break;\n\t      default:\n\t        try {\n\t          i = parseBranch(currentNode, cleanString, i);\n\t        } catch (e) {\n\t          return callback(e);\n\t        }\n\t        break;\n\t    }\n\t  }\n\t  return callback();\n\t}\n\n\texports.default = {\n\t  format: format,\n\t  fileExtension: fileExtension,\n\t  validator: validator,\n\t  parseFn: parseFn\n\t};\n\n/***/ },\n/* 31 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\n\tvar _newick = __webpack_require__(30);\n\n\tvar format = 'nexus';\n\tvar fileExtension = /\\.n(ex|xs)$/;\n\tvar validator = /^#NEXUS[\\s\\n;\\w\\W\\.\\*\\:(\\),-=\\[\\]\\/&]+$/i;\n\n\tfunction parseFn(_ref, callback) {\n\t  var string = _ref.string,\n\t      root = _ref.root,\n\t      options = _ref.options;\n\n\t  if (!string.match(/BEGIN TREES/gi)) {\n\t    return callback(new Error('The nexus file does not contain a tree block'));\n\t  }\n\n\t  var name = options.name;\n\n\t  // get everything between BEGIN TREES and next END;\n\n\t  var treeSection = string.match(/BEGIN TREES;[\\S\\s]+END;/i)[0].replace(/BEGIN TREES;\\n/i, '').replace(/END;/i, '');\n\t  // get translate section\n\n\t  var leafNameObject = {};\n\t  var translateSection = treeSection.match(/TRANSLATE[^;]+;/i);\n\t  if (translateSection && translateSection.length) {\n\t    translateSection = translateSection[0];\n\t    //remove translate section from tree section\n\t    treeSection = treeSection.replace(translateSection, '');\n\n\t    //parse translate section into kv pairs\n\t    translateSection = translateSection.replace(/translate|;/gi, '');\n\n\t    var tIntArr = translateSection.split(',');\n\t    for (var i = 0; i < tIntArr.length; i++) {\n\t      var ia = tIntArr[i].trim().replace('\\n', '').split(' ');\n\t      if (ia[0] && ia[1]) {\n\t        leafNameObject[ia[0].trim()] = ia[1].trim();\n\t      }\n\t    }\n\t  }\n\n\t  // find each line starting with tree.\n\t  var tArr = treeSection.split('\\n');\n\t  var trees = {};\n\t  // id name is '' or does not exist, ask user to choose which tree.\n\t  for (var _i = 0; _i < tArr.length; _i++) {\n\t    if (tArr[_i].trim() === '') continue;\n\t    var s = tArr[_i].replace(/tree\\s/i, '');\n\t    if (!name) {\n\t      name = s.trim().match(/^\\w+/)[0];\n\t    }\n\t    trees[name] = s.trim().match(/[\\S]*$/)[0];\n\t  }\n\t  if (!trees[name]) {\n\t    return new Error('tree ' + name + ' does not exist in this NEXUS file');\n\t  }\n\n\t  (0, _newick.parseFn)({ string: trees[name].trim(), root: root }, function (error) {\n\t    if (error) {\n\t      return callback(error);\n\t    }\n\n\t    callback();\n\n\t    // translate in accordance with translate block\n\t    if (leafNameObject) {\n\t      var _iteratorNormalCompletion = true;\n\t      var _didIteratorError = false;\n\t      var _iteratorError = undefined;\n\n\t      try {\n\t        for (var _iterator = Object.keys(leafNameObject)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t          var n = _step.value;\n\n\t          var branches = root.tree.branches;\n\t          var branch = branches[n];\n\t          delete branches[n];\n\t          branch.id = leafNameObject[n];\n\t          branches[branch.id] = branch;\n\t        }\n\t      } catch (err) {\n\t        _didIteratorError = true;\n\t        _iteratorError = err;\n\t      } finally {\n\t        try {\n\t          if (!_iteratorNormalCompletion && _iterator.return) {\n\t            _iterator.return();\n\t          }\n\t        } finally {\n\t          if (_didIteratorError) {\n\t            throw _iteratorError;\n\t          }\n\t        }\n\t      }\n\n\t      root.tree.draw();\n\t    }\n\t  });\n\t}\n\n\texports.default = {\n\t  parseFn: parseFn,\n\t  format: format,\n\t  fileExtension: fileExtension,\n\t  validator: validator\n\t};\n\n/***/ }\n/******/ ])\n});\n;","!function(e,t){if(\"object\"==typeof exports&&\"object\"==typeof module)module.exports=t(require(\"phylocanvas\"));else if(\"function\"==typeof define&&define.amd)define([\"phylocanvas\"],t);else{var a=t(\"object\"==typeof exports?require(\"phylocanvas\"):e.phylocanvas);for(var r in a)(\"object\"==typeof exports?exports:e)[r]=a[r]}}(this,function(e){return function(e){function t(r){if(a[r])return a[r].exports;var n=a[r]={exports:{},id:r,loaded:!1};return e[r].call(n.exports,n,n.exports,t),n.loaded=!0,n.exports}var a={};return t.m=e,t.c=a,t.p=\"\",t(0)}([function(e,t,a){\"use strict\";function r(e){return e&&e.__esModule?e:{\"default\":e}}function n(e){if(Array.isArray(e)){for(var t=0,a=Array(e.length);t<e.length;t++)a[t]=e[t];return a}return Array.from(e)}function l(e){return\"circular\"===e.treeType||\"radial\"===e.treeType}function i(e){return e.metadata.font?e.metadata.font:Math.min(e.textSize,e.metadata.blockLength)+\"pt \"+e.font}function o(e){var t=e.metadata,a=t.columns,r=t.propertyName;return a.length>0?a:Object.keys(e.leaves[0][r])}function d(e){if(!e.metadata.showHeaders)return!1;var t=e.treeType,a=e.alignLabels;return\"diagonal\"===t||a&&\"rectangular\"===t||\"hierarchical\"===t}function h(e){var t=e.metadata,a=t.showLabels,r=t.blockLength,n=t.padding,l=t._maxLabelWidth,i=o(e);return(a?i.reduce(function(e,t){return l[t]},0):0)+i.length*(r+n)}function c(e){if(e.metadata._maxBlockSize)return e.metadata._maxBlockSize;if(l(e)){var t=0,a=!0,r=!1,n=void 0;try{for(var i,o=e.leaves[Symbol.iterator]();!(a=(i=o.next()).done);a=!0){var d=i.value,h=d.getLabelStartX();(e.showLabels||e.hoverLabel&&d.highlighted)&&(h+=e.maxLabelLength[e.treeType]);var c=e.alignLabels?e.labelAlign.getLabelOffset(d):0,s=Math.hypot(d.centerx-d.startx,d.centery-d.starty)+h+c;s>t&&(t=s)}}catch(f){r=!0,n=f}finally{try{!a&&o[\"return\"]&&o[\"return\"]()}finally{if(r)throw n}}return e.metadata._maxBlockSize=p.FULL*t/e.leaves.length,e.metadata._maxBlockSize}return e.step}function s(e,t,a){var r=e.tree.canvas,n=e.tree.treeType,l=e.tree.metadata,o=l._maxLabelWidth,d=l._maxHeaderWidth,h=l._maxHeaderHeight,c=l.blockLength,s=l.padding,f=l.headerAngle,u=l.showLabels,y=l.fillStyle,v=l.strokeStyle,m=l.underlineHeaders,b=e.tree.metadata.columns.length>0?e.tree.metadata.columns:Object.keys(e.data),g=e.tree.metadata.lineWidth/e.tree.zoom;r.font=i(e.tree),r.fillStyle=y,r.strokeStyle=v,r.lineWidth=g;var p=f/180*Math.PI,x=a+h/2+Math.sin(p)*d/2,L=\"hierarchical\"===n?-1:1,_=t,S=!0,w=!1,k=void 0;try{for(var T,A=b[Symbol.iterator]();!(S=(T=A.next()).done);S=!0){var H=T.value,M=c+(u?o[H]:0);r.textAlign=\"center\",r.textBaseline=\"middle\";var W=_+M/2;r.rotate(-p),r.fillText(H,Math.cos(p)*W+Math.sin(p)*L*x,Math.sin(p)*W+Math.cos(p)*-L*x),r.rotate(p),m&&(r.beginPath(),r.moveTo(_,-L*a),r.lineTo(_+M,-L*a),r.stroke(),r.closePath()),_+=M+s}}catch(j){w=!0,k=j}finally{try{!S&&A[\"return\"]&&A[\"return\"]()}finally{if(w)throw k}}}function f(e){var t=e.tree.canvas,a=e.tree,r=e.tree.metadata,n=r._maxLabelWidth,o=r.blockSize,h=r.blockLength,f=r.padding,u=r.propertyName,y=r.fillStyle,v=r.columns,m=r.showLabels,b=e.getLabelStartX(),g=0;(a.showLabels||a.hoverLabel&&e.highlighted)&&(b+=a.maxLabelLength[a.treeType]);var x=c(a),L=null!==o?Math.min(x,o):x;a.alignLabels&&(b+=a.labelAlign.getLabelOffset(e)),b+=f,g-=L/2,!a.metadata._headingDrawn&&d(a)&&(s(e,b,L/2+f),a.metadata._headingDrawn=!0);var _=this[u];if(Object.keys(_).length>0){t.beginPath();var S=v.length>0?v:Object.keys(_),w=1,k=l(a)&&a.alignLabels?p.FULL*h/a.leaves.length:0,T=i(a),A=!0,H=!1,M=void 0;try{for(var W,j=S[Symbol.iterator]();!(A=(W=j.next()).done);A=!0){var B=W.value;\"undefined\"!=typeof _[B]&&\"transparent\"!==e.leafStyle.fillStyle&&(t.fillStyle=_[B].colour||_[B],t.fillRect(b,g,h,L+w*k),m&&\"string\"==typeof _[B].label&&(t.font=T,t.fillStyle=y,t.textAlign=\"left\",t.textBaseline=\"middle\",t.fillText(_[B].label,b+h+f/4,g+L/2))),b+=h+f,m&&(b+=n[B]),w++}}catch(z){H=!0,M=z}finally{try{!A&&j[\"return\"]&&j[\"return\"]()}finally{if(H)throw M}}t.closePath()}}function u(e){var t=e.canvas,a=e.metadata,r=a.showLabels,n=a.propertyName,l=a.headerAngle,d=o(e),h=l/180*Math.PI;t.font=i(e),e.metadata._maxHeaderWidth=0,e.metadata._maxHeaderHeight=t.measureText(\"M\").width;var c={};if(r){var s=!0,f=!1,u=void 0;try{for(var y,v=d[Symbol.iterator]();!(s=(y=v.next()).done);s=!0){var m=y.value,b=t.measureText(m).width;c[m]=Math.cos(h)*b,b>e.metadata._maxHeaderWidth&&(e.metadata._maxHeaderWidth=b)}}catch(g){f=!0,u=g}finally{try{!s&&v[\"return\"]&&v[\"return\"]()}finally{if(f)throw u}}var p=!0,x=!1,L=void 0;try{for(var _,S=e.leaves[Symbol.iterator]();!(p=(_=S.next()).done);p=!0){var w=_.value,k=w[n],T=!0,A=!1,H=void 0;try{for(var M,W=d[Symbol.iterator]();!(T=(M=W.next()).done);T=!0){var j=M.value;if(k[j]&&\"string\"==typeof k[j].label){var B=t.measureText(k[j].label).width;B>c[j]&&(c[j]=B)}}}catch(g){A=!0,H=g}finally{try{!T&&W[\"return\"]&&W[\"return\"]()}finally{if(A)throw H}}}}catch(g){x=!0,L=g}finally{try{!p&&S[\"return\"]&&S[\"return\"]()}finally{if(x)throw L}}}else{var z=!0,O=!1,P=void 0;try{for(var D,N=d[Symbol.iterator]();!(z=(D=N.next()).done);z=!0){var I=D.value;c[I]=0}}catch(g){O=!0,P=g}finally{try{!z&&N[\"return\"]&&N[\"return\"]()}finally{if(O)throw P}}}e.metadata._maxLabelWidth=c}function y(e){e(b[\"default\"],\"createTree\",function(e,t){var a=e.apply(void 0,n(t));return a.metadata=Object.assign({},x,a.metadata||{}),a});var t=m.Tree.prototype.__lookupGetter__(\"alignLabels\");m.Tree.prototype.__defineGetter__(\"alignLabels\",function(){return this.metadata.active?this.labelAlign&&this.labelAlignEnabled:t.call(this)}),e(m.Prerenderer,\"run\",function(e,t){e.apply(this,t);var a=v(t,1),r=a[0];u(r),r.metadata._maxBlockSize=null}),e(m.Tree,\"draw\",function(e,t){this.metadata.active&&(this.metadata._headingDrawn=!1),e.apply(this,t)}),e(m.Tree,\"getBounds\",function(e,t){var a=e.apply(this,t);if(this.metadata.active){var r=a[0][0],n=a[0][1],l=a[1][0],i=a[1][1],o=this.metadata,d=o._maxHeaderWidth,h=o._maxHeaderHeight,c=this.treeType,s=\"rectangular\"===c||\"diagonal\"===c,f=\"hierarchical\"===c;return[[r-(f?d+h:0),n-(s?d+h:0)],[l,i]]}return a}),e(m.Branch,\"drawLeaf\",function(e){e.call(this),this.tree.metadata.active&&f.call(this,this)}),e(m.Branch,\"getTotalLength\",function(e){var t=e.call(this);return this.tree.metadata.active&&(t+=h(this.tree)),t})}Object.defineProperty(t,\"__esModule\",{value:!0});var v=function(){function e(e,t){var a=[],r=!0,n=!1,l=void 0;try{for(var i,o=e[Symbol.iterator]();!(r=(i=o.next()).done)&&(a.push(i.value),!t||a.length!==t);r=!0);}catch(d){n=!0,l=d}finally{try{!r&&o[\"return\"]&&o[\"return\"]()}finally{if(n)throw l}}return a}return function(t,a){if(Array.isArray(t))return t;if(Symbol.iterator in Object(t))return e(t,a);throw new TypeError(\"Invalid attempt to destructure non-iterable instance\")}}();t[\"default\"]=y;var m=a(1),b=r(m),g=m.utils.constants,p=g.Angles,x={_headingDrawn:!1,_maxLabelWidth:{},active:!0,showHeaders:!0,showLabels:!0,blockLength:32,blockSize:null,padding:8,columns:[],propertyName:\"data\",underlineHeaders:!0,headerAngle:90,fillStyle:\"black\",strokeStyle:\"black\",lineWidth:1,font:null}},function(t,a){t.exports=e}])});","!function(t,e){if(\"object\"==typeof exports&&\"object\"==typeof module)module.exports=e();else if(\"function\"==typeof define&&define.amd)define([],e);else{var r=e();for(var i in r)(\"object\"==typeof exports?exports:t)[i]=r[i]}}(this,function(){return function(t){function e(i){if(r[i])return r[i].exports;var n=r[i]={exports:{},id:i,loaded:!1};return t[i].call(n.exports,n,n.exports,e),n.loaded=!0,n.exports}var r={};return e.m=t,e.c=r,e.p=\"\",e(0)}([function(t,e,r){\"use strict\";function i(t){return t&&t.__esModule?t:{\"default\":t}}function n(t){if(Array.isArray(t)){for(var e=0,r=Array(t.length);e<t.length;e++)r[e]=t[e];return r}return Array.from(t)}function o(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}function a(t){t(this,\"createTree\",function(t,e){var r=t.apply(void 0,n(e)),i=s(e,2),o=i[1],a=void 0===o?{}:o;return r.exportSVG=new p(r,a.exportSVG),r}),this.ExportSVG=p}Object.defineProperty(e,\"__esModule\",{value:!0});var s=function(){function t(t,e){var r=[],i=!0,n=!1,o=void 0;try{for(var a,s=t[Symbol.iterator]();!(i=(a=s.next()).done)&&(r.push(a.value),!e||r.length!==e);i=!0);}catch(l){n=!0,o=l}finally{try{!i&&s[\"return\"]&&s[\"return\"]()}finally{if(n)throw o}}return r}return function(e,r){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return t(e,r);throw new TypeError(\"Invalid attempt to destructure non-iterable instance\")}}(),l=function(){function t(t,e){for(var r=0;r<e.length;r++){var i=e[r];i.enumerable=i.enumerable||!1,i.configurable=!0,\"value\"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,r,i){return r&&t(e.prototype,r),i&&t(e,i),e}}();e[\"default\"]=a;var h=r(1),c=i(h),p=function(){function t(e){var r=arguments.length<=1||void 0===arguments[1]?{}:arguments[1];o(this,t),this.tree=e,this.canvas=e.canvas.canvas,Object.assign(this,r)}return l(t,[{key:\"exportSVG\",value:function(t){var e=arguments.length<=1||void 0===arguments[1]?[]:arguments[1],r=this.tree.canvas,i=this.tree.canvas.canvas,n=i.width,o=i.height,a=new c[\"default\"](n,o);this.tree.canvas=a,this.tree.draw();var s=a[t].apply(a,e);return this.tree.canvas=r,this.tree.draw(),s}},{key:\"getSVG\",value:function(){return this.exportSVG(\"getSvg\")}},{key:\"getSerialisedSVG\",value:function(){var t=!(arguments.length<=0||void 0===arguments[0])&&arguments[0];return this.exportSVG(\"getSerializedSvg\",[t])}}]),t}()},function(t,e,r){(function(t){\"use strict\";var e=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol?\"symbol\":typeof t};!function(){function r(t,e){var r,i=Object.keys(e);for(r=0;r<i.length;r++)t=t.replace(new RegExp(\"\\\\{\"+i[r]+\"\\\\}\",\"gi\"),e[i[r]]);return t}function i(t){var e,r,i;if(!t)throw new Error(\"cannot create a random attribute name for an undefined object\");e=\"ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz\",r=\"\";do for(r=\"\",i=0;i<12;i++)r+=e[Math.floor(Math.random()*e.length)];while(t[r]);return r}function n(t,e){var r,i,n,o={};for(t=t.split(\",\"),e=e||10,r=0;r<t.length;r+=2)i=\"&\"+t[r+1]+\";\",n=parseInt(t[r],e),o[i]=\"&#\"+n+\";\";return o[\"\\\\xa0\"]=\"&#160;\",o}function o(t){var e={left:\"start\",right:\"end\",center:\"middle\",start:\"start\",end:\"end\"};return e[t]||e.start}function a(t){var e={alphabetic:\"alphabetic\",hanging:\"hanging\",top:\"text-before-edge\",bottom:\"text-after-edge\",middle:\"central\"};return e[t]||e.alphabetic}var s,l,h,c,p;p=n(\"50,nbsp,51,iexcl,52,cent,53,pound,54,curren,55,yen,56,brvbar,57,sect,58,uml,59,copy,5a,ordf,5b,laquo,5c,not,5d,shy,5e,reg,5f,macr,5g,deg,5h,plusmn,5i,sup2,5j,sup3,5k,acute,5l,micro,5m,para,5n,middot,5o,cedil,5p,sup1,5q,ordm,5r,raquo,5s,frac14,5t,frac12,5u,frac34,5v,iquest,60,Agrave,61,Aacute,62,Acirc,63,Atilde,64,Auml,65,Aring,66,AElig,67,Ccedil,68,Egrave,69,Eacute,6a,Ecirc,6b,Euml,6c,Igrave,6d,Iacute,6e,Icirc,6f,Iuml,6g,ETH,6h,Ntilde,6i,Ograve,6j,Oacute,6k,Ocirc,6l,Otilde,6m,Ouml,6n,times,6o,Oslash,6p,Ugrave,6q,Uacute,6r,Ucirc,6s,Uuml,6t,Yacute,6u,THORN,6v,szlig,70,agrave,71,aacute,72,acirc,73,atilde,74,auml,75,aring,76,aelig,77,ccedil,78,egrave,79,eacute,7a,ecirc,7b,euml,7c,igrave,7d,iacute,7e,icirc,7f,iuml,7g,eth,7h,ntilde,7i,ograve,7j,oacute,7k,ocirc,7l,otilde,7m,ouml,7n,divide,7o,oslash,7p,ugrave,7q,uacute,7r,ucirc,7s,uuml,7t,yacute,7u,thorn,7v,yuml,ci,fnof,sh,Alpha,si,Beta,sj,Gamma,sk,Delta,sl,Epsilon,sm,Zeta,sn,Eta,so,Theta,sp,Iota,sq,Kappa,sr,Lambda,ss,Mu,st,Nu,su,Xi,sv,Omicron,t0,Pi,t1,Rho,t3,Sigma,t4,Tau,t5,Upsilon,t6,Phi,t7,Chi,t8,Psi,t9,Omega,th,alpha,ti,beta,tj,gamma,tk,delta,tl,epsilon,tm,zeta,tn,eta,to,theta,tp,iota,tq,kappa,tr,lambda,ts,mu,tt,nu,tu,xi,tv,omicron,u0,pi,u1,rho,u2,sigmaf,u3,sigma,u4,tau,u5,upsilon,u6,phi,u7,chi,u8,psi,u9,omega,uh,thetasym,ui,upsih,um,piv,812,bull,816,hellip,81i,prime,81j,Prime,81u,oline,824,frasl,88o,weierp,88h,image,88s,real,892,trade,89l,alefsym,8cg,larr,8ch,uarr,8ci,rarr,8cj,darr,8ck,harr,8dl,crarr,8eg,lArr,8eh,uArr,8ei,rArr,8ej,dArr,8ek,hArr,8g0,forall,8g2,part,8g3,exist,8g5,empty,8g7,nabla,8g8,isin,8g9,notin,8gb,ni,8gf,prod,8gh,sum,8gi,minus,8gn,lowast,8gq,radic,8gt,prop,8gu,infin,8h0,ang,8h7,and,8h8,or,8h9,cap,8ha,cup,8hb,int,8hk,there4,8hs,sim,8i5,cong,8i8,asymp,8j0,ne,8j1,equiv,8j4,le,8j5,ge,8k2,sub,8k3,sup,8k4,nsub,8k6,sube,8k7,supe,8kl,oplus,8kn,otimes,8l5,perp,8m5,sdot,8o8,lceil,8o9,rceil,8oa,lfloor,8ob,rfloor,8p9,lang,8pa,rang,9ea,loz,9j0,spades,9j3,clubs,9j5,hearts,9j6,diams,ai,OElig,aj,oelig,b0,Scaron,b1,scaron,bo,Yuml,m6,circ,ms,tilde,802,ensp,803,emsp,809,thinsp,80c,zwnj,80d,zwj,80e,lrm,80f,rlm,80j,ndash,80k,mdash,80o,lsquo,80p,rsquo,80q,sbquo,80s,ldquo,80t,rdquo,80u,bdquo,810,dagger,811,Dagger,81g,permil,81p,lsaquo,81q,rsaquo,85c,euro\",32),s={strokeStyle:{svgAttr:\"stroke\",canvas:\"#000000\",svg:\"none\",apply:\"stroke\"},fillStyle:{svgAttr:\"fill\",canvas:\"#000000\",svg:null,apply:\"fill\"},lineCap:{svgAttr:\"stroke-linecap\",canvas:\"butt\",svg:\"butt\",apply:\"stroke\"},lineJoin:{svgAttr:\"stroke-linejoin\",canvas:\"miter\",svg:\"miter\",apply:\"stroke\"},miterLimit:{svgAttr:\"stroke-miterlimit\",canvas:10,svg:4,apply:\"stroke\"},lineWidth:{svgAttr:\"stroke-width\",canvas:1,svg:1,apply:\"stroke\"},globalAlpha:{svgAttr:\"opacity\",canvas:1,svg:1,apply:\"fill stroke\"},font:{canvas:\"10px sans-serif\"},shadowColor:{canvas:\"#000000\"},shadowOffsetX:{canvas:0},shadowOffsetY:{canvas:0},shadowBlur:{canvas:0},textAlign:{canvas:\"start\"},textBaseline:{canvas:\"alphabetic\"}},h=function(t,e){this.__root=t,this.__ctx=e},h.prototype.addColorStop=function(t,e){var i,n,o=this.__ctx.__createElement(\"stop\");o.setAttribute(\"offset\",t),e.indexOf(\"rgba\")!==-1?(i=/rgba\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d?\\.?\\d*)\\s*\\)/gi,n=i.exec(e),o.setAttribute(\"stop-color\",r(\"rgb({r},{g},{b})\",{r:n[1],g:n[2],b:n[3]})),o.setAttribute(\"stop-opacity\",n[4])):o.setAttribute(\"stop-color\",e),this.__root.appendChild(o)},c=function(t,e){this.__root=t,this.__ctx=e},l=function(t){var e,r={width:500,height:500,enableMirroring:!1};return arguments.length>1?(e=r,e.width=arguments[0],e.height=arguments[1]):e=t?t:r,this instanceof l?(this.width=e.width||r.width,this.height=e.height||r.height,this.enableMirroring=void 0!==e.enableMirroring?e.enableMirroring:r.enableMirroring,this.canvas=this,this.__document=e.document||document,this.__canvas=this.__document.createElement(\"canvas\"),this.__ctx=this.__canvas.getContext(\"2d\"),this.__setDefaultStyles(),this.__stack=[this.__getStyleState()],this.__groupStack=[],this.__root=this.__document.createElementNS(\"http://www.w3.org/2000/svg\",\"svg\"),this.__root.setAttribute(\"version\",1.1),this.__root.setAttribute(\"xmlns\",\"http://www.w3.org/2000/svg\"),this.__root.setAttributeNS(\"http://www.w3.org/2000/xmlns/\",\"xmlns:xlink\",\"http://www.w3.org/1999/xlink\"),this.__root.setAttribute(\"width\",this.width),this.__root.setAttribute(\"height\",this.height),this.__ids={},this.__defs=this.__document.createElementNS(\"http://www.w3.org/2000/svg\",\"defs\"),this.__root.appendChild(this.__defs),this.__currentElement=this.__document.createElementNS(\"http://www.w3.org/2000/svg\",\"g\"),void this.__root.appendChild(this.__currentElement)):new l(e)},l.prototype.__createElement=function(t,e,r){\"undefined\"==typeof e&&(e={});var i,n,o=this.__document.createElementNS(\"http://www.w3.org/2000/svg\",t),a=Object.keys(e);for(r&&(o.setAttribute(\"fill\",\"none\"),o.setAttribute(\"stroke\",\"none\")),i=0;i<a.length;i++)n=a[i],o.setAttribute(n,e[n]);return o},l.prototype.__setDefaultStyles=function(){var t,e,r=Object.keys(s);for(t=0;t<r.length;t++)e=r[t],this[e]=s[e].canvas},l.prototype.__applyStyleState=function(t){var e,r,i=Object.keys(t);for(e=0;e<i.length;e++)r=i[e],this[r]=t[r]},l.prototype.__getStyleState=function(){var t,e,r={},i=Object.keys(s);for(t=0;t<i.length;t++)e=i[t],r[e]=this[e];return r},l.prototype.__applyStyleToCurrentElement=function(t){var e,i,n,o,a,l,p=Object.keys(s);for(e=0;e<p.length;e++)if(i=s[p[e]],n=this[p[e]],i.apply)if(i.apply.indexOf(\"fill\")!==-1&&n instanceof c){if(n.__ctx)for(;n.__ctx.__defs.childNodes.length;)o=n.__ctx.__defs.childNodes[0].getAttribute(\"id\"),this.__ids[o]=o,this.__defs.appendChild(n.__ctx.__defs.childNodes[0]);this.__currentElement.setAttribute(\"fill\",r(\"url(#{id})\",{id:n.__root.getAttribute(\"id\")}))}else i.apply.indexOf(\"fill\")!==-1&&n instanceof h?this.__currentElement.setAttribute(\"fill\",r(\"url(#{id})\",{id:n.__root.getAttribute(\"id\")})):i.apply.indexOf(t)!==-1&&i.svg!==n&&(\"stroke\"!==i.svgAttr&&\"fill\"!==i.svgAttr||n.indexOf(\"rgba\")===-1?this.__currentElement.setAttribute(i.svgAttr,n):(a=/rgba\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d?\\.?\\d*)\\s*\\)/gi,l=a.exec(n),this.__currentElement.setAttribute(i.svgAttr,r(\"rgb({r},{g},{b})\",{r:l[1],g:l[2],b:l[3]})),this.__currentElement.setAttribute(i.svgAttr+\"-opacity\",l[4])))},l.prototype.__closestGroupOrSvg=function(t){return t=t||this.__currentElement,\"g\"===t.nodeName||\"svg\"===t.nodeName?t:this.__closestGroupOrSvg(t.parentNode)},l.prototype.getSerializedSvg=function(t){var e,r,i,n,o,a,s=(new XMLSerializer).serializeToString(this.__root);if(a=/xmlns=\"http:\\/\\/www\\.w3\\.org\\/2000\\/svg\".+xmlns=\"http:\\/\\/www\\.w3\\.org\\/2000\\/svg/gi,a.test(s)&&(s=s.replace('xmlns=\"http://www.w3.org/2000/svg','xmlns:xlink=\"http://www.w3.org/1999/xlink')),t)for(e=Object.keys(p),r=0;r<e.length;r++)i=e[r],n=p[i],o=new RegExp(i,\"gi\"),o.test(s)&&(s=s.replace(o,n));return s},l.prototype.getSvg=function(){return this.__root},l.prototype.save=function(){var t=this.__createElement(\"g\"),e=this.__closestGroupOrSvg();this.__groupStack.push(e),e.appendChild(t),this.__currentElement=t,this.__stack.push(this.__getStyleState())},l.prototype.restore=function(){this.__currentElement=this.__groupStack.pop();var t=this.__stack.pop();this.__applyStyleState(t)},l.prototype.__addTransform=function(t){var e=this.__closestGroupOrSvg();if(e.childNodes.length>0){var r=this.__createElement(\"g\");e.appendChild(r),this.__currentElement=r}var i=this.__currentElement.getAttribute(\"transform\");i?i+=\" \":i=\"\",i+=t,this.__currentElement.setAttribute(\"transform\",i)},l.prototype.scale=function(t,e){void 0===e&&(e=t),this.__addTransform(r(\"scale({x},{y})\",{x:t,y:e}))},l.prototype.rotate=function(t){var e=180*t/Math.PI;this.__addTransform(r(\"rotate({angle},{cx},{cy})\",{angle:e,cx:0,cy:0}))},l.prototype.translate=function(t,e){this.__addTransform(r(\"translate({x},{y})\",{x:t,y:e}))},l.prototype.transform=function(t,e,i,n,o,a){this.__addTransform(r(\"matrix({a},{b},{c},{d},{e},{f})\",{a:t,b:e,c:i,d:n,e:o,f:a}))},l.prototype.beginPath=function(){var t,e;this.__currentDefaultPath=\"\",this.__currentPosition={},t=this.__createElement(\"path\",{},!0),e=this.__closestGroupOrSvg(),e.appendChild(t),this.__currentElement=t},l.prototype.__applyCurrentDefaultPath=function(){if(\"path\"!==this.__currentElement.nodeName)throw new Error(\"Attempted to apply path command to node \"+this.__currentElement.nodeName);var t=this.__currentDefaultPath;this.__currentElement.setAttribute(\"d\",t)},l.prototype.__addPathCommand=function(t){this.__currentDefaultPath+=\" \",this.__currentDefaultPath+=t},l.prototype.moveTo=function(t,e){\"path\"!==this.__currentElement.nodeName&&this.beginPath(),this.__currentPosition={x:t,y:e},this.__addPathCommand(r(\"M {x} {y}\",{x:t,y:e}))},l.prototype.closePath=function(){this.__addPathCommand(\"Z\")},l.prototype.lineTo=function(t,e){this.__currentPosition={x:t,y:e},this.__currentDefaultPath.indexOf(\"M\")>-1?this.__addPathCommand(r(\"L {x} {y}\",{x:t,y:e})):this.__addPathCommand(r(\"M {x} {y}\",{x:t,y:e}))},l.prototype.bezierCurveTo=function(t,e,i,n,o,a){this.__currentPosition={x:o,y:a},this.__addPathCommand(r(\"C {cp1x} {cp1y} {cp2x} {cp2y} {x} {y}\",{cp1x:t,cp1y:e,cp2x:i,cp2y:n,x:o,y:a}))},l.prototype.quadraticCurveTo=function(t,e,i,n){this.__currentPosition={x:i,y:n},this.__addPathCommand(r(\"Q {cpx} {cpy} {x} {y}\",{cpx:t,cpy:e,x:i,y:n}))};var u=function(t){var e=Math.sqrt(t[0]*t[0]+t[1]*t[1]);return[t[0]/e,t[1]/e]};l.prototype.arcTo=function(t,e,r,i,n){var o=this.__currentPosition&&this.__currentPosition.x,a=this.__currentPosition&&this.__currentPosition.y;if(\"undefined\"!=typeof o&&\"undefined\"!=typeof a){if(n<0)throw new Error(\"IndexSizeError: The radius provided (\"+n+\") is negative.\");if(o===t&&a===e||t===r&&e===i||0===n)return void this.lineTo(t,e);var s=u([o-t,a-e]),l=u([r-t,i-e]);if(s[0]*l[1]===s[1]*l[0])return void this.lineTo(t,e);var h=s[0]*l[0]+s[1]*l[1],c=Math.acos(Math.abs(h)),p=u([s[0]+l[0],s[1]+l[1]]),d=n/Math.sin(c/2),_=t+d*p[0],f=e+d*p[1],g=[-s[1],s[0]],m=[l[1],-l[0]],y=function(t){var e=t[0],r=t[1];return r>=0?Math.acos(e):-Math.acos(e)},v=y(g),x=y(m);this.lineTo(_+g[0]*n,f+g[1]*n),this.arc(_,f,n,v,x)}},l.prototype.stroke=function(){\"path\"===this.__currentElement.nodeName&&this.__currentElement.setAttribute(\"paint-order\",\"fill stroke markers\"),this.__applyCurrentDefaultPath(),this.__applyStyleToCurrentElement(\"stroke\")},l.prototype.fill=function(){\"path\"===this.__currentElement.nodeName&&this.__currentElement.setAttribute(\"paint-order\",\"stroke fill markers\"),this.__applyCurrentDefaultPath(),this.__applyStyleToCurrentElement(\"fill\")},l.prototype.rect=function(t,e,r,i){\"path\"!==this.__currentElement.nodeName&&this.beginPath(),this.moveTo(t,e),this.lineTo(t+r,e),this.lineTo(t+r,e+i),this.lineTo(t,e+i),this.lineTo(t,e),this.closePath()},l.prototype.fillRect=function(t,e,r,i){var n,o;n=this.__createElement(\"rect\",{x:t,y:e,width:r,height:i},!0),o=this.__closestGroupOrSvg(),o.appendChild(n),this.__currentElement=n,this.__applyStyleToCurrentElement(\"fill\")},l.prototype.strokeRect=function(t,e,r,i){var n,o;n=this.__createElement(\"rect\",{x:t,y:e,width:r,height:i},!0),o=this.__closestGroupOrSvg(),o.appendChild(n),this.__currentElement=n,this.__applyStyleToCurrentElement(\"stroke\")},l.prototype.clearRect=function(t,e,r,i){var n,o=this.__closestGroupOrSvg();n=this.__createElement(\"rect\",{x:t,y:e,width:r,height:i,fill:\"#FFFFFF\"},!0),o.appendChild(n)},l.prototype.createLinearGradient=function(t,e,r,n){var o=this.__createElement(\"linearGradient\",{id:i(this.__ids),x1:t+\"px\",x2:r+\"px\",y1:e+\"px\",y2:n+\"px\",gradientUnits:\"userSpaceOnUse\"},!1);return this.__defs.appendChild(o),new h(o,this)},l.prototype.createRadialGradient=function(t,e,r,n,o,a){var s=this.__createElement(\"radialGradient\",{id:i(this.__ids),cx:n+\"px\",cy:o+\"px\",r:a+\"px\",fx:t+\"px\",fy:e+\"px\",gradientUnits:\"userSpaceOnUse\"},!1);return this.__defs.appendChild(s),new h(s,this)},l.prototype.__parseFont=function(){var t=/^\\s*(?=(?:(?:[-a-z]+\\s*){0,2}(italic|oblique))?)(?=(?:(?:[-a-z]+\\s*){0,2}(small-caps))?)(?=(?:(?:[-a-z]+\\s*){0,2}(bold(?:er)?|lighter|[1-9]00))?)(?:(?:normal|\\1|\\2|\\3)\\s*){0,3}((?:xx?-)?(?:small|large)|medium|smaller|larger|[.\\d]+(?:\\%|in|[cem]m|ex|p[ctx]))(?:\\s*\\/\\s*(normal|[.\\d]+(?:\\%|in|[cem]m|ex|p[ctx])))?\\s*([-,\\\"\\sa-z]+?)\\s*$/i,e=t.exec(this.font),r={style:e[1]||\"normal\",size:e[4]||\"10px\",family:e[6]||\"sans-serif\",weight:e[3]||\"normal\",decoration:e[2]||\"normal\",href:null};return\"underline\"===this.__fontUnderline&&(r.decoration=\"underline\"),this.__fontHref&&(r.href=this.__fontHref),r},l.prototype.__wrapTextLink=function(t,e){if(t.href){var r=this.__createElement(\"a\");return r.setAttributeNS(\"http://www.w3.org/1999/xlink\",\"xlink:href\",t.href),r.appendChild(e),r}return e},l.prototype.__applyText=function(t,e,r,i){var n=this.__parseFont(),s=this.__closestGroupOrSvg(),l=this.__createElement(\"text\",{\"font-family\":n.family,\"font-size\":n.size,\"font-style\":n.style,\"font-weight\":n.weight,\"text-decoration\":n.decoration,x:e,y:r,\"text-anchor\":o(this.textAlign),\"dominant-baseline\":a(this.textBaseline)},!0);l.appendChild(this.__document.createTextNode(t)),this.__currentElement=l,this.__applyStyleToCurrentElement(i),s.appendChild(this.__wrapTextLink(n,l))},l.prototype.fillText=function(t,e,r){this.__applyText(t,e,r,\"fill\")},l.prototype.strokeText=function(t,e,r){this.__applyText(t,e,r,\"stroke\")},l.prototype.measureText=function(t){return this.__ctx.font=this.font,this.__ctx.measureText(t)},l.prototype.arc=function(t,e,i,n,o,a){if(n!==o){n%=2*Math.PI,o%=2*Math.PI,n===o&&(o=(o+2*Math.PI-.001*(a?-1:1))%(2*Math.PI));var s=t+i*Math.cos(o),l=e+i*Math.sin(o),h=t+i*Math.cos(n),c=e+i*Math.sin(n),p=a?0:1,u=0,d=o-n;d<0&&(d+=2*Math.PI),u=a?d>Math.PI?0:1:d>Math.PI?1:0,this.lineTo(h,c),this.__addPathCommand(r(\"A {rx} {ry} {xAxisRotation} {largeArcFlag} {sweepFlag} {endX} {endY}\",{rx:i,ry:i,xAxisRotation:0,largeArcFlag:u,sweepFlag:p,endX:s,endY:l})),this.__currentPosition={x:s,y:l}}},l.prototype.clip=function(){var t=this.__closestGroupOrSvg(),e=this.__createElement(\"clipPath\"),n=i(this.__ids),o=this.__createElement(\"g\");t.removeChild(this.__currentElement),e.setAttribute(\"id\",n),e.appendChild(this.__currentElement),this.__defs.appendChild(e),t.setAttribute(\"clip-path\",r(\"url(#{id})\",{id:n})),t.appendChild(o),this.__currentElement=o},l.prototype.drawImage=function(){var t,e,r,i,n,o,a,s,h,c,p,u,d,_,f,g=Array.prototype.slice.call(arguments),m=g[0],y=0,v=0;if(3===g.length)t=g[1],e=g[2],n=m.width,o=m.height,r=n,i=o;else if(5===g.length)t=g[1],e=g[2],r=g[3],i=g[4],n=m.width,o=m.height;else{if(9!==g.length)throw new Error(\"Inavlid number of arguments passed to drawImage: \"+arguments.length);y=g[1],v=g[2],n=g[3],o=g[4],t=g[5],e=g[6],r=g[7],i=g[8]}if(a=this.__closestGroupOrSvg(),p=this.__currentElement,m instanceof l){for(s=m.getSvg(),h=s.childNodes[0];h.childNodes.length;)f=h.childNodes[0].getAttribute(\"id\"),this.__ids[f]=f,this.__defs.appendChild(h.childNodes[0]);c=s.childNodes[1],a.appendChild(c),this.__currentElement=c,this.translate(t,e),this.__currentElement=p}else\"CANVAS\"!==m.nodeName&&\"IMG\"!==m.nodeName||(u=this.__createElement(\"image\"),u.setAttribute(\"width\",r),u.setAttribute(\"height\",i),u.setAttribute(\"preserveAspectRatio\",\"none\"),(y||v||n!==m.width||o!==m.height)&&(d=this.__document.createElement(\"canvas\"),d.width=r,d.height=i,_=d.getContext(\"2d\"),_.drawImage(m,y,v,n,o,0,0,r,i),m=d),u.setAttributeNS(\"http://www.w3.org/1999/xlink\",\"xlink:href\",\"CANVAS\"===m.nodeName?m.toDataURL():m.getAttribute(\"src\")),a.appendChild(u),this.__currentElement=u,this.translate(t,e),this.__currentElement=p)},l.prototype.createPattern=function(t,e){var r,n=this.__document.createElementNS(\"http://www.w3.org/2000/svg\",\"pattern\"),o=i(this.__ids);return n.setAttribute(\"id\",o),n.setAttribute(\"width\",t.width),n.setAttribute(\"height\",t.height),\"CANVAS\"===t.nodeName||\"IMG\"===t.nodeName?(r=this.__document.createElementNS(\"http://www.w3.org/2000/svg\",\"image\"),r.setAttribute(\"width\",t.width),r.setAttribute(\"height\",t.height),r.setAttributeNS(\"http://www.w3.org/1999/xlink\",\"xlink:href\",\"CANVAS\"===t.nodeName?t.toDataURL():t.getAttribute(\"src\")),n.appendChild(r),this.__defs.appendChild(n)):t instanceof l&&(n.appendChild(t.__root.childNodes[1]),this.__defs.appendChild(n)),new c(n,this)},l.prototype.drawFocusRing=function(){},l.prototype.createImageData=function(){},l.prototype.getImageData=function(){},l.prototype.putImageData=function(){},l.prototype.globalCompositeOperation=function(){},l.prototype.setTransform=function(){},\"object\"===(\"undefined\"==typeof window?\"undefined\":e(window))&&(window.C2S=l),\"object\"===e(t)&&\"object\"===e(t.exports)&&(t.exports=l)}()}).call(e,r(2)(t))},function(t,e){t.exports=function(t){return t.webpackPolyfill||(t.deprecate=function(){},t.paths=[],t.children=[],t.webpackPolyfill=1),t}}])});","require('./dist/js/angular-aside');\nmodule.exports = 'ngAside';","\n/*!\n * angular-aside - v1.4.0\n * https://github.com/dbtek/angular-aside\n * 2017-03-27\n * Copyright (c) 2017 İsmail Demirbilek\n * License: MIT\n */\n\n(function() {\n  'use strict';\n\n  /**\n   * @ngdoc overview\n   * @name ngAside\n   * @description\n   * Main module for aside component.\n   * @function\n   * @author İsmail Demirbilek\n   */\n  angular.module('ngAside', ['ui.bootstrap.modal']);\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('ngAside')\n    /**\n     * @ngdoc service\n     * @name ngAside.services:$aside\n     * @description\n     * Factory to create a uibModal instance to use it as aside. It simply wraps $uibModal by overriding open() method and sets a class on modal window.\n     * @function\n     */\n    .factory('$aside', ['$uibModal', function($uibModal) {\n      var defaults = this.defaults = {\n        placement: 'left'\n      };\n\n      var asideFactory = {\n        // override open method\n        open: function(config) {\n          var options = angular.extend({}, defaults, config);\n          // check placement is set correct\n          if(['left', 'right', 'bottom', 'top'].indexOf(options.placement) === -1) {\n            options.placement = defaults.placement;\n          }\n          var vertHoriz = ['left', 'right'].indexOf(options.placement) === -1 ? 'vertical' : 'horizontal';\n          // set aside classes\n          options.windowClass  = 'ng-aside ' + vertHoriz + ' ' + options.placement + (options.windowClass ? ' ' + options.windowClass : '');\n          delete options.placement\n          return $uibModal.open(options);\n        }\n      };\n\n      // create $aside as extended $uibModal\n      var $aside = angular.extend({}, $uibModal, asideFactory);\n      return $aside;\n    }]);\n})();\n","export const METADATA = {\n  LOADED: \"metadata.loaded\",\n  ERROR: \"metadata.error\",\n  EMPTY: \"metadata.empty\",\n  UPDATED: \"metadata.updated\",\n  TEMPLATE: \"metadata.template\",\n  ALL_FIELDS: \"metadata.all_fields\"\n};\n\nexport const TREE = {\n  NOT_LOADED: \"tree.notLoaded\",\n  COMPLETED: \"tree.completed\",\n  EXPORT_SVG: \"tree.export.svg\"\n};\n\nexport const TEMPLATES = {\n  ERROR: \"templates.error\"\n};\n","import angular from \"angular\";\nimport { METADATA } from \"../../constants\";\n\n/**\n * Controller for the side panel that displays\n * all the possible metadata terms to toggle.\n */\nclass MetadataAsideController {\n  /**\n   * Constructor\n   * @param {object} $uibModalInstance  angular-ui modal instance.\n   * @param {object} parent parent controller.\n   */\n  constructor($uibModalInstance, parent) {\n    this.terms = parent.terms;\n    this.parent = parent;\n    this.modal = $uibModalInstance;\n  }\n\n  /**\n   * EventListener for changes to the visibility of a metadata term.\n   */\n  termSelectionChange() {\n    this.parent.handleTermVisibilityChange();\n  }\n\n  /**\n   * EventHandler for closing the sidebar.\n   */\n  close() {\n    this.modal.dismiss();\n  }\n}\n\nMetadataAsideController.$inject = [\"$uibModalInstance\", \"parent\"];\n\n/**\n * Controller for the button to toggle the metadata side panel.\n */\nclass MetadataButtonController {\n  /**\n   * Constructor\n   * @param {object} $rootScope angular scope handler for the root of the application\n   * @param {object} $scope angular scope for current dom\n   * @param {object} $aside angular-aside object.\n   */\n  constructor($rootScope, $scope, $aside) {\n    this.$rootScope = $rootScope;\n    this.$aside = $aside;\n    this.terms = [];\n\n    // Register listeners\n    $scope.$on(METADATA.TEMPLATE, (e, args) => {\n      const { fields } = args;\n      const existing = angular.copy(this.terms);\n      const newOrder = [];\n\n      if (fields) {\n        // Add the visible fields in order\n        fields.forEach(field => {\n          const index = existing.findIndex(t => {\n            return t.term === field;\n          });\n          if (index >= 0) {\n            const item = existing.splice(index, 1)[0];\n            item.selected = true;\n            newOrder.push(item);\n          }\n        });\n      }\n\n      // Hide remainder of fields;\n      // typeof fields === 'undefined' would evaluate to try only for the show all fields option.\n      const showFields = typeof fields === \"undefined\";\n      existing.forEach(term => {\n        term.selected = showFields;\n        newOrder.push(term);\n      });\n\n      // Update the UI;\n      this.terms = newOrder;\n      this.handleTermVisibilityChange();\n    });\n\n    $scope.$on(METADATA.LOADED, (event, args) => {\n      const { terms } = args;\n      this.terms = terms.map(term => {\n        return {\n          term,\n          selected: true\n        };\n      });\n    });\n  }\n\n  /**\n   * EventHandler toggling metadata visibility.\n   */\n  handleTermVisibilityChange() {\n    const columns = this.terms\n      .filter(term => term.selected)\n      .map(term => term.term);\n    this.$rootScope.$broadcast(METADATA.UPDATED, { columns });\n  }\n\n  /**\n   * EventHandler for displaying the side panel.\n   */\n  openMetadataAside() {\n    const parent = this;\n\n    // Open the Aside to let the user select terms.\n    this.$aside.open({\n      templateUrl: `metadataAside.tmpl.html`,\n      placement: `left`,\n      size: \"sm\",\n      openedClass: \"metadata-open\",\n      controllerAs: \"$ctrl\",\n      controller: MetadataAsideController,\n      resolve: {\n        parent() {\n          return parent;\n        }\n      }\n    });\n  }\n}\n\nMetadataButtonController.$inject = [\"$rootScope\", \"$scope\", \"$aside\"];\n\nexport const MetadataButton = {\n  bindings: {\n    metadataUrl: \"@\" // Pass in the metadata url from the UI.\n  },\n  templateUrl: \"metadataButton.tmpl.html\",\n  controller: MetadataButtonController\n};\n","class MetadataController {}\n\nexport const MetadataComponent = {\n  bindings: {\n    terms: \"<\",\n    onSelectionChange: \"&\"\n  },\n  templateUrl: \"metadata-component.tmpl.html\",\n  controller: MetadataController\n};\n","import chroma from \"chroma-js\";\nimport { METADATA } from \"./../../constants\";\n\nconst EMPTY_COLOUR = \"rgba(0,0,0,0)\";\n\n/**\n * Format the metadata into an object that can be conssome by Phylocanvas.\n *  { leaf-label: { templateMetadataField : { label, color} }}\n * @param {array} metadata list of metaterms for the samples.\n * @param {array} metadataFieldLabels list of metadata field labels\n * @return {object} Map of metadata with colours for Phylocanvas to consume.\n */\nconst formatMetadata = (metadata, metadataFieldLabels) => {\n  const result = {};\n  const colourMap = {};\n  const sampleNames = Object.keys(metadata);\n\n  for (const sampleName of sampleNames) {\n    const sampleMetadata = metadata[sampleName];\n    result[sampleName] = {};\n    for (const field of metadataFieldLabels) {\n      const metadataLabel = sampleMetadata[field].value;\n\n      if (metadataLabel) {\n        // Find out if the field has already been assigned a colour\n        // If not, get it a new one.\n        colourMap[field] = colourMap[field] || {};\n        colourMap[field][metadataLabel] =\n          colourMap[field][metadataLabel] || chroma.random().css();\n        result[sampleName][field] = {\n          label: metadataLabel,\n          colour: colourMap[field][metadataLabel]\n        };\n      } else {\n        // If the label is empty, then do not give it a colour.\n        result[sampleName][field] = {\n          label: metadataLabel,\n          colour: EMPTY_COLOUR\n        };\n      }\n    }\n  }\n\n  // Add the reference blanks, without this, Phylocanvas will througha fit!\n  const reference = {};\n  metadataFieldLabels.forEach(term => {\n    reference[term] = { label: \"\", colour: EMPTY_COLOUR };\n  });\n  result.reference = reference;\n\n  return result;\n};\n\nexport class MetadataService {\n  constructor($http, $window, $rootScope) {\n    this.$rootScope = $rootScope;\n\n    // Initialize the metadata\n    $http.get($window.PAGE.urls.metadata).then(\n      response => {\n        // Keep a reference to the full list of terms\n        const { terms, metadata } = response.data;\n\n        if (Object.keys(metadata).length && terms.length) {\n          // Set everything up.\n          this.terms = terms;\n          this.metadata = formatMetadata(metadata, terms);\n          $rootScope.$broadcast(METADATA.LOADED, {\n            metadata: this.metadata,\n            terms\n          });\n        } else {\n          this.$rootScope.$broadcast(METADATA.EMPTY);\n        }\n      },\n      () => {\n        this.$rootScope.$broadcast(METADATA.ERROR);\n      }\n    );\n  }\n\n  /**\n   * Find the union between the terms defined in a template, and the terms available in\n   * the metadata returned for the samples.\n   * @param {array} templateTerms List of metadata_template_metadata_field associated with the\n   *                      currently selected template.\n   * @return {array} list of metadata terms to display in Phylocanvas\n   */\n  getSortedAndFilteredColumns(templateTerms) {\n    if (templateTerms) {\n      return templateTerms.filter(term => {\n        return this.terms.includes(term);\n      });\n    }\n    return [];\n  }\n}\n\nMetadataService.$inject = [\"$http\", \"$window\", \"$rootScope\"];\n","import angular from \"angular\";\nimport \"../../../../../vendor/plugins/angular/angular-bootstrap-switch\";\nimport \"angular-aside\";\nimport \"angular-aside/dist/css/angular-aside.css\";\nimport { MetadataButton } from \"./metadata.button.component\";\nimport { MetadataComponent } from \"./metadata.component\";\nimport { MetadataService } from \"./metadata.service\";\n\nexport const MetadataModule = angular\n  .module(\"irida.vis.metadata\", [\"ngAside\", \"frapontillo.bootstrap-switch\"])\n  .service(\"MetadataService\", MetadataService)\n  .component(\"metadataButton\", MetadataButton)\n  .component(\"metadataComponent\", MetadataComponent).name;\n","import angular from \"angular\";\nimport metadataPlugin from \"phylocanvas-plugin-metadata\";\nimport exportSVgPlugin from \"phylocanvas-plugin-export-svg\";\nimport { METADATA, TREE } from \"./../../constants\";\nimport \"../../../../../../sass/pages/phylocanvas-metadata.scss\";\n\nconst PHYLOCANVAS_DIV = \"phylocanvas\";\nconst BOTTOM_PADDING = 180;\n\n/*\n  Initial settings for displaying the metadata.\n */\nconst metadataFormat = {\n  showHeaders: true,\n  showLabels: true,\n  blockLength: 32,\n  blockSize: 32,\n  padding: 25,\n  columns: [],\n  propertyName: \"data\",\n  underlineHeaders: true,\n  headerAngle: 0,\n  fillStyle: \"black\",\n  strokeStyle: \"black\",\n  lineWidth: 1\n};\n\n/**\n * Updates th size of the canvas to be the size of the available space in teh window.\n * @param {object} $window angular window object.\n */\nconst setCanvasHeight = $window => {\n  const canvas = document.querySelector(`#${PHYLOCANVAS_DIV}`);\n  canvas.style.height = `${$window.innerHeight - BOTTOM_PADDING}px`;\n};\n\n/**\n * Angular controller function for this scope.\n * @param {object} $window AngularJS window object\n * @param {object} $scope AngularJS $scope object for current dom\n * @param {object} $q AngularJS promise object\n * @param {object} Phylocanvas angular injection of the Phylocanvas library.\n * @param {object} PhylocanvasService angular service for server exchanges for newick data\n * @param {object} MetadataService angular service for getting metedata terms\n */\nfunction phylocanvasController(\n  $window,\n  $scope,\n  $q,\n  Phylocanvas,\n  PhylocanvasService,\n  MetadataService\n) {\n  // Make the canvas fill the viewable window.\n  setCanvasHeight($window);\n\n  // Initialize the plugins.\n  Phylocanvas.plugin(metadataPlugin);\n  Phylocanvas.plugin(exportSVgPlugin);\n\n  // Initialize phylocanvas.\n  const tree = Phylocanvas.createTree(PHYLOCANVAS_DIV, {\n    lineWidth: 2,\n    metadata: metadataFormat\n  });\n\n  const promises = [];\n\n  // Create a promise for when the metadata is given.\n  const metadataPromise = $q.defer();\n  promises.push(metadataPromise.promise);\n\n  this.$onInit = () => {\n    /**\n     * Kick everything off by getting the newick file and the\n     * initial metadata.\n     */\n    const newickPromise = PhylocanvasService.getNewickData(this.newickurl).then(\n      result => result,\n      () => {\n        $scope.$emit(TREE.NOT_LOADED);\n      }\n    );\n    promises.push(newickPromise);\n\n    // Create the tree when the promises complete.\n    $q.all(promises).then(results => {\n      const newick = results[1];\n      if (angular.isString(newick)) {\n        tree.load(newick);\n      }\n      $scope.$emit(TREE.COMPLETED);\n    });\n  };\n\n  // Set tree defaults\n  tree.setTreeType(\"rectangular\");\n  tree.alignLabels = true;\n\n  /**\n   * Listen for changes to the metadata structure and update\n   * the phylocanvas accordingly.\n   */\n  $scope.$on(METADATA.UPDATED, (event, args) => {\n    if (args.columns.length > 0) {\n      tree.metadata.active = true;\n      tree.metadata.columns = args.columns;\n    } else {\n      tree.metadata.active = false;\n    }\n    tree.draw();\n    tree.fitInPanel();\n    tree.draw();\n  });\n\n  $scope.$on(METADATA.EMPTY, () => {\n    metadataPromise.resolve();\n  });\n\n  $scope.$on(METADATA.LOADED, (event, args) => {\n    const { metadata } = args;\n    // Add the metadata to the branches before the tree is drawn.\n    tree.on(\"beforeFirstDraw\", () => {\n      for (const leaf of tree.leaves) {\n        leaf.data = metadata[leaf.label];\n      }\n    });\n    metadataPromise.resolve();\n  });\n\n  /**\n   * Lister for when a metadata template is applied.\n   * This forces phylocanvas to updates the metadata fields displayed.\n   */\n  $scope.$on(METADATA.TEMPLATE, (event, args) => {\n    const { fields } = args;\n    tree.metadata.columns = MetadataService.getSortedAndFilteredColumns(fields);\n    tree.draw();\n    tree.fitInPanel();\n    tree.draw();\n  });\n\n  /**\n   * Listener for notification to export the phylocanvas image as an SVG.\n   */\n  $scope.$on(TREE.EXPORT_SVG, () => {\n    const svg = tree.exportSVG.getSerialisedSVG();\n    const url = `data:image/svg+xml;charset=utf-8,${encodeURIComponent(svg)}`;\n    const link = document.createElement(\"a\");\n    link.href = url;\n    document.body.appendChild(link);\n    link.download = `tree-${Date.now()}.svg`;\n    link.click();\n    document.body.removeChild(link);\n  });\n}\n\nphylocanvasController.$inject = [\n  \"$window\",\n  \"$scope\",\n  \"$q\",\n  \"Phylocanvas\",\n  \"PhylocanvasService\",\n  \"MetadataService\"\n];\n\nexport const PhylocanvasComponent = {\n  bindings: {\n    newickurl: \"@\"\n  },\n  templateUrl: \"phylocanvas.tmpl.html\",\n  controller: phylocanvasController\n};\n","export class PhylocanvasService {\n  constructor($http) {\n    this.$http = $http;\n  }\n\n  getNewickData(url) {\n    return this.$http.get(url).then(response => response.data.newick);\n  }\n}\n\nPhylocanvasService.$inject = [\"$http\"];\n","import angular from \"angular\";\nimport Phylocanvas from \"phylocanvas\";\nimport { PhylocanvasComponent } from \"./phylocanvas.component\";\nimport { PhylocanvasService } from \"./phylocanvas.service\";\n\nexport const PhylocanvasModule = angular\n  .module(\"irida.vis.phylocanvas\", [])\n  .value(\"Phylocanvas\", Phylocanvas)\n  .component(\"phylocanvasComponent\", PhylocanvasComponent)\n  .service(\"PhylocanvasService\", PhylocanvasService).name;\n","import { METADATA, TEMPLATES } from \"./../../constants\";\n\n/**\n * Controller for the TemplateComponent\n * @param {object} $rootScope angular root scope\n * @param {object} TemplateService angular service\n */\nfunction templateController($rootScope, TemplateService) {\n  this.$onInit = () => {\n    // Get a list of templates that can be rendered\n    this.templates = [];\n    TemplateService.getTemplates(this.templatesurl).then(\n      templates => {\n        this.templates = templates;\n      },\n      () => {\n        // This will be hit if some of the samples in this analysis\n        // are no longer in the project, therefore the analysis\n        // will need to be re-run without.\n        $rootScope.$broadcast(TEMPLATES.ERROR);\n      }\n    );\n  };\n\n  this.templateChange = () => {\n    if (this.selectedTemplate) {\n      TemplateService.getFieldsForTemplate(\n        this.fieldsurl,\n        this.selectedTemplate\n      ).then(fields => $rootScope.$broadcast(METADATA.TEMPLATE, { fields }));\n    } else {\n      $rootScope.$broadcast(METADATA.TEMPLATE, METADATA.ALL_FIELDS);\n    }\n  };\n}\n\ntemplateController.$inject = [\"$rootScope\", \"TemplateService\"];\n\nexport const TemplateComponent = {\n  bindings: {\n    templatesurl: \"@\",\n    fieldsurl: \"@\"\n  },\n  templateUrl: \"template-component.tmpl.html\",\n  controller: templateController\n};\n","export class TemplateService {\n  constructor($http) {\n    this.$http = $http;\n  }\n\n  getTemplates(url) {\n    return this.$http.get(url).then(result => result.data.templates);\n  }\n\n  getFieldsForTemplate(url, templateId) {\n    return this.$http\n      .get(`${url}?templateId=${templateId}`)\n      .then(result => result.data.fields);\n  }\n}\n\nTemplateService.$inject = [\"$http\"];\n","import angular from \"angular\";\nimport { TemplateComponent } from \"./template.comonent\";\nimport { TemplateService } from \"./template.service\";\n\nexport const TemplateModule = angular\n  .module(\"irida.vis.template\", [])\n  .service(\"TemplateService\", TemplateService)\n  .component(\"templateComponent\", TemplateComponent).name;\n","import { METADATA, TEMPLATES, TREE } from \"./../../constants\";\n\nclass AppController {\n  constructor($scope) {\n    this.loading = true;\n\n    $scope.$on(METADATA.ERROR, () => {\n      this.metadataError = true;\n    });\n\n    $scope.$on(METADATA.EMPTY, () => {\n      this.metadataEmpty = true;\n      this.showEmptyMetadataWarning = true;\n    });\n\n    $scope.$on(METADATA.LOADED, () => {\n      this.metadataLoaded = true;\n    });\n\n    $scope.$on(TREE.NOT_LOADED, () => {\n      this.treeError = true;\n    });\n\n    $scope.$on(TREE.COMPLETED, () => {\n      this.loading = false;\n    });\n\n    $scope.$on(TEMPLATES.ERROR, () => {\n      this.templateError = true;\n      this.loading = false;\n    });\n\n    this.closeEmptyMetadataWarning = () => {\n      this.showEmptyMetadataWarning = false;\n    };\n  }\n}\n\nAppController.$inject = [\"$scope\"];\n\nexport const AppComponent = {\n  transclude: true,\n  controller: AppController,\n  templateUrl: \"app-component.tmpl.html\"\n};\n","import angular from \"angular\";\nimport { TREE } from \"./../../constants\";\n\n/**\n * Angular controller for export phylocanvas as SVG\n * @param {object} $rootScope angularjs dom root element\n */\nfunction exportSVGController($rootScope) {\n  /**\n   * Click handler for exporting the phylocanvas to svg file.\n   */\n  this.exportSVG = function() {\n    $rootScope.$broadcast(TREE.EXPORT_SVG);\n  };\n}\n\nexportSVGController.$inject = [\"$rootScope\"];\n\nconst exportSVGComponent = {\n  templateUrl: \"export-svg-component.tmpl.html\",\n  controller: exportSVGController\n};\n\nexport const ExportSVG = angular\n  .module(\"irida.vis.exportSVG\", [])\n  .component(\"exportSvgComponent\", exportSVGComponent).name;\n","import angular from \"angular\";\nimport { MetadataModule } from \"./../metadata/metadata.module\";\nimport { PhylocanvasModule } from \"./../phylocanvas/phylocanvas.module\";\nimport { TemplateModule } from \"./../templates/template.module\";\nimport { AppComponent } from \"./app.component.js\";\nimport { ExportSVG } from \"./../svgExport/svg-export.module\";\n\nexport const AppModule = angular\n  .module(\"irida.vis.errors\", [\n    MetadataModule,\n    PhylocanvasModule,\n    TemplateModule,\n    ExportSVG\n  ])\n  .component(\"appComponent\", AppComponent).name;\n","import angular from \"angular\";\nimport { AppModule } from \"./components/app/app.module\";\n\nconst app = angular.module(\"irida\");\napp.requires.push(AppModule);\n"],"sourceRoot":""}